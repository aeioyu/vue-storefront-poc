{"version":3,"file":"index.cjs.js","sources":["../src/fragments/index.ts","../src/types/Api.ts","../src/types/GraphQL.ts","../src/helpers/cart/actions.ts"],"sourcesContent":["export const ProductPriceFragment = `\n  fragment DefaultProductPrice on ProductPrice {\n    discounted {\n      value {\n        type\n        currencyCode\n        centAmount\n        fractionDigits\n      }\n      discount {\n        validFrom\n        validUntil\n        isActive\n        name(acceptLanguage: $acceptLanguage)\n      }\n    }\n    value {\n      type\n      currencyCode\n      centAmount\n      fractionDigits\n    }\n  }\n`;\n\nexport const AddressFragment = `\n  fragment DefaultAddress on Address {\n    id\n    title\n    firstName\n    lastName\n    streetName\n    streetNumber\n    postalCode\n    city\n    country\n    state\n    region\n    company\n    apartment\n    phone\n    mobile\n  }\n`;\n\n// TODO: Remove all address information and update PRO packages to use customQueries when this is implemented: https://github.com/DivanteLtd/vue-storefront/issues/5049\nexport const CustomerFragment = `\n  ${AddressFragment}\n\n  fragment DefaultCustomer on Customer {\n    version\n    firstName\n    lastName\n    email\n    addresses {\n      id\n    }\n    shippingAddresses {\n      ...DefaultAddress\n    }\n    billingAddresses {\n      ...DefaultAddress\n    }\n    defaultBillingAddressId\n    defaultShippingAddressId\n  }\n`;\n\nexport const LineItemFragment = `\n  ${ProductPriceFragment}\n\n  fragment DefaultLineItem on LineItem {\n    id\n    productId\n    name(acceptLanguage: $acceptLanguage)\n    productSlug(acceptLanguage: $acceptLanguage)\n    quantity\n    discountedPricePerQuantity {\n      quantity\n      discountedPrice {\n        value {\n          centAmount\n        }\n        includedDiscounts {\n          discount {\n            name(acceptLanguage: $acceptLanguage)\n            isActive\n          }\n        }\n      }\n    }\n    variant {\n      id\n      sku\n      price(currency: \"USD\") {\n        tiers {\n          value {\n            centAmount\n          }\n        }\n        value {\n          centAmount\n        }\n        discounted {\n          value {\n            centAmount\n          }\n          discount {\n            isActive\n            name(acceptLanguage: $acceptLanguage)\n          }\n        }\n      }\n      images {\n        url\n        label\n      }\n      attributesRaw {\n        name\n        value\n        attributeDefinition {\n          type {\n            name\n          }\n          label(locale: $locale)\n        }\n      }\n    }\n    price {\n      ...DefaultProductPrice\n    }\n  }\n`;\n\nexport const ShippingMethodFragment = `\n  fragment DefaultShippingMethod on ShippingMethod {\n    id\n    version\n    name\n    isDefault\n    localizedDescription(acceptLanguage: $acceptLanguage)\n    zoneRates {\n      zone {\n        id\n        name\n      }\n      shippingRates {\n        freeAbove {\n          type\n          centAmount\n        }\n        isMatching\n        price {\n          centAmount\n        }\n      }\n    }\n  }\n`;\n\nexport const CartFragment = `\n  ${AddressFragment}\n  ${CustomerFragment}\n  ${LineItemFragment}\n  ${ShippingMethodFragment}\n\n  fragment DefaultCart on Cart {\n    id\n    customerId\n    customerEmail\n    lineItems {\n      ...DefaultLineItem\n    }\n    totalPrice {\n      centAmount\n    }\n    shippingAddress {\n      ...DefaultAddress\n    }\n    billingAddress {\n      ...DefaultAddress\n    }\n    customer {\n      ...DefaultCustomer\n    }\n    totalPrice {\n      centAmount\n    }\n    taxedPrice {\n      totalNet {\n        centAmount\n      }\n      totalGross {\n        centAmount\n      }\n    }\n    paymentInfo {\n      payments {\n        id\n      }\n    }\n    shippingInfo {\n      price {\n        centAmount\n      }\n      shippingMethod {\n        ...DefaultShippingMethod\n      }\n    }\n    discountCodes {\n      discountCode {\n        id\n        code\n        isActive\n        validFrom\n        validUntil\n        name(acceptLanguage: $acceptLanguage)\n      }\n    }\n    refusedGifts {\n      isActive\n      validFrom\n      validUntil\n      name(acceptLanguage: $acceptLanguage)\n    }\n    custom {\n      customFieldsRaw {\n        name\n        value\n      }\n    }\n    cartState\n    version\n  }\n`;\n\nexport const OrderFragment = `\n  ${AddressFragment}\n  ${LineItemFragment}\n\n  fragment DefaultOrder on Order {\n    lineItems {\n      ...DefaultLineItem\n    }\n    totalPrice {\n      centAmount\n    }\n    orderState\n    id\n    orderNumber\n    version\n    createdAt\n    customerEmail\n    shipmentState\n    paymentState\n    shippingAddress {\n      ...DefaultAddress\n    }\n    billingAddress {\n      ...DefaultAddress\n    }\n    cart {\n      id\n      version\n    }\n  }\n`;\n\n","import { ApolloQueryResult } from 'apollo-client';\nimport { FetchResult } from 'apollo-link';\nimport { ApiClientMethods } from '@vue-storefront/core';\nimport { Token, CustomerCredentials } from './setup';\nimport { UpdateCartParams } from '../api/updateCart';\nimport { GetMeParams } from '../api/getMe';\nimport { ShippingMethodData } from '../api/getShippingMethods';\nimport {\n  Cart,\n  Order,\n  ShippingMethod,\n  CustomerSignInResult,\n  Customer,\n  CartDraft,\n  ProductVariant,\n  OrderMyCartCommand,\n  CustomerSignMeInDraft,\n  CustomerSignMeUpDraft,\n  ReferenceInput,\n  Address,\n  LineItem,\n  CategoryQueryResult,\n  ProductQueryResult,\n  Me,\n  CartQueryInterface\n} from './GraphQL';\n\nexport interface BaseSearch {\n  limit?: number;\n  offset?: number;\n  sort?: string[];\n}\n\nexport enum AttributeType {\n  STRING = 'StringAttribute',\n  DATE = 'DateAttribute',\n  DATETIME = 'DateTimeAttribute',\n  TIME = 'TimeAttribute',\n  NUMBER = 'NumberAttribute',\n  ENUM = 'EnumAttribute',\n  LOCALIZED_ENUM = 'LocalizedEnumAttribute',\n  LOCALIZED_STRING = 'LocalizedStringAttribute',\n  MONEY = 'MoneyAttribute',\n  BOOLEAN = 'BooleanAttribute'\n}\n\nexport interface Filter {\n  type: AttributeType;\n  name: string;\n  value: any;\n}\n\nexport interface ProductWhereSearch extends BaseSearch {\n  catId?: string | string[];\n  skus?: string[];\n  slug?: string;\n  id?: string;\n  filters?: Filter[];\n}\n\nexport interface FilterOption {\n  label: string;\n  value: string | number | boolean | [number, number] | [string, string];\n  selected: boolean;\n}\n\nexport interface CategoryWhereSearch extends BaseSearch {\n  catId?: string;\n  slug?: string;\n}\n\nexport interface OrderWhereSearch extends BaseSearch {\n  id?: string;\n}\n\nexport interface FlowOptions {\n  currentToken?: Token;\n  customerCredentials?: CustomerCredentials;\n  requireUserSession?: boolean;\n}\n\nexport interface CartData extends Omit<CartDraft, 'currency'> {\n  currency?: string;\n}\n\nexport type QueryResponse<K extends string, V> = ApolloQueryResult<Record<K, V>>;\nexport type MutationResponse<K extends string, V> = FetchResult<Record<K, V>>;\nexport type CartQueryResponse = QueryResponse<'cart', Cart>;\nexport type OrderQueryResponse = QueryResponse<'order', Order>;\nexport type CartMutationResponse = MutationResponse<'cart', Cart>;\nexport type CartResponse = CartQueryResponse | CartMutationResponse;\nexport type OrderMutationResponse = MutationResponse<'order', Order>;\nexport type OrderResponse = OrderQueryResponse | OrderMutationResponse;\nexport type ShippingMethodsResponse = QueryResponse<'shippingMethods', ShippingMethod>;\nexport type SignInResponse = QueryResponse<'user', CustomerSignInResult>;\nexport type ChangeMyPasswordResponse = QueryResponse<'user', Customer>;\n\ninterface ApiMethods {\n  addToCart ({ id, version }: Cart, product: ProductVariant, quantity: number): Promise<CartResponse>;\n  applyCartCoupon (cart: Cart, discountCode: string): Promise<CartResponse>;\n  createCart (cartDraft?: CartData): Promise<{ data: CartQueryInterface }>;\n  createMyOrderFromCart (draft: OrderMyCartCommand): Promise<OrderMutationResponse>;\n  customerChangeMyPassword (version: any, currentPassword: string, newPassword: string): Promise<ChangeMyPasswordResponse>;\n  customerSignMeIn (draft: CustomerSignMeInDraft): Promise<SignInResponse>;\n  customerSignMeUp (draft: CustomerSignMeUpDraft): Promise<SignInResponse>;\n  customerSignOut (): Promise<void>;\n  customerUpdateMe (currentUser, updatedUserData): Promise<any>;\n  getCart (cartId: string): Promise<CartQueryResponse>;\n  getCategory (params): Promise<QueryResponse<'categories', CategoryQueryResult>>;\n  getMe (params?: GetMeParams): Promise<{ data: { me: Me } }>;\n  getOrders (params): Promise<{ data: { me: Me } }>;\n  getProduct (params): Promise<QueryResponse<'products', ProductQueryResult>>;\n  getShippingMethods (cartId?: string): Promise<ShippingMethodData>;\n  removeCartCoupon (cart: Cart, discountCode: ReferenceInput): Promise<CartResponse>;\n  removeFromCart (cart: Cart, product: LineItem): Promise<CartResponse>;\n  updateCart (params: UpdateCartParams): Promise<CartResponse>;\n  updateCartQuantity (cart: Cart, product: LineItem): Promise<CartResponse>;\n  updateShippingDetails (cart: Cart, shippingDetails: Address): Promise<CartResponse>;\n  isGuest: () => boolean;\n}\n\nexport type CommercetoolsMethods = ApiClientMethods<ApiMethods>\n","/* istanbul ignore file */\n\nexport type Maybe<T> = T | null;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** The `Long` scalar type represents non-fractional signed whole numeric values.\n   * Long can represent values between -(2^63) and 2^63 - 1.\n   */\n  Long: any;\n  /** DateTime is a scalar value that represents an ISO8601 formatted date and time. */\n  DateTime: any;\n  /** [ISO 3166-1](http://en.wikipedia.org/wiki/ISO_3166-1) country code. */\n  Country: any;\n  /** Locale is a scalar value represented as a string language tag. */\n  Locale: any;\n  /** DateTime is a scalar value that represents an ISO8601 formatted date. */\n  Date: any;\n  /** Raw JSON value */\n  Json: any;\n  /** Represents a currency. Currencies are identified by their [ISO\n   * 4217](http://www.iso.org/iso/home/standards/currency_codes.htm) currency codes.\n   */\n  Currency: any;\n  /** A key that references a resource. */\n  KeyReferenceInput: any;\n  /** Search filter. It is represented as a string and has th same format as in REST API: \"field:filter_criteria\" */\n  SearchFilter: any;\n  /** Search sort */\n  SearchSort: any;\n  /** YearMonth is a scalar value that represents an ISO8601 formatted year and month. */\n  YearMonth: any;\n  /** The `BigDecimal` scalar type represents signed fractional values with arbitrary precision. */\n  BigDecimal: any;\n  /** Time is a scalar value that represents an ISO8601 formatted time. */\n  Time: any;\n};\n\nexport type AbsoluteDiscountValue = CartDiscountValue &\n  ProductDiscountValue & {\n    __typename?: \"AbsoluteDiscountValue\";\n    money: Array<Money>;\n    type: Scalars[\"String\"];\n  };\n\nexport type AbsoluteDiscountValueInput = {\n  money: Array<MoneyInput>;\n};\n\n/** A field to access the active cart. */\nexport type ActiveCartInterface = {\n  activeCart?: Maybe<Cart>;\n};\n\nexport type AddAttributeDefinition = {\n  attributeDefinition: AttributeDefinitionDraft;\n};\n\nexport type AddCartCustomLineItem = {\n  shippingDetails?: Maybe<ItemShippingDetailsDraft>;\n  custom?: Maybe<CustomFieldsDraft>;\n  quantity?: Maybe<Scalars[\"Long\"]>;\n  externalTaxRate?: Maybe<ExternalTaxRateDraft>;\n  taxCategory?: Maybe<ResourceIdentifierInput>;\n  slug: Scalars[\"String\"];\n  money: BaseMoneyInput;\n  name: Array<LocalizedStringItemInputType>;\n};\n\nexport type AddCartDiscountCode = {\n  code: Scalars[\"String\"];\n  validateDuplicates?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type AddCartItemShippingAddress = {\n  address: AddressInput;\n};\n\nexport type AddCartLineItem = {\n  shippingDetails?: Maybe<ItemShippingDetailsDraft>;\n  externalTotalPrice?: Maybe<ExternalLineItemTotalPriceDraft>;\n  externalPrice?: Maybe<BaseMoneyInput>;\n  externalTaxRate?: Maybe<ExternalTaxRateDraft>;\n  custom?: Maybe<CustomFieldsDraft>;\n  catalog?: Maybe<ReferenceInput>;\n  distributionChannel?: Maybe<ResourceIdentifierInput>;\n  supplyChannel?: Maybe<ResourceIdentifierInput>;\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  quantity?: Maybe<Scalars[\"Long\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  productId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type AddCartPayment = {\n  payment: ResourceIdentifierInput;\n};\n\nexport type AddCartShoppingList = {\n  shoppingList: ResourceIdentifierInput;\n  supplyChannel?: Maybe<ResourceIdentifierInput>;\n  distributionChannel?: Maybe<ResourceIdentifierInput>;\n};\n\nexport type AddCategoryAsset = {\n  position?: Maybe<Scalars[\"Int\"]>;\n  asset: AssetDraftInput;\n};\n\nexport type AddCustomerAddress = {\n  address: AddressInput;\n};\n\nexport type AddCustomerBillingAddressId = {\n  addressId: Scalars[\"String\"];\n};\n\nexport type AddCustomerShippingAddressId = {\n  addressId: Scalars[\"String\"];\n};\n\nexport type AddCustomerStore = {\n  store: ResourceIdentifierInput;\n};\n\nexport type AddInventoryEntryQuantity = {\n  quantity: Scalars[\"Long\"];\n};\n\nexport type AddLocalizedEnumValue = {\n  attributeName: Scalars[\"String\"];\n  value: LocalizedEnumValueDraft;\n};\n\nexport type AddMyCartLineItem = {\n  shippingDetails?: Maybe<ItemShippingDetailsDraft>;\n  custom?: Maybe<CustomFieldsDraft>;\n  catalog?: Maybe<ReferenceInput>;\n  distributionChannel?: Maybe<ResourceIdentifierInput>;\n  supplyChannel?: Maybe<ResourceIdentifierInput>;\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  quantity?: Maybe<Scalars[\"Long\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  productId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type AddOrderDelivery = {\n  items?: Maybe<Array<DeliveryItemDraftType>>;\n  parcels?: Maybe<Array<DeliveryItemDraftType>>;\n  address?: Maybe<AddressInput>;\n};\n\nexport type AddOrderItemShippingAddress = {\n  address: AddressInput;\n};\n\nexport type AddOrderParcelToDelivery = {\n  deliveryId: Scalars[\"String\"];\n  measurements?: Maybe<ParcelMeasurementsDraftType>;\n  trackingData?: Maybe<TrackingDataDraftType>;\n  items?: Maybe<Array<DeliveryItemDraftType>>;\n};\n\nexport type AddOrderPayment = {\n  payment: ResourceIdentifierInput;\n};\n\nexport type AddOrderReturnInfo = {\n  items: Array<ReturnItemDraftType>;\n  returnDate?: Maybe<Scalars[\"DateTime\"]>;\n  returnTrackingId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type AddPlainEnumValue = {\n  attributeName: Scalars[\"String\"];\n  value: PlainEnumValueDraft;\n};\n\nexport type AddProductAsset = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  catalog?: Maybe<ReferenceInput>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n  position?: Maybe<Scalars[\"Int\"]>;\n  asset: AssetDraftInput;\n};\n\nexport type AddProductExternalImage = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  image: ImageInput;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type AddProductPrice = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  price: ProductPriceDataInput;\n  catalog?: Maybe<ReferenceInput>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type AddProductToCategory = {\n  category: ResourceIdentifierInput;\n  orderHint?: Maybe<Scalars[\"String\"]>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type AddProductVariant = {\n  assets?: Maybe<Array<AssetDraftInput>>;\n  attributes?: Maybe<Array<ProductAttributeInput>>;\n  images?: Maybe<Array<ImageInput>>;\n  prices?: Maybe<Array<ProductPriceDataInput>>;\n  key?: Maybe<Scalars[\"String\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** An address represents a postal address. */\nexport type Address = {\n  __typename?: \"Address\";\n  id?: Maybe<Scalars[\"String\"]>;\n  title?: Maybe<Scalars[\"String\"]>;\n  salutation?: Maybe<Scalars[\"String\"]>;\n  firstName?: Maybe<Scalars[\"String\"]>;\n  lastName?: Maybe<Scalars[\"String\"]>;\n  streetName?: Maybe<Scalars[\"String\"]>;\n  streetNumber?: Maybe<Scalars[\"String\"]>;\n  additionalStreetInfo?: Maybe<Scalars[\"String\"]>;\n  postalCode?: Maybe<Scalars[\"String\"]>;\n  city?: Maybe<Scalars[\"String\"]>;\n  region?: Maybe<Scalars[\"String\"]>;\n  state?: Maybe<Scalars[\"String\"]>;\n  country: Scalars[\"Country\"];\n  company?: Maybe<Scalars[\"String\"]>;\n  department?: Maybe<Scalars[\"String\"]>;\n  building?: Maybe<Scalars[\"String\"]>;\n  apartment?: Maybe<Scalars[\"String\"]>;\n  pOBox?: Maybe<Scalars[\"String\"]>;\n  contactInfo: AddressContactInfo;\n  additionalAddressInfo?: Maybe<Scalars[\"String\"]>;\n  externalId?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n  phone?: Maybe<Scalars[\"String\"]>;\n  mobile?: Maybe<Scalars[\"String\"]>;\n  email?: Maybe<Scalars[\"String\"]>;\n  fax?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type AddressContactInfo = {\n  __typename?: \"AddressContactInfo\";\n  phone?: Maybe<Scalars[\"String\"]>;\n  mobile?: Maybe<Scalars[\"String\"]>;\n  email?: Maybe<Scalars[\"String\"]>;\n  fax?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type AddressInput = {\n  id?: Maybe<Scalars[\"String\"]>;\n  title?: Maybe<Scalars[\"String\"]>;\n  salutation?: Maybe<Scalars[\"String\"]>;\n  firstName?: Maybe<Scalars[\"String\"]>;\n  lastName?: Maybe<Scalars[\"String\"]>;\n  streetName?: Maybe<Scalars[\"String\"]>;\n  streetNumber?: Maybe<Scalars[\"String\"]>;\n  additionalStreetInfo?: Maybe<Scalars[\"String\"]>;\n  postalCode?: Maybe<Scalars[\"String\"]>;\n  city?: Maybe<Scalars[\"String\"]>;\n  region?: Maybe<Scalars[\"String\"]>;\n  state?: Maybe<Scalars[\"String\"]>;\n  country: Scalars[\"Country\"];\n  company?: Maybe<Scalars[\"String\"]>;\n  department?: Maybe<Scalars[\"String\"]>;\n  building?: Maybe<Scalars[\"String\"]>;\n  apartment?: Maybe<Scalars[\"String\"]>;\n  pOBox?: Maybe<Scalars[\"String\"]>;\n  phone?: Maybe<Scalars[\"String\"]>;\n  mobile?: Maybe<Scalars[\"String\"]>;\n  email?: Maybe<Scalars[\"String\"]>;\n  fax?: Maybe<Scalars[\"String\"]>;\n  additionalAddressInfo?: Maybe<Scalars[\"String\"]>;\n  externalId?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type AddShippingMethodShippingRate = {\n  zone: ResourceIdentifierInput;\n  shippingRate: ShippingRateDraft;\n};\n\nexport type AddShippingMethodZone = {\n  zone: ResourceIdentifierInput;\n};\n\nexport type AddShoppingListLineItem = {\n  addedAt?: Maybe<Scalars[\"DateTime\"]>;\n  custom?: Maybe<CustomFieldsDraft>;\n  quantity?: Maybe<Scalars[\"Int\"]>;\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  productId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type AddShoppingListTextLineItem = {\n  addedAt?: Maybe<Scalars[\"DateTime\"]>;\n  custom?: Maybe<CustomFieldsDraft>;\n  quantity?: Maybe<Scalars[\"Int\"]>;\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n  name: Array<LocalizedStringItemInputType>;\n};\n\nexport type AddZoneLocation = {\n  location: ZoneLocation;\n};\n\nexport enum AnonymousCartSignInMode {\n  /** The anonymous cart is used as new active customer cart. No `LineItem`s get merged. */\n  UseAsNewActiveCustomerCart = \"UseAsNewActiveCustomerCart\",\n  /** `LineItem`s of the anonymous cart will be copied to the customer’s active cart that has been modified most recently.\n   *\n   * The `CartState` of the anonymous cart gets changed to `Merged` while the\n   * `CartState` of the customer’s cart remains `Active`.\n   *\n   * `CustomLineItems` and `CustomFields` of the anonymous cart will not be copied to the customers cart.\n   *\n   * If a `LineItem` in the anonymous cart matches an existing line item in the\n   * customer’s cart (same product ID and variant ID), the maximum quantity of both\n   * LineItems is used as the new quantity. In that case `CustomFields` on the\n   * `LineItem` of the anonymous cart will not be in the resulting `LineItem`.\n   */\n  MergeWithExistingCustomerCart = \"MergeWithExistingCustomerCart\"\n}\n\n/** API Clients can be used to obtain OAuth 2 access tokens */\nexport type ApiClientWithoutSecret = {\n  __typename?: \"APIClientWithoutSecret\";\n  id: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  scope: Scalars[\"String\"];\n  createdAt?: Maybe<Scalars[\"DateTime\"]>;\n  lastUsedAt?: Maybe<Scalars[\"Date\"]>;\n};\n\nexport type ApiClientWithoutSecretQueryResult = {\n  __typename?: \"APIClientWithoutSecretQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<ApiClientWithoutSecret>;\n};\n\n/** API Clients can be used to obtain OAuth 2 access tokens. The secret is only\n * shown once in the response of creating the API Client.\n */\nexport type ApiClientWithSecret = {\n  __typename?: \"APIClientWithSecret\";\n  id: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  scope: Scalars[\"String\"];\n  createdAt?: Maybe<Scalars[\"DateTime\"]>;\n  lastUsedAt?: Maybe<Scalars[\"Date\"]>;\n  secret: Scalars[\"String\"];\n};\n\nexport type ApplyCartDeltaToCustomLineItemShippingDetailsTargets = {\n  customLineItemId: Scalars[\"String\"];\n  targetsDelta: Array<ShippingTargetDraft>;\n};\n\nexport type ApplyCartDeltaToLineItemShippingDetailsTargets = {\n  lineItemId: Scalars[\"String\"];\n  targetsDelta: Array<ShippingTargetDraft>;\n};\n\nexport type Asset = {\n  __typename?: \"Asset\";\n  id: Scalars[\"String\"];\n  key?: Maybe<Scalars[\"String\"]>;\n  sources: Array<AssetSource>;\n  name?: Maybe<Scalars[\"String\"]>;\n  nameAllLocales: Array<LocalizedString>;\n  description?: Maybe<Scalars[\"String\"]>;\n  descriptionAllLocales?: Maybe<Array<LocalizedString>>;\n  tags: Array<Scalars[\"String\"]>;\n  /** This field contains non-typed data. Consider using `customFields` as a typed alternative. */\n  customFieldsRaw?: Maybe<Array<RawCustomField>>;\n  /** This field would contain type data */\n  customFields?: Maybe<Type>;\n  custom?: Maybe<CustomFieldsType>;\n  /** Custom fields are returned as a list instead of an object structure. */\n  customFieldList?: Maybe<Array<CustomField>>;\n};\n\nexport type AssetNameArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type AssetDescriptionArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type AssetCustomFieldsRawArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type AssetCustomFieldListArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type AssetDimensions = {\n  __typename?: \"AssetDimensions\";\n  width: Scalars[\"Int\"];\n  height: Scalars[\"Int\"];\n};\n\nexport type AssetDimensionsInput = {\n  width: Scalars[\"Int\"];\n  height: Scalars[\"Int\"];\n};\n\nexport type AssetDraftInput = {\n  key?: Maybe<Scalars[\"String\"]>;\n  name: Array<LocalizedStringItemInputType>;\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n  custom?: Maybe<CustomFieldsDraft>;\n  sources?: Maybe<Array<AssetSourceInput>>;\n  tags?: Maybe<Array<Scalars[\"String\"]>>;\n  type?: Maybe<ResourceIdentifierInput>;\n};\n\nexport type AssetSource = {\n  __typename?: \"AssetSource\";\n  uri: Scalars[\"String\"];\n  key?: Maybe<Scalars[\"String\"]>;\n  dimensions?: Maybe<AssetDimensions>;\n  contentType?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type AssetSourceInput = {\n  uri: Scalars[\"String\"];\n  key?: Maybe<Scalars[\"String\"]>;\n  dimensions?: Maybe<AssetDimensionsInput>;\n  contentType?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type Attribute = {\n  name: Scalars[\"String\"];\n};\n\nexport enum AttributeConstraint {\n  /** No constraints are applied to the attribute */\n  None = \"None\",\n  /** Attribute value should be different in each variant */\n  Unique = \"Unique\",\n  /** A set of attributes, that have this constraint, should have different combinations in each variant */\n  CombinationUnique = \"CombinationUnique\",\n  /** Attribute value should be the same in all variants */\n  SameForAll = \"SameForAll\"\n}\n\nexport type AttributeDefinition = {\n  __typename?: \"AttributeDefinition\";\n  type: AttributeDefinitionType;\n  name: Scalars[\"String\"];\n  label?: Maybe<Scalars[\"String\"]>;\n  isRequired: Scalars[\"Boolean\"];\n  attributeConstraint: AttributeConstraint;\n  inputTip?: Maybe<Scalars[\"String\"]>;\n  inputHint: TextInputHint;\n  isSearchable: Scalars[\"Boolean\"];\n  labelAllLocales: Array<LocalizedString>;\n  inputTipAllLocales?: Maybe<Array<LocalizedString>>;\n};\n\nexport type AttributeDefinitionLabelArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type AttributeDefinitionInputTipArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type AttributeDefinitionDraft = {\n  type: AttributeTypeDraft;\n  name: Scalars[\"String\"];\n  label: Array<LocalizedStringItemInputType>;\n  isRequired: Scalars[\"Boolean\"];\n  attributeConstraint?: Maybe<AttributeConstraint>;\n  inputTip?: Maybe<Array<LocalizedStringItemInputType>>;\n  inputHint?: Maybe<TextInputHint>;\n  isSearchable: Scalars[\"Boolean\"];\n};\n\nexport type AttributeDefinitionResult = {\n  __typename?: \"AttributeDefinitionResult\";\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n  total: Scalars[\"Int\"];\n  results: Array<AttributeDefinition>;\n};\n\n/** (https://dev.commercetools.com/http-api-projects-productTypes.html#attributetype)[https://dev.commercetools.com/http-api-projects-productTypes.html#attributetype] */\nexport type AttributeDefinitionType = {\n  name: Scalars[\"String\"];\n};\n\nexport type AttributeSetElementTypeDraft = {\n  text?: Maybe<SimpleAttributeTypeDraft>;\n  number?: Maybe<SimpleAttributeTypeDraft>;\n  money?: Maybe<SimpleAttributeTypeDraft>;\n  date?: Maybe<SimpleAttributeTypeDraft>;\n  time?: Maybe<SimpleAttributeTypeDraft>;\n  datetime?: Maybe<SimpleAttributeTypeDraft>;\n  boolean?: Maybe<SimpleAttributeTypeDraft>;\n  reference?: Maybe<ReferenceTypeDefinitionDraft>;\n  enum?: Maybe<EnumTypeDraft>;\n  lenum?: Maybe<LocalizableEnumTypeDraft>;\n  ltext?: Maybe<SimpleAttributeTypeDraft>;\n};\n\nexport type AttributeSetTypeDraft = {\n  elementType: AttributeSetElementTypeDraft;\n};\n\nexport type AttributeTypeDraft = {\n  set?: Maybe<AttributeSetTypeDraft>;\n  text?: Maybe<SimpleAttributeTypeDraft>;\n  number?: Maybe<SimpleAttributeTypeDraft>;\n  money?: Maybe<SimpleAttributeTypeDraft>;\n  date?: Maybe<SimpleAttributeTypeDraft>;\n  time?: Maybe<SimpleAttributeTypeDraft>;\n  datetime?: Maybe<SimpleAttributeTypeDraft>;\n  boolean?: Maybe<SimpleAttributeTypeDraft>;\n  reference?: Maybe<ReferenceTypeDefinitionDraft>;\n  enum?: Maybe<EnumTypeDraft>;\n  lenum?: Maybe<LocalizableEnumTypeDraft>;\n  ltext?: Maybe<SimpleAttributeTypeDraft>;\n};\n\nexport type BaseMoney = {\n  type: Scalars[\"String\"];\n  currencyCode: Scalars[\"Currency\"];\n  centAmount: Scalars[\"Long\"];\n  fractionDigits: Scalars[\"Int\"];\n};\n\nexport type BaseMoneyInput = {\n  centPrecision?: Maybe<MoneyInput>;\n  highPrecision?: Maybe<HighPrecisionMoneyInput>;\n};\n\nexport type BaseSearchKeywordInput = {\n  whitespace?: Maybe<WhitespaceSuggestTokenizerInput>;\n  custom?: Maybe<CustomSuggestTokenizerInput>;\n};\n\nexport type BooleanAttribute = Attribute & {\n  __typename?: \"BooleanAttribute\";\n  value: Scalars[\"Boolean\"];\n  name: Scalars[\"String\"];\n};\n\nexport type BooleanAttributeDefinitionType = AttributeDefinitionType & {\n  __typename?: \"BooleanAttributeDefinitionType\";\n  name: Scalars[\"String\"];\n};\n\nexport type BooleanField = CustomField & {\n  __typename?: \"BooleanField\";\n  value: Scalars[\"Boolean\"];\n  name: Scalars[\"String\"];\n};\n\nexport type BooleanType = FieldType & {\n  __typename?: \"BooleanType\";\n  name: Scalars[\"String\"];\n};\n\n/** A shopping cart holds product variants and can be ordered. Each cart either\n * belongs to a registered customer or is an anonymous cart.\n */\nexport type Cart = Versioned & {\n  __typename?: \"Cart\";\n  customerId?: Maybe<Scalars[\"String\"]>;\n  customer?: Maybe<Customer>;\n  customerEmail?: Maybe<Scalars[\"String\"]>;\n  anonymousId?: Maybe<Scalars[\"String\"]>;\n  lineItems: Array<LineItem>;\n  customLineItems: Array<CustomLineItem>;\n  totalPrice: Money;\n  taxedPrice?: Maybe<TaxedPrice>;\n  shippingAddress?: Maybe<Address>;\n  billingAddress?: Maybe<Address>;\n  inventoryMode: InventoryMode;\n  taxMode: TaxMode;\n  taxRoundingMode: RoundingMode;\n  taxCalculationMode: TaxCalculationMode;\n  customerGroup?: Maybe<CustomerGroup>;\n  customerGroupRef?: Maybe<Reference>;\n  country?: Maybe<Scalars[\"Country\"]>;\n  shippingInfo?: Maybe<ShippingInfo>;\n  discountCodes: Array<DiscountCodeInfo>;\n  refusedGifts: Array<CartDiscount>;\n  refusedGiftsRefs: Array<Reference>;\n  paymentInfo?: Maybe<PaymentInfo>;\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  shippingRateInput?: Maybe<ShippingRateInput>;\n  origin: CartOrigin;\n  storeRef?: Maybe<KeyReference>;\n  store?: Maybe<Store>;\n  itemShippingAddresses: Array<Address>;\n  cartState: CartState;\n  /** This field contains non-typed data. Consider using `customFields` as a typed alternative. */\n  customFieldsRaw?: Maybe<Array<RawCustomField>>;\n  /** This field would contain type data */\n  customFields?: Maybe<Type>;\n  custom?: Maybe<CustomFieldsType>;\n  deleteDaysAfterLastModification?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n  /** Custom fields are returned as a list instead of an object structure. */\n  customFieldList?: Maybe<Array<CustomField>>;\n};\n\n/** A shopping cart holds product variants and can be ordered. Each cart either\n * belongs to a registered customer or is an anonymous cart.\n */\nexport type CartCustomFieldsRawArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** A shopping cart holds product variants and can be ordered. Each cart either\n * belongs to a registered customer or is an anonymous cart.\n */\nexport type CartCustomFieldListArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type CartClassificationInput = {\n  values: Array<LocalizedEnumValueInput>;\n};\n\nexport type CartClassificationType = ShippingRateInputType & {\n  __typename?: \"CartClassificationType\";\n  values: Array<ShippingRateInputLocalizedEnumValue>;\n  type: Scalars[\"String\"];\n};\n\n/** Cart discounts are recalculated every time LineItems or CustomLineItems are\n * added or removed from the Cart or an order is created from the cart.\n *\n * The number of active cart discounts that do not require a discount code\n * (isActive=true and requiresDiscountCode=false) is limited to 100.\n */\nexport type CartDiscount = Versioned & {\n  __typename?: \"CartDiscount\";\n  cartPredicate: Scalars[\"String\"];\n  validFrom?: Maybe<Scalars[\"DateTime\"]>;\n  validUntil?: Maybe<Scalars[\"DateTime\"]>;\n  stackingMode: StackingMode;\n  isActive: Scalars[\"Boolean\"];\n  requiresDiscountCode: Scalars[\"Boolean\"];\n  sortOrder: Scalars[\"String\"];\n  key?: Maybe<Scalars[\"String\"]>;\n  name?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  nameAllLocales: Array<LocalizedString>;\n  descriptionAllLocales?: Maybe<Array<LocalizedString>>;\n  /** This field contains non-typed data. Consider using `customFields` as a typed alternative. */\n  customFieldsRaw?: Maybe<Array<RawCustomField>>;\n  /** This field would contain type data */\n  customFields?: Maybe<Type>;\n  custom?: Maybe<CustomFieldsType>;\n  value: CartDiscountValue;\n  target?: Maybe<CartDiscountTarget>;\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n  /** Custom fields are returned as a list instead of an object structure. */\n  customFieldList?: Maybe<Array<CustomField>>;\n};\n\n/** Cart discounts are recalculated every time LineItems or CustomLineItems are\n * added or removed from the Cart or an order is created from the cart.\n *\n * The number of active cart discounts that do not require a discount code\n * (isActive=true and requiresDiscountCode=false) is limited to 100.\n */\nexport type CartDiscountNameArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\n/** Cart discounts are recalculated every time LineItems or CustomLineItems are\n * added or removed from the Cart or an order is created from the cart.\n *\n * The number of active cart discounts that do not require a discount code\n * (isActive=true and requiresDiscountCode=false) is limited to 100.\n */\nexport type CartDiscountDescriptionArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\n/** Cart discounts are recalculated every time LineItems or CustomLineItems are\n * added or removed from the Cart or an order is created from the cart.\n *\n * The number of active cart discounts that do not require a discount code\n * (isActive=true and requiresDiscountCode=false) is limited to 100.\n */\nexport type CartDiscountCustomFieldsRawArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** Cart discounts are recalculated every time LineItems or CustomLineItems are\n * added or removed from the Cart or an order is created from the cart.\n *\n * The number of active cart discounts that do not require a discount code\n * (isActive=true and requiresDiscountCode=false) is limited to 100.\n */\nexport type CartDiscountCustomFieldListArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type CartDiscountDraft = {\n  value: CartDiscountValueInput;\n  cartPredicate: Scalars[\"String\"];\n  target?: Maybe<CartDiscountTargetInput>;\n  sortOrder: Scalars[\"String\"];\n  name: Array<LocalizedStringItemInputType>;\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n  validFrom?: Maybe<Scalars[\"DateTime\"]>;\n  validUntil?: Maybe<Scalars[\"DateTime\"]>;\n  stackingMode?: Maybe<StackingMode>;\n  requiresDiscountCode?: Maybe<Scalars[\"Boolean\"]>;\n  isActive?: Maybe<Scalars[\"Boolean\"]>;\n  custom?: Maybe<CustomFieldsDraft>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CartDiscountQueryResult = {\n  __typename?: \"CartDiscountQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<CartDiscount>;\n};\n\nexport type CartDiscountTarget = {\n  type: Scalars[\"String\"];\n};\n\nexport type CartDiscountTargetInput = {\n  lineItems?: Maybe<LineItemsTargetInput>;\n  customLineItems?: Maybe<CustomLineItemsTargetInput>;\n  shipping?: Maybe<ShippingTargetInput>;\n  multiBuyLineItems?: Maybe<MultiBuyLineItemsTargetInput>;\n  multiBuyCustomLineItems?: Maybe<MultiBuyCustomLineItemsTargetInput>;\n};\n\nexport type CartDiscountUpdateAction = {\n  changeCartPredicate?: Maybe<ChangeCartDiscountCartPredicate>;\n  changeIsActive?: Maybe<ChangeCartDiscountIsActive>;\n  changeName?: Maybe<ChangeCartDiscountName>;\n  changeRequiresDiscountCode?: Maybe<ChangeCartDiscountRequiresDiscountCode>;\n  changeSortOrder?: Maybe<ChangeCartDiscountSortOrder>;\n  changeStackingMode?: Maybe<ChangeCartDiscountStackingMode>;\n  changeTarget?: Maybe<ChangeCartDiscountTarget>;\n  changeValue?: Maybe<ChangeCartDiscountValue>;\n  setCustomField?: Maybe<SetCartDiscountCustomField>;\n  setCustomType?: Maybe<SetCartDiscountCustomType>;\n  setDescription?: Maybe<SetCartDiscountDescription>;\n  setKey?: Maybe<SetCartDiscountKey>;\n  setValidFrom?: Maybe<SetCartDiscountValidFrom>;\n  setValidFromAndUntil?: Maybe<SetCartDiscountValidFromAndUntil>;\n  setValidUntil?: Maybe<SetCartDiscountValidUntil>;\n};\n\nexport type CartDiscountValue = {\n  type: Scalars[\"String\"];\n};\n\nexport type CartDiscountValueInput = {\n  relative?: Maybe<RelativeDiscountValueInput>;\n  absolute?: Maybe<AbsoluteDiscountValueInput>;\n  giftLineItem?: Maybe<GiftLineItemValueInput>;\n};\n\nexport type CartDraft = {\n  currency: Scalars[\"Currency\"];\n  country?: Maybe<Scalars[\"Country\"]>;\n  inventoryMode?: Maybe<InventoryMode>;\n  custom?: Maybe<CustomFieldsDraft>;\n  customerEmail?: Maybe<Scalars[\"String\"]>;\n  shippingAddress?: Maybe<AddressInput>;\n  billingAddress?: Maybe<AddressInput>;\n  shippingMethod?: Maybe<ResourceIdentifierInput>;\n  taxMode?: Maybe<TaxMode>;\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  deleteDaysAfterLastModification?: Maybe<Scalars[\"Int\"]>;\n  itemShippingAddresses?: Maybe<Array<AddressInput>>;\n  discountCodes?: Maybe<Array<Scalars[\"String\"]>>;\n  lineItems?: Maybe<Array<LineItemDraft>>;\n  customLineItems?: Maybe<Array<CustomLineItemDraft>>;\n  customerId?: Maybe<Scalars[\"String\"]>;\n  externalTaxRateForShippingMethod?: Maybe<ExternalTaxRateDraft>;\n  anonymousId?: Maybe<Scalars[\"String\"]>;\n  taxRoundingMode?: Maybe<RoundingMode>;\n  taxCalculationMode?: Maybe<TaxCalculationMode>;\n  customerGroup?: Maybe<ResourceIdentifierInput>;\n  shippingRateInput?: Maybe<ShippingRateInputDraft>;\n  origin?: Maybe<CartOrigin>;\n  store?: Maybe<ResourceIdentifierInput>;\n};\n\nexport enum CartOrigin {\n  /** The cart was created by the merchant on behalf of the customer */\n  Merchant = \"Merchant\",\n  /** The cart was created by the customer. This is the default value */\n  Customer = \"Customer\"\n}\n\n/** Fields to access carts. Includes direct access to a single cart and searching for carts. */\nexport type CartQueryInterface = {\n  cart?: Maybe<Cart>;\n  carts: CartQueryResult;\n};\n\n/** Fields to access carts. Includes direct access to a single cart and searching for carts. */\nexport type CartQueryInterfaceCartArgs = {\n  id: Scalars[\"String\"];\n};\n\n/** Fields to access carts. Includes direct access to a single cart and searching for carts. */\nexport type CartQueryInterfaceCartsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type CartQueryResult = {\n  __typename?: \"CartQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<Cart>;\n};\n\nexport type CartScoreInput = {\n  dummy?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CartScoreType = ShippingRateInputType & {\n  __typename?: \"CartScoreType\";\n  type: Scalars[\"String\"];\n};\n\nexport enum CartState {\n  /** The cart was ordered. No further operations on the cart are allowed. */\n  Ordered = \"Ordered\",\n  /** Anonymous cart whose content was merged into a customers cart on signin. No further operations on the cart are allowed. */\n  Merged = \"Merged\",\n  /** The cart can be updated and ordered. It is the default state. */\n  Active = \"Active\"\n}\n\nexport type CartUpdateAction = {\n  addCustomLineItem?: Maybe<AddCartCustomLineItem>;\n  addDiscountCode?: Maybe<AddCartDiscountCode>;\n  addItemShippingAddress?: Maybe<AddCartItemShippingAddress>;\n  addLineItem?: Maybe<AddCartLineItem>;\n  addPayment?: Maybe<AddCartPayment>;\n  addShoppingList?: Maybe<AddCartShoppingList>;\n  applyDeltaToCustomLineItemShippingDetailsTargets?: Maybe<\n    ApplyCartDeltaToCustomLineItemShippingDetailsTargets\n  >;\n  applyDeltaToLineItemShippingDetailsTargets?: Maybe<\n    ApplyCartDeltaToLineItemShippingDetailsTargets\n  >;\n  changeCustomLineItemMoney?: Maybe<ChangeCartCustomLineItemMoney>;\n  changeCustomLineItemQuantity?: Maybe<ChangeCartCustomLineItemQuantity>;\n  changeLineItemQuantity?: Maybe<ChangeCartLineItemQuantity>;\n  changeTaxCalculationMode?: Maybe<ChangeCartTaxCalculationMode>;\n  changeTaxMode?: Maybe<ChangeCartTaxMode>;\n  changeTaxRoundingMode?: Maybe<ChangeCartTaxRoundingMode>;\n  recalculate?: Maybe<RecalculateCart>;\n  removeCustomLineItem?: Maybe<RemoveCartCustomLineItem>;\n  removeDiscountCode?: Maybe<RemoveCartDiscountCode>;\n  removeItemShippingAddress?: Maybe<RemoveCartItemShippingAddress>;\n  removeLineItem?: Maybe<RemoveCartLineItem>;\n  removePayment?: Maybe<RemoveCartPayment>;\n  setAnonymousId?: Maybe<SetCartAnonymousId>;\n  setBillingAddress?: Maybe<SetCartBillingAddress>;\n  setCartTotalTax?: Maybe<SetCartTotalTax>;\n  setCountry?: Maybe<SetCartCountry>;\n  setCustomField?: Maybe<SetCartCustomField>;\n  setCustomLineItemCustomField?: Maybe<SetCartCustomLineItemCustomField>;\n  setCustomLineItemCustomType?: Maybe<SetCartCustomLineItemCustomType>;\n  setCustomLineItemShippingDetails?: Maybe<\n    SetCartCustomLineItemShippingDetails\n  >;\n  setCustomLineItemTaxAmount?: Maybe<SetCartCustomLineItemTaxAmount>;\n  setCustomLineItemTaxRate?: Maybe<SetCartCustomLineItemTaxRate>;\n  setCustomShippingMethod?: Maybe<SetCartCustomShippingMethod>;\n  setCustomType?: Maybe<SetCartCustomType>;\n  setCustomerEmail?: Maybe<SetCartCustomerEmail>;\n  setCustomerGroup?: Maybe<SetCartCustomerGroup>;\n  setCustomerId?: Maybe<SetCartCustomerId>;\n  setDeleteDaysAfterLastModification?: Maybe<\n    SetCartDeleteDaysAfterLastModification\n  >;\n  setLineItemCustomField?: Maybe<SetCartLineItemCustomField>;\n  setLineItemCustomType?: Maybe<SetCartLineItemCustomType>;\n  setLineItemPrice?: Maybe<SetCartLineItemPrice>;\n  setLineItemShippingDetails?: Maybe<SetCartLineItemShippingDetails>;\n  setLineItemTaxAmount?: Maybe<SetCartLineItemTaxAmount>;\n  setLineItemTaxRate?: Maybe<SetCartLineItemTaxRate>;\n  setLineItemTotalPrice?: Maybe<SetCartLineItemTotalPrice>;\n  setLocale?: Maybe<SetCartLocale>;\n  setShippingAddress?: Maybe<SetCartShippingAddress>;\n  setShippingMethod?: Maybe<SetCartShippingMethod>;\n  setShippingMethodTaxAmount?: Maybe<SetCartShippingMethodTaxAmount>;\n  setShippingMethodTaxRate?: Maybe<SetCartShippingMethodTaxRate>;\n  setShippingRateInput?: Maybe<SetCartShippingRateInput>;\n  updateItemShippingAddress?: Maybe<UpdateCartItemShippingAddress>;\n};\n\nexport type CartValueInput = {\n  dummy?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CartValueType = ShippingRateInputType & {\n  __typename?: \"CartValueType\";\n  type: Scalars[\"String\"];\n};\n\nexport type Category = Versioned & {\n  __typename?: \"Category\";\n  id: Scalars[\"String\"];\n  key?: Maybe<Scalars[\"String\"]>;\n  version: Scalars[\"Long\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  nameAllLocales: Array<LocalizedString>;\n  description?: Maybe<Scalars[\"String\"]>;\n  descriptionAllLocales?: Maybe<Array<LocalizedString>>;\n  slug?: Maybe<Scalars[\"String\"]>;\n  slugAllLocales: Array<LocalizedString>;\n  ancestorsRef: Array<Reference>;\n  ancestors: Array<Category>;\n  parentRef?: Maybe<Reference>;\n  parent?: Maybe<Category>;\n  orderHint: Scalars[\"String\"];\n  externalId?: Maybe<Scalars[\"String\"]>;\n  metaTitle?: Maybe<Scalars[\"String\"]>;\n  metaKeywords?: Maybe<Scalars[\"String\"]>;\n  metaDescription?: Maybe<Scalars[\"String\"]>;\n  /** Number of a products in the category subtree. */\n  productCount: Scalars[\"Int\"];\n  /** Number of staged products in the category subtree. */\n  stagedProductCount: Scalars[\"Int\"];\n  /** Number of direct child categories. */\n  childCount: Scalars[\"Int\"];\n  /** Direct child categories. */\n  children?: Maybe<Array<Category>>;\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  assets: Array<Asset>;\n  /** This field contains non-typed data. Consider using `customFields` as a typed alternative. */\n  customFieldsRaw?: Maybe<Array<RawCustomField>>;\n  /** This field would contain type data */\n  customFields?: Maybe<Type>;\n  custom?: Maybe<CustomFieldsType>;\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n  /** Custom fields are returned as a list instead of an object structure. */\n  customFieldList?: Maybe<Array<CustomField>>;\n};\n\nexport type CategoryNameArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type CategoryDescriptionArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type CategorySlugArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type CategoryMetaTitleArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type CategoryMetaKeywordsArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type CategoryMetaDescriptionArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type CategoryCustomFieldsRawArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type CategoryCustomFieldListArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type CategoryDraft = {\n  key?: Maybe<Scalars[\"String\"]>;\n  name: Array<LocalizedStringItemInputType>;\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n  custom?: Maybe<CustomFieldsDraft>;\n  slug: Array<LocalizedStringItemInputType>;\n  externalId?: Maybe<Scalars[\"String\"]>;\n  metaTitle?: Maybe<Array<LocalizedStringItemInputType>>;\n  metaDescription?: Maybe<Array<LocalizedStringItemInputType>>;\n  metaKeywords?: Maybe<Array<LocalizedStringItemInputType>>;\n  orderHint?: Maybe<Scalars[\"String\"]>;\n  parent?: Maybe<ResourceIdentifierInput>;\n  assets?: Maybe<Array<AssetDraftInput>>;\n};\n\nexport type CategoryOrderHint = {\n  __typename?: \"CategoryOrderHint\";\n  categoryId: Scalars[\"String\"];\n  orderHint: Scalars[\"String\"];\n};\n\nexport type CategoryOrderHintInput = {\n  uuid: Scalars[\"String\"];\n  orderHint: Scalars[\"String\"];\n};\n\nexport type CategoryQueryResult = {\n  __typename?: \"CategoryQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<Category>;\n};\n\nexport type CategorySearch = {\n  __typename?: \"CategorySearch\";\n  id: Scalars[\"String\"];\n  key?: Maybe<Scalars[\"String\"]>;\n  version: Scalars[\"Long\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  nameAllLocales: Array<LocalizedString>;\n  description?: Maybe<Scalars[\"String\"]>;\n  descriptionAllLocales?: Maybe<Array<LocalizedString>>;\n  slug?: Maybe<Scalars[\"String\"]>;\n  slugAllLocales: Array<LocalizedString>;\n  ancestorsRef: Array<Reference>;\n  ancestors: Array<CategorySearch>;\n  parentRef?: Maybe<Reference>;\n  parent?: Maybe<CategorySearch>;\n  externalId?: Maybe<Scalars[\"String\"]>;\n  productCount: Scalars[\"Int\"];\n  stagedProductCount: Scalars[\"Int\"];\n  childCount: Scalars[\"Int\"];\n  productTypeNames: Array<Scalars[\"String\"]>;\n  /** Direct child categories. */\n  children: Array<CategorySearch>;\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  orderHint: Scalars[\"String\"];\n  assets: Array<Asset>;\n  /** This field contains non-typed data. Consider using `customFields` as a typed alternative. */\n  customFieldsRaw?: Maybe<Array<RawCustomField>>;\n  /** This field would contain type data */\n  customFields?: Maybe<Type>;\n  custom?: Maybe<CustomFieldsType>;\n  /** Custom fields are returned as a list instead of an object structure. */\n  customFieldList?: Maybe<Array<CustomField>>;\n};\n\nexport type CategorySearchNameArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type CategorySearchDescriptionArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type CategorySearchSlugArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type CategorySearchCustomFieldsRawArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type CategorySearchCustomFieldListArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type CategorySearchResult = {\n  __typename?: \"CategorySearchResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Int\"];\n  results: Array<CategorySearch>;\n};\n\nexport type CategoryUpdateAction = {\n  addAsset?: Maybe<AddCategoryAsset>;\n  changeAssetName?: Maybe<ChangeCategoryAssetName>;\n  changeAssetOrder?: Maybe<ChangeCategoryAssetOrder>;\n  changeName?: Maybe<ChangeCategoryName>;\n  changeOrderHint?: Maybe<ChangeCategoryOrderHint>;\n  changeSlug?: Maybe<ChangeCategorySlug>;\n  changeParent?: Maybe<ChangeCategoryParent>;\n  removeAsset?: Maybe<RemoveCategoryAsset>;\n  setAssetCustomField?: Maybe<SetCategoryAssetCustomField>;\n  setAssetCustomType?: Maybe<SetCategoryAssetCustomType>;\n  setAssetDescription?: Maybe<SetCategoryAssetDescription>;\n  setAssetKey?: Maybe<SetCategoryAssetKey>;\n  setAssetSources?: Maybe<SetCategoryAssetSources>;\n  setAssetTags?: Maybe<SetCategoryAssetTags>;\n  setCustomField?: Maybe<SetCategoryCustomField>;\n  setCustomType?: Maybe<SetCategoryCustomType>;\n  setDescription?: Maybe<SetCategoryDescription>;\n  setKey?: Maybe<SetCategoryKey>;\n  setMetaDescription?: Maybe<SetCategoryMetaDescription>;\n  setMetaKeywords?: Maybe<SetCategoryMetaKeywords>;\n  setMetaTitle?: Maybe<SetCategoryMetaTitle>;\n  setExternalId?: Maybe<SetCategoryExternalId>;\n};\n\nexport type ChangeAttributeName = {\n  attributeName: Scalars[\"String\"];\n  newAttributeName: Scalars[\"String\"];\n};\n\nexport type ChangeAttributeOrder = {\n  attributeDefinitions: Array<AttributeDefinitionDraft>;\n};\n\nexport type ChangeAttributeOrderByName = {\n  attributeNames: Array<Scalars[\"String\"]>;\n};\n\nexport type ChangeCartCustomLineItemMoney = {\n  customLineItemId: Scalars[\"String\"];\n  money: BaseMoneyInput;\n};\n\nexport type ChangeCartCustomLineItemQuantity = {\n  customLineItemId: Scalars[\"String\"];\n  quantity: Scalars[\"Long\"];\n};\n\nexport type ChangeCartDiscountCartPredicate = {\n  cartPredicate: Scalars[\"String\"];\n};\n\nexport type ChangeCartDiscountIsActive = {\n  isActive: Scalars[\"Boolean\"];\n};\n\nexport type ChangeCartDiscountName = {\n  name: Array<LocalizedStringItemInputType>;\n};\n\nexport type ChangeCartDiscountRequiresDiscountCode = {\n  requiresDiscountCode: Scalars[\"Boolean\"];\n};\n\nexport type ChangeCartDiscountSortOrder = {\n  sortOrder: Scalars[\"String\"];\n};\n\nexport type ChangeCartDiscountStackingMode = {\n  stackingMode: StackingMode;\n};\n\nexport type ChangeCartDiscountTarget = {\n  target: CartDiscountTargetInput;\n};\n\nexport type ChangeCartDiscountValue = {\n  value: CartDiscountValueInput;\n};\n\nexport type ChangeCartLineItemQuantity = {\n  lineItemId: Scalars[\"String\"];\n  quantity: Scalars[\"Long\"];\n  externalPrice?: Maybe<BaseMoneyInput>;\n  externalTotalPrice?: Maybe<ExternalLineItemTotalPriceDraft>;\n};\n\nexport type ChangeCartTaxCalculationMode = {\n  taxCalculationMode: TaxCalculationMode;\n};\n\nexport type ChangeCartTaxMode = {\n  taxMode: TaxMode;\n};\n\nexport type ChangeCartTaxRoundingMode = {\n  taxRoundingMode: RoundingMode;\n};\n\nexport type ChangeCategoryAssetName = {\n  name: Array<LocalizedStringItemInputType>;\n  assetKey?: Maybe<Scalars[\"String\"]>;\n  assetId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ChangeCategoryAssetOrder = {\n  assetOrder: Array<Scalars[\"String\"]>;\n};\n\nexport type ChangeCategoryName = {\n  name: Array<LocalizedStringItemInputType>;\n};\n\nexport type ChangeCategoryOrderHint = {\n  orderHint: Scalars[\"String\"];\n};\n\nexport type ChangeCategoryParent = {\n  parent: ResourceIdentifierInput;\n};\n\nexport type ChangeCategorySlug = {\n  slug: Array<LocalizedStringItemInputType>;\n};\n\nexport type ChangeCustomerAddress = {\n  addressId: Scalars[\"String\"];\n  address: AddressInput;\n};\n\nexport type ChangeCustomerEmail = {\n  email: Scalars[\"String\"];\n};\n\nexport type ChangeCustomerGroupName = {\n  name: Scalars[\"String\"];\n};\n\nexport type ChangeDescription = {\n  description: Scalars[\"String\"];\n};\n\nexport type ChangeDiscountCodeCartDiscounts = {\n  cartDiscounts: Array<ReferenceInput>;\n};\n\nexport type ChangeDiscountCodeGroups = {\n  groups: Array<Scalars[\"String\"]>;\n};\n\nexport type ChangeDiscountCodeIsActive = {\n  isActive: Scalars[\"Boolean\"];\n};\n\nexport type ChangeEnumKey = {\n  attributeName: Scalars[\"String\"];\n  key: Scalars[\"String\"];\n  newKey: Scalars[\"String\"];\n};\n\nexport type ChangeInputHint = {\n  attributeName: Scalars[\"String\"];\n  newValue: TextInputHint;\n};\n\nexport type ChangeInventoryEntryQuantity = {\n  quantity: Scalars[\"Long\"];\n};\n\nexport type ChangeIsSearchable = {\n  attributeName: Scalars[\"String\"];\n  isSearchable: Scalars[\"Boolean\"];\n};\n\nexport type ChangeLabel = {\n  attributeName: Scalars[\"String\"];\n  label: Array<LocalizedStringItemInputType>;\n};\n\nexport type ChangeLocalizedEnumValueLabel = {\n  attributeName: Scalars[\"String\"];\n  newValue: LocalizedEnumValueDraft;\n};\n\nexport type ChangeLocalizedEnumValueOrder = {\n  attributeName: Scalars[\"String\"];\n  values: Array<LocalizedEnumValueDraft>;\n};\n\nexport type ChangeMyCartTaxMode = {\n  taxMode: TaxMode;\n};\n\nexport type ChangeName = {\n  name: Scalars[\"String\"];\n};\n\nexport type ChangeOrderPaymentState = {\n  paymentState: PaymentState;\n};\n\nexport type ChangeOrderShipmentState = {\n  shipmentState: ShipmentState;\n};\n\nexport type ChangeOrderState = {\n  orderState: OrderState;\n};\n\nexport type ChangePlainEnumValueLabel = {\n  attributeName: Scalars[\"String\"];\n  newValue: PlainEnumValueDraft;\n};\n\nexport type ChangePlainEnumValueOrder = {\n  attributeName: Scalars[\"String\"];\n  values: Array<PlainEnumValueDraft>;\n};\n\nexport type ChangeProductAssetName = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  catalog?: Maybe<ReferenceInput>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n  name: Array<LocalizedStringItemInputType>;\n  assetKey?: Maybe<Scalars[\"String\"]>;\n  assetId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ChangeProductAssetOrder = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  catalog?: Maybe<ReferenceInput>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n  assetOrder: Array<Scalars[\"String\"]>;\n};\n\nexport type ChangeProductDiscountIsActive = {\n  isActive: Scalars[\"Boolean\"];\n};\n\nexport type ChangeProductDiscountName = {\n  name: Array<LocalizedStringItemInputType>;\n};\n\nexport type ChangeProductDiscountPredicate = {\n  predicate: Scalars[\"String\"];\n};\n\nexport type ChangeProductDiscountSortOrder = {\n  sortOrder: Scalars[\"String\"];\n};\n\nexport type ChangeProductDiscountValue = {\n  value: ProductDiscountValueInput;\n};\n\nexport type ChangeProductImageLabel = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  imageUrl: Scalars[\"String\"];\n  label?: Maybe<Scalars[\"String\"]>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type ChangeProductMasterVariant = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type ChangeProductName = {\n  name: Array<LocalizedStringItemInputType>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type ChangeProductPrice = {\n  priceId?: Maybe<Scalars[\"String\"]>;\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  price: ProductPriceDataInput;\n  catalog?: Maybe<ReferenceInput>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type ChangeProductSlug = {\n  slug: Array<LocalizedStringItemInputType>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type ChangeProjectSettingsCountries = {\n  countries: Array<Scalars[\"Country\"]>;\n};\n\nexport type ChangeProjectSettingsCurrencies = {\n  currencies: Array<Scalars[\"Currency\"]>;\n};\n\nexport type ChangeProjectSettingsLanguages = {\n  languages: Array<Scalars[\"Locale\"]>;\n};\n\nexport type ChangeProjectSettingsMessagesConfiguration = {\n  messagesConfiguration: MessagesConfigurationDraft;\n};\n\nexport type ChangeProjectSettingsMessagesEnabled = {\n  messagesEnabled: Scalars[\"Boolean\"];\n};\n\nexport type ChangeProjectSettingsName = {\n  name: Scalars[\"String\"];\n};\n\nexport type ChangeShippingMethodIsDefault = {\n  isDefault: Scalars[\"Boolean\"];\n};\n\nexport type ChangeShippingMethodName = {\n  name: Scalars[\"String\"];\n};\n\nexport type ChangeShippingMethodTaxCategory = {\n  taxCategory: ResourceIdentifierInput;\n};\n\nexport type ChangeShoppingListLineItemQuantity = {\n  lineItemId: Scalars[\"String\"];\n  quantity: Scalars[\"Int\"];\n};\n\nexport type ChangeShoppingListLineItemsOrder = {\n  lineItemOrder: Array<Scalars[\"String\"]>;\n};\n\nexport type ChangeShoppingListName = {\n  name: Array<LocalizedStringItemInputType>;\n};\n\nexport type ChangeShoppingListTextLineItemName = {\n  textLineItemId: Scalars[\"String\"];\n  name: Array<LocalizedStringItemInputType>;\n};\n\nexport type ChangeShoppingListTextLineItemQuantity = {\n  textLineItemId: Scalars[\"String\"];\n  quantity: Scalars[\"Int\"];\n};\n\nexport type ChangeShoppingListTextLineItemsOrder = {\n  textLineItemOrder: Array<Scalars[\"String\"]>;\n};\n\nexport type ChangeZoneName = {\n  name: Scalars[\"String\"];\n};\n\nexport type Channel = Versioned & {\n  __typename?: \"Channel\";\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  key: Scalars[\"String\"];\n  roles: Array<ChannelRole>;\n  name?: Maybe<Scalars[\"String\"]>;\n  nameAllLocales?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Scalars[\"String\"]>;\n  descriptionAllLocales?: Maybe<Array<LocalizedString>>;\n  address?: Maybe<Address>;\n  geoLocation?: Maybe<Geometry>;\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  /** This field contains non-typed data. Consider using `customFields` as a typed alternative. */\n  customFieldsRaw?: Maybe<Array<RawCustomField>>;\n  /** This field would contain type data */\n  customFields?: Maybe<Type>;\n  custom?: Maybe<CustomFieldsType>;\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n};\n\nexport type ChannelNameArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type ChannelDescriptionArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type ChannelCustomFieldsRawArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type ChannelQueryResult = {\n  __typename?: \"ChannelQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<Channel>;\n};\n\nexport type ChannelReferenceIdentifier = {\n  __typename?: \"ChannelReferenceIdentifier\";\n  typeId: Scalars[\"String\"];\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport enum ChannelRole {\n  /** Role tells that this channel can be used to track inventory entries.Channels with this role can be treated as warehouses */\n  InventorySupply = \"InventorySupply\",\n  /** Role tells that this channel can be used to expose products to a specific\n   * distribution channel. It can be used by the cart to select a product price.\n   */\n  ProductDistribution = \"ProductDistribution\",\n  /** Role tells that this channel can be used to track order export activities. */\n  OrderExport = \"OrderExport\",\n  /** Role tells that this channel can be used to track order import activities. */\n  OrderImport = \"OrderImport\",\n  /** This role can be combined with some other roles (e.g. with `InventorySupply`)\n   * to represent the fact that this particular channel is the primary/master\n   * channel among the channels of the same type.\n   */\n  Primary = \"Primary\"\n}\n\nexport type ClassificationShippingRateInput = ShippingRateInput & {\n  __typename?: \"ClassificationShippingRateInput\";\n  key: Scalars[\"String\"];\n  type: Scalars[\"String\"];\n  labelAllLocales: Array<LocalizedString>;\n  label?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ClassificationShippingRateInputLabelArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type ClassificationShippingRateInputDraft = {\n  key: Scalars[\"String\"];\n};\n\nexport type CreateApiClient = {\n  name: Scalars[\"String\"];\n  scope: Scalars[\"String\"];\n};\n\nexport type CreateStore = {\n  key: Scalars[\"String\"];\n  name?: Maybe<Array<LocalizedStringItemInputType>>;\n  languages?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type CreateZone = {\n  name: Scalars[\"String\"];\n  key?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  locations?: Maybe<Array<ZoneLocation>>;\n};\n\n/** A customer is a person purchasing products. Carts, Orders and Reviews can be associated to a customer. */\nexport type Customer = Versioned & {\n  __typename?: \"Customer\";\n  customerNumber?: Maybe<Scalars[\"String\"]>;\n  email: Scalars[\"String\"];\n  password: Scalars[\"String\"];\n  addresses: Array<Address>;\n  defaultShippingAddressId?: Maybe<Scalars[\"String\"]>;\n  defaultBillingAddressId?: Maybe<Scalars[\"String\"]>;\n  shippingAddressIds: Array<Scalars[\"String\"]>;\n  billingAddressIds: Array<Scalars[\"String\"]>;\n  isEmailVerified: Scalars[\"Boolean\"];\n  customerGroupRef?: Maybe<Reference>;\n  externalId?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n  firstName?: Maybe<Scalars[\"String\"]>;\n  lastName?: Maybe<Scalars[\"String\"]>;\n  middleName?: Maybe<Scalars[\"String\"]>;\n  title?: Maybe<Scalars[\"String\"]>;\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  salutation?: Maybe<Scalars[\"String\"]>;\n  dateOfBirth?: Maybe<Scalars[\"Date\"]>;\n  companyName?: Maybe<Scalars[\"String\"]>;\n  vatId?: Maybe<Scalars[\"String\"]>;\n  customerGroup?: Maybe<CustomerGroup>;\n  defaultShippingAddress?: Maybe<Address>;\n  defaultBillingAddress?: Maybe<Address>;\n  shippingAddresses: Array<Address>;\n  billingAddresses: Array<Address>;\n  storesRef: Array<KeyReference>;\n  stores: Array<Store>;\n  /** This field contains non-typed data. Consider using `customFields` as a typed alternative. */\n  customFieldsRaw?: Maybe<Array<RawCustomField>>;\n  /** This field would contain type data */\n  customFields?: Maybe<Type>;\n  custom?: Maybe<CustomFieldsType>;\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n  /** Custom fields are returned as a list instead of an object structure. */\n  customFieldList?: Maybe<Array<CustomField>>;\n};\n\n/** A customer is a person purchasing products. Carts, Orders and Reviews can be associated to a customer. */\nexport type CustomerCustomFieldsRawArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** A customer is a person purchasing products. Carts, Orders and Reviews can be associated to a customer. */\nexport type CustomerCustomFieldListArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** A field to access a customer's active cart. */\nexport type CustomerActiveCartInterface = {\n  customerActiveCart?: Maybe<Cart>;\n};\n\n/** A field to access a customer's active cart. */\nexport type CustomerActiveCartInterfaceCustomerActiveCartArgs = {\n  customerId: Scalars[\"String\"];\n};\n\n/** A customer can be a member in a customer group (e.g. reseller, gold member). A\n * customer group can be used in price calculations with special prices being\n * assigned to certain customer groups.\n */\nexport type CustomerGroup = Versioned & {\n  __typename?: \"CustomerGroup\";\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  name: Scalars[\"String\"];\n  key?: Maybe<Scalars[\"String\"]>;\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  /** This field contains non-typed data. Consider using `customFields` as a typed alternative. */\n  customFieldsRaw?: Maybe<Array<RawCustomField>>;\n  /** This field would contain type data */\n  customFields?: Maybe<Type>;\n  custom?: Maybe<CustomFieldsType>;\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n  /** Custom fields are returned as a list instead of an object structure. */\n  customFieldList?: Maybe<Array<CustomField>>;\n};\n\n/** A customer can be a member in a customer group (e.g. reseller, gold member). A\n * customer group can be used in price calculations with special prices being\n * assigned to certain customer groups.\n */\nexport type CustomerGroupCustomFieldsRawArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** A customer can be a member in a customer group (e.g. reseller, gold member). A\n * customer group can be used in price calculations with special prices being\n * assigned to certain customer groups.\n */\nexport type CustomerGroupCustomFieldListArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type CustomerGroupDraft = {\n  groupName: Scalars[\"String\"];\n  key?: Maybe<Scalars[\"String\"]>;\n  custom?: Maybe<CustomFieldsDraft>;\n};\n\nexport type CustomerGroupQueryResult = {\n  __typename?: \"CustomerGroupQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<CustomerGroup>;\n};\n\nexport type CustomerGroupUpdateAction = {\n  changeName?: Maybe<ChangeCustomerGroupName>;\n  setKey?: Maybe<SetCustomerGroupKey>;\n  setCustomType?: Maybe<SetCustomerGroupCustomType>;\n  setCustomField?: Maybe<SetCustomerGroupCustomField>;\n};\n\n/** Fields to access customer accounts. Includes direct access to a single customer and searching for customers. */\nexport type CustomerQueryInterface = {\n  customer?: Maybe<Customer>;\n  customers: CustomerQueryResult;\n};\n\n/** Fields to access customer accounts. Includes direct access to a single customer and searching for customers. */\nexport type CustomerQueryInterfaceCustomerArgs = {\n  emailToken?: Maybe<Scalars[\"String\"]>;\n  passwordToken?: Maybe<Scalars[\"String\"]>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Fields to access customer accounts. Includes direct access to a single customer and searching for customers. */\nexport type CustomerQueryInterfaceCustomersArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type CustomerQueryResult = {\n  __typename?: \"CustomerQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<Customer>;\n};\n\nexport type CustomerSignInDraft = {\n  email: Scalars[\"String\"];\n  password: Scalars[\"String\"];\n  anonymousCartId?: Maybe<Scalars[\"String\"]>;\n  anonymousCartSignInMode?: Maybe<AnonymousCartSignInMode>;\n  anonymousId?: Maybe<Scalars[\"String\"]>;\n  updateProductData?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type CustomerSignInResult = {\n  __typename?: \"CustomerSignInResult\";\n  customer: Customer;\n  cart?: Maybe<Cart>;\n};\n\nexport type CustomerSignMeInDraft = {\n  email: Scalars[\"String\"];\n  password: Scalars[\"String\"];\n  activeCartSignInMode?: Maybe<AnonymousCartSignInMode>;\n  updateProductData?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type CustomerSignMeUpDraft = {\n  email: Scalars[\"String\"];\n  password: Scalars[\"String\"];\n  firstName?: Maybe<Scalars[\"String\"]>;\n  lastName?: Maybe<Scalars[\"String\"]>;\n  middleName?: Maybe<Scalars[\"String\"]>;\n  title?: Maybe<Scalars[\"String\"]>;\n  dateOfBirth?: Maybe<Scalars[\"Date\"]>;\n  companyName?: Maybe<Scalars[\"String\"]>;\n  vatId?: Maybe<Scalars[\"String\"]>;\n  addresses?: Maybe<Array<AddressInput>>;\n  /** The index of the address in the `addresses` list. The\n   * `defaultBillingAddressId` of the customer will be set to the ID of that address.\n   */\n  defaultBillingAddress?: Maybe<Scalars[\"Int\"]>;\n  /** The index of the address in the `addresses` list. The\n   * `defaultShippingAddressId` of the customer will be set to the ID of that address.\n   */\n  defaultShippingAddress?: Maybe<Scalars[\"Int\"]>;\n  /** The indices of the shipping addresses in the `addresses` list. The\n   * `shippingAddressIds` of the `Customer` will be set to the IDs of that addresses.\n   */\n  shippingAddresses?: Maybe<Array<Scalars[\"Int\"]>>;\n  /** The indices of the billing addresses in the `addresses` list. The\n   * `billingAddressIds` of the customer will be set to the IDs of that addresses.\n   */\n  billingAddresses?: Maybe<Array<Scalars[\"Int\"]>>;\n  custom?: Maybe<CustomFieldsDraft>;\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  salutation?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n  stores?: Maybe<Array<ResourceIdentifierInput>>;\n};\n\nexport type CustomerSignUpDraft = {\n  email: Scalars[\"String\"];\n  password: Scalars[\"String\"];\n  firstName?: Maybe<Scalars[\"String\"]>;\n  lastName?: Maybe<Scalars[\"String\"]>;\n  middleName?: Maybe<Scalars[\"String\"]>;\n  title?: Maybe<Scalars[\"String\"]>;\n  dateOfBirth?: Maybe<Scalars[\"Date\"]>;\n  companyName?: Maybe<Scalars[\"String\"]>;\n  vatId?: Maybe<Scalars[\"String\"]>;\n  addresses?: Maybe<Array<AddressInput>>;\n  /** The index of the address in the `addresses` list. The\n   * `defaultBillingAddressId` of the customer will be set to the ID of that address.\n   */\n  defaultBillingAddress?: Maybe<Scalars[\"Int\"]>;\n  /** The index of the address in the `addresses` list. The\n   * `defaultShippingAddressId` of the customer will be set to the ID of that address.\n   */\n  defaultShippingAddress?: Maybe<Scalars[\"Int\"]>;\n  /** The indices of the shipping addresses in the `addresses` list. The\n   * `shippingAddressIds` of the `Customer` will be set to the IDs of that addresses.\n   */\n  shippingAddresses?: Maybe<Array<Scalars[\"Int\"]>>;\n  /** The indices of the billing addresses in the `addresses` list. The\n   * `billingAddressIds` of the customer will be set to the IDs of that addresses.\n   */\n  billingAddresses?: Maybe<Array<Scalars[\"Int\"]>>;\n  custom?: Maybe<CustomFieldsDraft>;\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  salutation?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n  stores?: Maybe<Array<ResourceIdentifierInput>>;\n  customerNumber?: Maybe<Scalars[\"String\"]>;\n  anonymousCartId?: Maybe<Scalars[\"String\"]>;\n  externalId?: Maybe<Scalars[\"String\"]>;\n  customerGroup?: Maybe<ResourceIdentifierInput>;\n  isEmailVerified?: Maybe<Scalars[\"Boolean\"]>;\n  anonymousId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type CustomerToken = {\n  __typename?: \"CustomerToken\";\n  id: Scalars[\"String\"];\n  customerId: Scalars[\"String\"];\n  createdAt: Scalars[\"DateTime\"];\n  expiresAt: Scalars[\"DateTime\"];\n  value: Scalars[\"String\"];\n};\n\nexport type CustomerUpdateAction = {\n  addAddress?: Maybe<AddCustomerAddress>;\n  addBillingAddressId?: Maybe<AddCustomerBillingAddressId>;\n  addShippingAddressId?: Maybe<AddCustomerShippingAddressId>;\n  addStore?: Maybe<AddCustomerStore>;\n  changeAddress?: Maybe<ChangeCustomerAddress>;\n  changeEmail?: Maybe<ChangeCustomerEmail>;\n  removeAddress?: Maybe<RemoveCustomerAddress>;\n  removeBillingAddressId?: Maybe<RemoveCustomerBillingAddressId>;\n  removeShippingAddressId?: Maybe<RemoveCustomerShippingAddressId>;\n  removeStore?: Maybe<RemoveCustomerStore>;\n  setCompanyName?: Maybe<SetCustomerCompanyName>;\n  setCustomField?: Maybe<SetCustomerCustomField>;\n  setCustomType?: Maybe<SetCustomerCustomType>;\n  setCustomerGroup?: Maybe<SetCustomerGroup>;\n  setKey?: Maybe<SetCustomerKey>;\n  setLocale?: Maybe<SetCustomerLocale>;\n  setCustomerNumber?: Maybe<SetCustomerNumber>;\n  setDateOfBirth?: Maybe<SetCustomerDateOfBirth>;\n  setDefaultBillingAddress?: Maybe<SetCustomerDefaultBillingAddress>;\n  setDefaultShippingAddress?: Maybe<SetCustomerDefaultShippingAddress>;\n  setExternalId?: Maybe<SetCustomerExternalId>;\n  setFirstName?: Maybe<SetCustomerFirstName>;\n  setLastName?: Maybe<SetCustomerLastName>;\n  setMiddleName?: Maybe<SetCustomerMiddleName>;\n  setSalutation?: Maybe<SetCustomerSalutation>;\n  setStores?: Maybe<SetCustomerStores>;\n  setTitle?: Maybe<SetCustomerTitle>;\n  setVatId?: Maybe<SetCustomerVatId>;\n};\n\nexport type CustomField = {\n  name: Scalars[\"String\"];\n};\n\n/** A key-value pair representing the field name and value of one single custom field.\n *\n * The value of this custom field consists of escaped JSON based on the FieldDefinition of the Type.\n *\n * Examples for `value`:\n *\n * * FieldType `String`: `\"\\\"This is a string\\\"\"`\n * * FieldType `DateTimeType`: `\"\\\"2001-09-11T14:00:00.000Z\\\"\"`\n * * FieldType `Number`: `\"4\"`\n * * FieldType `Set` with an elementType of `String`: `\"[\\\"This is a string\\\", \\\"This is another string\\\"]\"`\n * * FieldType `Reference`: `\"{\\\"id\\\", \\\"b911b62d-353a-4388-93ee-8d488d9af962\\\", \\\"typeId\\\", \\\"product\\\"}\"`\n */\nexport type CustomFieldInput = {\n  name: Scalars[\"String\"];\n  /** The value of this custom field consists of escaped JSON based on the FieldDefinition of the Type.\n   *\n   * Examples for `value`:\n   *\n   * * FieldType `String`: `\"\\\"This is a string\\\"\"`\n   * * FieldType `DateTimeType`: `\"\\\"2001-09-11T14:00:00.000Z\\\"\"`\n   * * FieldType `Number`: `\"4\"`\n   * * FieldType `Set` with an elementType of `String`: `\"[\\\"This is a string\\\", \\\"This is another string\\\"]\"`\n   * * FieldType `Reference`: `\"{\\\"id\\\", \\\"b911b62d-353a-4388-93ee-8d488d9af962\\\", \\\"typeId\\\", \\\"product\\\"}\"`\n   */\n  value: Scalars[\"String\"];\n};\n\nexport type CustomFieldsDraft = {\n  typeId?: Maybe<Scalars[\"String\"]>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  type?: Maybe<ResourceIdentifierInput>;\n  fields?: Maybe<Array<CustomFieldInput>>;\n};\n\nexport type CustomFieldsType = {\n  __typename?: \"CustomFieldsType\";\n  typeRef: Reference;\n  type?: Maybe<TypeDefinition>;\n  /** This field contains non-typed data. For a typed alternative, have a look at `customFields`. */\n  customFieldsRaw?: Maybe<Array<RawCustomField>>;\n  /** This field would contain type data */\n  customFields: Type;\n  /** Custom fields are returned as a list instead of an object structure. */\n  customFieldList?: Maybe<Array<CustomField>>;\n};\n\nexport type CustomFieldsTypeCustomFieldsRawArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type CustomFieldsTypeCustomFieldListArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** A custom line item is a generic item that can be added to the cart but is not\n * bound to a product. You can use it for discounts (negative money), vouchers,\n * complex cart rules, additional services or fees. You control the lifecycle of this item.\n */\nexport type CustomLineItem = {\n  __typename?: \"CustomLineItem\";\n  id: Scalars[\"String\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  nameAllLocales: Array<LocalizedString>;\n  money: BaseMoney;\n  totalPrice: Money;\n  slug: Scalars[\"String\"];\n  quantity: Scalars[\"Long\"];\n  state: Array<ItemState>;\n  taxCategory?: Maybe<TaxCategory>;\n  taxCategoryRef?: Maybe<Reference>;\n  taxRate?: Maybe<TaxRate>;\n  discountedPricePerQuantity: Array<DiscountedLineItemPriceForQuantity>;\n  /** This field contains non-typed data. Consider using `customFields` as a typed alternative. */\n  customFieldsRaw?: Maybe<Array<RawCustomField>>;\n  /** This field would contain type data */\n  customFields?: Maybe<Type>;\n  custom?: Maybe<CustomFieldsType>;\n  shippingDetails?: Maybe<ItemShippingDetails>;\n  /** Custom fields are returned as a list instead of an object structure. */\n  customFieldList?: Maybe<Array<CustomField>>;\n};\n\n/** A custom line item is a generic item that can be added to the cart but is not\n * bound to a product. You can use it for discounts (negative money), vouchers,\n * complex cart rules, additional services or fees. You control the lifecycle of this item.\n */\nexport type CustomLineItemNameArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\n/** A custom line item is a generic item that can be added to the cart but is not\n * bound to a product. You can use it for discounts (negative money), vouchers,\n * complex cart rules, additional services or fees. You control the lifecycle of this item.\n */\nexport type CustomLineItemCustomFieldsRawArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** A custom line item is a generic item that can be added to the cart but is not\n * bound to a product. You can use it for discounts (negative money), vouchers,\n * complex cart rules, additional services or fees. You control the lifecycle of this item.\n */\nexport type CustomLineItemCustomFieldListArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type CustomLineItemDraft = {\n  name: Array<LocalizedStringItemInputType>;\n  money: BaseMoneyInput;\n  slug: Scalars[\"String\"];\n  taxCategory?: Maybe<ReferenceInput>;\n  externalTaxRate?: Maybe<ExternalTaxRateDraft>;\n  quantity?: Maybe<Scalars[\"Long\"]>;\n  custom?: Maybe<CustomFieldsDraft>;\n  shippingDetails?: Maybe<ItemShippingDetailsDraft>;\n};\n\nexport type CustomLineItemReturnItem = ReturnItem & {\n  __typename?: \"CustomLineItemReturnItem\";\n  type: Scalars[\"String\"];\n  customLineItemId: Scalars[\"String\"];\n  id: Scalars[\"String\"];\n  quantity: Scalars[\"Long\"];\n  comment?: Maybe<Scalars[\"String\"]>;\n  shipmentState: ReturnShipmentState;\n  paymentState: ReturnPaymentState;\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdAt: Scalars[\"DateTime\"];\n};\n\nexport type CustomLineItemsTarget = CartDiscountTarget & {\n  __typename?: \"CustomLineItemsTarget\";\n  predicate: Scalars[\"String\"];\n  type: Scalars[\"String\"];\n};\n\nexport type CustomLineItemsTargetInput = {\n  predicate: Scalars[\"String\"];\n};\n\nexport type CustomSuggestTokenizerInput = {\n  text: Scalars[\"String\"];\n  suggestTokenizer?: Maybe<BaseSearchKeywordInput>;\n};\n\nexport type DateAttribute = Attribute & {\n  __typename?: \"DateAttribute\";\n  value: Scalars[\"Date\"];\n  name: Scalars[\"String\"];\n};\n\nexport type DateAttributeDefinitionType = AttributeDefinitionType & {\n  __typename?: \"DateAttributeDefinitionType\";\n  name: Scalars[\"String\"];\n};\n\nexport type DateField = CustomField & {\n  __typename?: \"DateField\";\n  value: Scalars[\"Date\"];\n  name: Scalars[\"String\"];\n};\n\nexport type DateTimeAttribute = Attribute & {\n  __typename?: \"DateTimeAttribute\";\n  value: Scalars[\"DateTime\"];\n  name: Scalars[\"String\"];\n};\n\nexport type DateTimeAttributeDefinitionType = AttributeDefinitionType & {\n  __typename?: \"DateTimeAttributeDefinitionType\";\n  name: Scalars[\"String\"];\n};\n\nexport type DateTimeField = CustomField & {\n  __typename?: \"DateTimeField\";\n  value: Scalars[\"DateTime\"];\n  name: Scalars[\"String\"];\n};\n\nexport type DateTimeType = FieldType & {\n  __typename?: \"DateTimeType\";\n  name: Scalars[\"String\"];\n};\n\nexport type DateType = FieldType & {\n  __typename?: \"DateType\";\n  name: Scalars[\"String\"];\n};\n\nexport type Delivery = {\n  __typename?: \"Delivery\";\n  id: Scalars[\"String\"];\n  createdAt: Scalars[\"DateTime\"];\n  items: Array<DeliveryItem>;\n  parcels: Array<Parcel>;\n  address?: Maybe<Address>;\n};\n\nexport type DeliveryItem = {\n  __typename?: \"DeliveryItem\";\n  id: Scalars[\"String\"];\n  quantity: Scalars[\"Long\"];\n};\n\nexport type DeliveryItemDraftType = {\n  id: Scalars[\"String\"];\n  quantity: Scalars[\"Long\"];\n};\n\nexport type Dimensions = {\n  __typename?: \"Dimensions\";\n  width: Scalars[\"Int\"];\n  height: Scalars[\"Int\"];\n};\n\nexport type DimensionsInput = {\n  width: Scalars[\"Int\"];\n  height: Scalars[\"Int\"];\n};\n\n/** With discount codes it is possible to give specific cart discounts to an\n * eligible amount of users. They are defined by a string value which can be added\n * to a cart so that specific cart discounts can be applied to the cart.\n */\nexport type DiscountCode = Versioned & {\n  __typename?: \"DiscountCode\";\n  code: Scalars[\"String\"];\n  isActive: Scalars[\"Boolean\"];\n  maxApplications?: Maybe<Scalars[\"Long\"]>;\n  maxApplicationsPerCustomer?: Maybe<Scalars[\"Long\"]>;\n  cartPredicate?: Maybe<Scalars[\"String\"]>;\n  applicationVersion?: Maybe<Scalars[\"Long\"]>;\n  validFrom?: Maybe<Scalars[\"DateTime\"]>;\n  validUntil?: Maybe<Scalars[\"DateTime\"]>;\n  groups: Array<Scalars[\"String\"]>;\n  name?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  cartDiscounts: Array<CartDiscount>;\n  nameAllLocales?: Maybe<Array<LocalizedString>>;\n  descriptionAllLocales?: Maybe<Array<LocalizedString>>;\n  /** This field contains non-typed data. Consider using `customFields` as a typed alternative. */\n  customFieldsRaw?: Maybe<Array<RawCustomField>>;\n  /** This field would contain type data */\n  customFields?: Maybe<Type>;\n  custom?: Maybe<CustomFieldsType>;\n  /** How many times this discount code was applied (only applications that were part of a successful checkout are considered) */\n  applicationCount: Scalars[\"Long\"];\n  cartDiscountRefs: Array<Reference>;\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n  /** Custom fields are returned as a list instead of an object structure. */\n  customFieldList?: Maybe<Array<CustomField>>;\n};\n\n/** With discount codes it is possible to give specific cart discounts to an\n * eligible amount of users. They are defined by a string value which can be added\n * to a cart so that specific cart discounts can be applied to the cart.\n */\nexport type DiscountCodeNameArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\n/** With discount codes it is possible to give specific cart discounts to an\n * eligible amount of users. They are defined by a string value which can be added\n * to a cart so that specific cart discounts can be applied to the cart.\n */\nexport type DiscountCodeDescriptionArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\n/** With discount codes it is possible to give specific cart discounts to an\n * eligible amount of users. They are defined by a string value which can be added\n * to a cart so that specific cart discounts can be applied to the cart.\n */\nexport type DiscountCodeCustomFieldsRawArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** With discount codes it is possible to give specific cart discounts to an\n * eligible amount of users. They are defined by a string value which can be added\n * to a cart so that specific cart discounts can be applied to the cart.\n */\nexport type DiscountCodeCustomFieldListArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type DiscountCodeDraft = {\n  code: Scalars[\"String\"];\n  name?: Maybe<Array<LocalizedStringItemInputType>>;\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n  cartDiscounts: Array<ReferenceInput>;\n  isActive?: Maybe<Scalars[\"Boolean\"]>;\n  maxApplications?: Maybe<Scalars[\"Long\"]>;\n  maxApplicationsPerCustomer?: Maybe<Scalars[\"Long\"]>;\n  cartPredicate?: Maybe<Scalars[\"String\"]>;\n  custom?: Maybe<CustomFieldsDraft>;\n  validFrom?: Maybe<Scalars[\"DateTime\"]>;\n  validUntil?: Maybe<Scalars[\"DateTime\"]>;\n  groups?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type DiscountCodeInfo = {\n  __typename?: \"DiscountCodeInfo\";\n  discountCodeRef: Reference;\n  state?: Maybe<DiscountCodeState>;\n  discountCode?: Maybe<DiscountCode>;\n};\n\nexport type DiscountCodeQueryResult = {\n  __typename?: \"DiscountCodeQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<DiscountCode>;\n};\n\nexport enum DiscountCodeState {\n  /** The discount code is active and none of the discounts were applied because the\n   * discount application was stopped by one discount that has the StackingMode of\n   * StopAfterThisDiscount defined\n   */\n  ApplicationStoppedByPreviousDiscount = \"ApplicationStoppedByPreviousDiscount\",\n  /** The discount code is not valid or it does not contain any valid cart\n   * discounts. Validity is determined based on the validFrom and validUntil dates\n   */\n  NotValid = \"NotValid\",\n  /** maxApplications or maxApplicationsPerCustomer for discountCode has been reached. */\n  MaxApplicationReached = \"MaxApplicationReached\",\n  /** The discount code is active and it contains at least one active and valid\n   * CartDiscount. The discount code cartPredicate matches the cart and at least\n   * one of the contained active discount’s cart predicates matches the cart.\n   */\n  MatchesCart = \"MatchesCart\",\n  /** The discount code is active and it contains at least one active and valid\n   * CartDiscount. But its cart predicate does not match the cart or none of the\n   * contained active discount’s cart predicates match the cart\n   */\n  DoesNotMatchCart = \"DoesNotMatchCart\",\n  /** The discount code is not active or it does not contain any active cart discounts. */\n  NotActive = \"NotActive\"\n}\n\nexport type DiscountCodeUpdateAction = {\n  changeCartDiscounts?: Maybe<ChangeDiscountCodeCartDiscounts>;\n  changeGroups?: Maybe<ChangeDiscountCodeGroups>;\n  changeIsActive?: Maybe<ChangeDiscountCodeIsActive>;\n  setCartPredicate?: Maybe<SetDiscountCodeCartPredicate>;\n  setCustomField?: Maybe<SetDiscountCodeCustomField>;\n  setCustomType?: Maybe<SetDiscountCodeCustomType>;\n  setDescription?: Maybe<SetDiscountCodeDescription>;\n  setMaxApplications?: Maybe<SetDiscountCodeMaxApplications>;\n  setMaxApplicationsPerCustomer?: Maybe<\n    SetDiscountCodeMaxApplicationsPerCustomer\n  >;\n  setName?: Maybe<SetDiscountCodeName>;\n  setValidFrom?: Maybe<SetDiscountCodeValidFrom>;\n  setValidFromAndUntil?: Maybe<SetDiscountCodeValidFromAndUntil>;\n  setValidUntil?: Maybe<SetDiscountCodeValidUntil>;\n};\n\nexport type DiscountedLineItemPortion = {\n  __typename?: \"DiscountedLineItemPortion\";\n  discount?: Maybe<CartDiscount>;\n  discountRef: Reference;\n  discountedAmount: BaseMoney;\n};\n\nexport type DiscountedLineItemPrice = {\n  __typename?: \"DiscountedLineItemPrice\";\n  value: BaseMoney;\n  includedDiscounts: Array<DiscountedLineItemPortion>;\n};\n\nexport type DiscountedLineItemPriceForQuantity = {\n  __typename?: \"DiscountedLineItemPriceForQuantity\";\n  quantity: Scalars[\"Long\"];\n  discountedPrice: DiscountedLineItemPrice;\n};\n\nexport type DiscountedProductPriceValue = {\n  __typename?: \"DiscountedProductPriceValue\";\n  value: BaseMoney;\n  discountRef: Reference;\n  discount?: Maybe<ProductDiscount>;\n  /** Temporal. Will be renamed some time in the future. Please use 'discount'. */\n  discountRel?: Maybe<ProductDiscount>;\n};\n\nexport type DiscountedProductPriceValueInput = {\n  value: BaseMoneyInput;\n  discount: ReferenceInput;\n};\n\nexport type EnumAttribute = Attribute & {\n  __typename?: \"EnumAttribute\";\n  key: Scalars[\"String\"];\n  label: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n};\n\nexport type EnumAttributeDefinitionType = AttributeDefinitionType & {\n  __typename?: \"EnumAttributeDefinitionType\";\n  values: PlainEnumValueResult;\n  name: Scalars[\"String\"];\n};\n\nexport type EnumAttributeDefinitionTypeValuesArgs = {\n  includeKeys?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeKeys?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type EnumField = CustomField & {\n  __typename?: \"EnumField\";\n  key: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n};\n\nexport type EnumType = FieldType & {\n  __typename?: \"EnumType\";\n  values: Array<EnumValue>;\n  name: Scalars[\"String\"];\n};\n\nexport type EnumTypeDraft = {\n  values: Array<PlainEnumValueDraft>;\n};\n\nexport type EnumValue = {\n  __typename?: \"EnumValue\";\n  key: Scalars[\"String\"];\n  label: Scalars[\"String\"];\n};\n\nexport type ExternalDiscountValue = ProductDiscountValue & {\n  __typename?: \"ExternalDiscountValue\";\n  type: Scalars[\"String\"];\n};\n\nexport type ExternalDiscountValueInput = {\n  dummy?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ExternalLineItemTotalPriceDraft = {\n  price: BaseMoneyInput;\n  totalPrice: MoneyInput;\n};\n\nexport type ExternalOAuth = {\n  __typename?: \"ExternalOAuth\";\n  url: Scalars[\"String\"];\n  authorizationHeader: Scalars[\"String\"];\n};\n\nexport type ExternalOAuthDraft = {\n  url: Scalars[\"String\"];\n  authorizationHeader: Scalars[\"String\"];\n};\n\nexport type ExternalTaxAmountDraft = {\n  totalGross: MoneyInput;\n  taxRate: ExternalTaxRateDraft;\n};\n\nexport type ExternalTaxRateDraft = {\n  name: Scalars[\"String\"];\n  amount: Scalars[\"Float\"];\n  country: Scalars[\"Country\"];\n  state?: Maybe<Scalars[\"String\"]>;\n  subRates?: Maybe<Array<SubRateDraft>>;\n  includedInPrice?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** Field definitions describe custom fields and allow you to define some meta-information associated with the field. */\nexport type FieldDefinition = {\n  __typename?: \"FieldDefinition\";\n  name: Scalars[\"String\"];\n  required: Scalars[\"Boolean\"];\n  inputHint: TextInputHint;\n  label?: Maybe<Scalars[\"String\"]>;\n  labelAllLocales: Array<LocalizedString>;\n  type: FieldType;\n};\n\n/** Field definitions describe custom fields and allow you to define some meta-information associated with the field. */\nexport type FieldDefinitionLabelArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type FieldType = {\n  name: Scalars[\"String\"];\n};\n\nexport type Geometry = {\n  type: Scalars[\"String\"];\n};\n\nexport type GiftLineItemValue = CartDiscountValue & {\n  __typename?: \"GiftLineItemValue\";\n  type: Scalars[\"String\"];\n  variantId: Scalars[\"Int\"];\n  productRef: ProductReferenceIdentifier;\n  distributionChannelRef?: Maybe<ChannelReferenceIdentifier>;\n  supplyChannelRef?: Maybe<ChannelReferenceIdentifier>;\n};\n\nexport type GiftLineItemValueInput = {\n  product: ResourceIdentifierInput;\n  variantId: Scalars[\"Int\"];\n  distributionChannel?: Maybe<ResourceIdentifierInput>;\n  supplyChannel?: Maybe<ResourceIdentifierInput>;\n};\n\nexport type HighPrecisionMoney = BaseMoney & {\n  __typename?: \"HighPrecisionMoney\";\n  type: Scalars[\"String\"];\n  currencyCode: Scalars[\"Currency\"];\n  preciseAmount: Scalars[\"Long\"];\n  centAmount: Scalars[\"Long\"];\n  fractionDigits: Scalars[\"Int\"];\n};\n\nexport type HighPrecisionMoneyInput = {\n  currencyCode: Scalars[\"Currency\"];\n  preciseAmount: Scalars[\"Long\"];\n  fractionDigits: Scalars[\"Int\"];\n  centAmount?: Maybe<Scalars[\"Long\"]>;\n};\n\nexport type Image = {\n  __typename?: \"Image\";\n  url: Scalars[\"String\"];\n  dimensions: Dimensions;\n  label?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ImageInput = {\n  url: Scalars[\"String\"];\n  label?: Maybe<Scalars[\"String\"]>;\n  dimensions: DimensionsInput;\n};\n\nexport type ImportOrderCustomLineItemState = {\n  customLineItemId: Scalars[\"String\"];\n  state: Array<ItemStateDraftType>;\n};\n\nexport type ImportOrderLineItemState = {\n  lineItemId: Scalars[\"String\"];\n  state: Array<ItemStateDraftType>;\n};\n\nexport type Initiator = {\n  __typename?: \"Initiator\";\n  isPlatformClient?: Maybe<Scalars[\"Boolean\"]>;\n  user?: Maybe<Reference>;\n  externalUserId?: Maybe<Scalars[\"String\"]>;\n  customer?: Maybe<Reference>;\n  anonymousId?: Maybe<Scalars[\"String\"]>;\n  clientId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type InStore = CartQueryInterface &\n  CustomerActiveCartInterface &\n  OrderQueryInterface &\n  CustomerQueryInterface &\n  ShippingMethodsByCartInterface &\n  MeFieldInterface & {\n    __typename?: \"InStore\";\n    /** This field can only be used with an access token created with the password flow or with an anonymous session.\n     *\n     * It gives access to the data that is specific to the customer or the anonymous session linked to the access token.\n     */\n    me: InStoreMe;\n    shippingMethodsByCart: Array<ShippingMethod>;\n    customer?: Maybe<Customer>;\n    customers: CustomerQueryResult;\n    cart?: Maybe<Cart>;\n    carts: CartQueryResult;\n    customerActiveCart?: Maybe<Cart>;\n    order?: Maybe<Order>;\n    orders: OrderQueryResult;\n  };\n\nexport type InStoreShippingMethodsByCartArgs = {\n  id: Scalars[\"String\"];\n};\n\nexport type InStoreCustomerArgs = {\n  emailToken?: Maybe<Scalars[\"String\"]>;\n  passwordToken?: Maybe<Scalars[\"String\"]>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type InStoreCustomersArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type InStoreCartArgs = {\n  id: Scalars[\"String\"];\n};\n\nexport type InStoreCartsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type InStoreCustomerActiveCartArgs = {\n  customerId: Scalars[\"String\"];\n};\n\nexport type InStoreOrderArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  orderNumber?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type InStoreOrdersArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type InStoreMe = MeQueryInterface & {\n  __typename?: \"InStoreMe\";\n  customer?: Maybe<Customer>;\n  cart?: Maybe<Cart>;\n  carts: CartQueryResult;\n  activeCart?: Maybe<Cart>;\n  order?: Maybe<Order>;\n  orders: OrderQueryResult;\n  shoppingList?: Maybe<ShoppingList>;\n  shoppingLists: ShoppingListQueryResult;\n};\n\nexport type InStoreMeCartArgs = {\n  id: Scalars[\"String\"];\n};\n\nexport type InStoreMeCartsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type InStoreMeOrderArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  orderNumber?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type InStoreMeOrdersArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type InStoreMeShoppingListArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type InStoreMeShoppingListsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type InterfaceInteractionsRaw = {\n  __typename?: \"InterfaceInteractionsRaw\";\n  typeRef: Reference;\n  type?: Maybe<TypeDefinition>;\n  fields: Array<RawCustomField>;\n};\n\nexport type InterfaceInteractionsRawFieldsArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type InterfaceInteractionsRawResult = {\n  __typename?: \"InterfaceInteractionsRawResult\";\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n  total: Scalars[\"Int\"];\n  results: Array<InterfaceInteractionsRaw>;\n};\n\n/** Inventory allows you to track stock quantity per SKU and optionally per supply channel */\nexport type InventoryEntry = Versioned & {\n  __typename?: \"InventoryEntry\";\n  sku: Scalars[\"String\"];\n  supplyChannel?: Maybe<Reference>;\n  quantityOnStock: Scalars[\"Long\"];\n  availableQuantity: Scalars[\"Long\"];\n  restockableInDays?: Maybe<Scalars[\"Int\"]>;\n  expectedDelivery?: Maybe<Scalars[\"DateTime\"]>;\n  /** This field contains non-typed data. Consider using `customFields` as a typed alternative. */\n  customFieldsRaw?: Maybe<Array<RawCustomField>>;\n  /** This field would contain type data */\n  customFields?: Maybe<Type>;\n  custom?: Maybe<CustomFieldsType>;\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n  /** Custom fields are returned as a list instead of an object structure. */\n  customFieldList?: Maybe<Array<CustomField>>;\n};\n\n/** Inventory allows you to track stock quantity per SKU and optionally per supply channel */\nexport type InventoryEntryCustomFieldsRawArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** Inventory allows you to track stock quantity per SKU and optionally per supply channel */\nexport type InventoryEntryCustomFieldListArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type InventoryEntryDraft = {\n  sku: Scalars[\"String\"];\n  quantityOnStock?: Maybe<Scalars[\"Long\"]>;\n  restockableInDays?: Maybe<Scalars[\"Int\"]>;\n  expectedDelivery?: Maybe<Scalars[\"DateTime\"]>;\n  supplyChannel?: Maybe<ResourceIdentifierInput>;\n  custom?: Maybe<CustomFieldsDraft>;\n};\n\nexport type InventoryEntryQueryResult = {\n  __typename?: \"InventoryEntryQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<InventoryEntry>;\n};\n\nexport type InventoryEntryUpdateAction = {\n  addQuantity?: Maybe<AddInventoryEntryQuantity>;\n  changeQuantity?: Maybe<ChangeInventoryEntryQuantity>;\n  removeQuantity?: Maybe<RemoveInventoryEntryQuantity>;\n  setRestockableInDays?: Maybe<SetInventoryEntryRestockableInDays>;\n  setExpectedDelivery?: Maybe<SetInventoryEntryExpectedDelivery>;\n  setSupplyChannel?: Maybe<SetInventoryEntrySupplyChannel>;\n  setCustomType?: Maybe<SetInventoryEntryCustomType>;\n  setCustomField?: Maybe<SetInventoryEntryCustomField>;\n};\n\nexport enum InventoryMode {\n  /** Adding items to cart and ordering is independent of inventory. No inventory checks or modifications.\n   * This is the default mode for a new cart.\n   */\n  None = \"None\",\n  /** Creating an order will fail with an OutOfStock error if an unavailable line item exists. Line items in the cart\n   * are only reserved for the duration of the ordering transaction.\n   */\n  ReserveOnOrder = \"ReserveOnOrder\",\n  /** Orders are tracked on inventory. That means, ordering a LineItem will decrement the available quantity on the\n   * respective InventoryEntry. Creating an order will succeed even if the line item’s available quantity is zero or\n   * negative. But creating an order will fail with an OutOfStock error if no matching inventory entry exists for a\n   * line item.\n   */\n  TrackOnly = \"TrackOnly\"\n}\n\nexport type IOsUserType = Type & {\n  __typename?: \"iOSUserType\";\n  typeRef: Reference;\n  type: TypeDefinition;\n  apnsToken?: Maybe<StringField>;\n  myStore?: Maybe<ReferenceField>;\n};\n\nexport type ItemShippingDetails = {\n  __typename?: \"ItemShippingDetails\";\n  targets: Array<ItemShippingTarget>;\n  valid: Scalars[\"Boolean\"];\n};\n\nexport type ItemShippingDetailsDraft = {\n  targets: Array<ShippingTargetDraft>;\n};\n\nexport type ItemShippingDetailsDraftType = {\n  targets: Array<ShippingTargetDraftType>;\n};\n\nexport type ItemShippingTarget = {\n  __typename?: \"ItemShippingTarget\";\n  addressKey: Scalars[\"String\"];\n  quantity: Scalars[\"Long\"];\n};\n\nexport type ItemState = {\n  __typename?: \"ItemState\";\n  quantity: Scalars[\"Long\"];\n  stateRef: Reference;\n  state?: Maybe<State>;\n};\n\nexport type ItemStateDraftType = {\n  quantity: Scalars[\"Long\"];\n  state: ReferenceInput;\n};\n\nexport type KeyReference = {\n  __typename?: \"KeyReference\";\n  typeId: Scalars[\"String\"];\n  key: Scalars[\"String\"];\n};\n\n/** A line item is a snapshot of a product variant at the time it was added to the cart.\n *\n * Since a product variant may change at any time, the ProductVariant data is copied into the field variant.\n * The relation to the Product is kept but the line item will not automatically update if the product variant changes.\n * On the cart, the line item can be updated manually. The productSlug refers to the current version of the product.\n * It can be used to link to the product. If the product has been deleted, the line item remains but refers to a\n * non-existent product and the productSlug is left empty.\n *\n * Please also note that creating an order is impossible if the product or product\n * variant a line item relates to has been deleted.\n */\nexport type LineItem = {\n  __typename?: \"LineItem\";\n  id: Scalars[\"String\"];\n  productId: Scalars[\"String\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  nameAllLocales: Array<LocalizedString>;\n  productSlug?: Maybe<Scalars[\"String\"]>;\n  productType?: Maybe<ProductTypeDefinition>;\n  productTypeRef?: Maybe<Reference>;\n  variant?: Maybe<ProductVariant>;\n  price: ProductPrice;\n  taxedPrice?: Maybe<TaxedItemPrice>;\n  totalPrice?: Maybe<Money>;\n  quantity: Scalars[\"Long\"];\n  state: Array<ItemState>;\n  taxRate?: Maybe<TaxRate>;\n  supplyChannel?: Maybe<Channel>;\n  supplyChannelRef?: Maybe<Reference>;\n  distributionChannel?: Maybe<Channel>;\n  distributionChannelRef?: Maybe<Reference>;\n  discountedPricePerQuantity: Array<DiscountedLineItemPriceForQuantity>;\n  lineItemMode: LineItemMode;\n  priceMode: LineItemPriceMode;\n  /** This field contains non-typed data. Consider using `customFields` as a typed alternative. */\n  customFieldsRaw?: Maybe<Array<RawCustomField>>;\n  /** This field would contain type data */\n  customFields?: Maybe<Type>;\n  custom?: Maybe<CustomFieldsType>;\n  shippingDetails?: Maybe<ItemShippingDetails>;\n  inventoryMode?: Maybe<ItemShippingDetails>;\n  /** Custom fields are returned as a list instead of an object structure. */\n  customFieldList?: Maybe<Array<CustomField>>;\n};\n\n/** A line item is a snapshot of a product variant at the time it was added to the cart.\n *\n * Since a product variant may change at any time, the ProductVariant data is copied into the field variant.\n * The relation to the Product is kept but the line item will not automatically update if the product variant changes.\n * On the cart, the line item can be updated manually. The productSlug refers to the current version of the product.\n * It can be used to link to the product. If the product has been deleted, the line item remains but refers to a\n * non-existent product and the productSlug is left empty.\n *\n * Please also note that creating an order is impossible if the product or product\n * variant a line item relates to has been deleted.\n */\nexport type LineItemNameArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\n/** A line item is a snapshot of a product variant at the time it was added to the cart.\n *\n * Since a product variant may change at any time, the ProductVariant data is copied into the field variant.\n * The relation to the Product is kept but the line item will not automatically update if the product variant changes.\n * On the cart, the line item can be updated manually. The productSlug refers to the current version of the product.\n * It can be used to link to the product. If the product has been deleted, the line item remains but refers to a\n * non-existent product and the productSlug is left empty.\n *\n * Please also note that creating an order is impossible if the product or product\n * variant a line item relates to has been deleted.\n */\nexport type LineItemProductSlugArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\n/** A line item is a snapshot of a product variant at the time it was added to the cart.\n *\n * Since a product variant may change at any time, the ProductVariant data is copied into the field variant.\n * The relation to the Product is kept but the line item will not automatically update if the product variant changes.\n * On the cart, the line item can be updated manually. The productSlug refers to the current version of the product.\n * It can be used to link to the product. If the product has been deleted, the line item remains but refers to a\n * non-existent product and the productSlug is left empty.\n *\n * Please also note that creating an order is impossible if the product or product\n * variant a line item relates to has been deleted.\n */\nexport type LineItemCustomFieldsRawArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** A line item is a snapshot of a product variant at the time it was added to the cart.\n *\n * Since a product variant may change at any time, the ProductVariant data is copied into the field variant.\n * The relation to the Product is kept but the line item will not automatically update if the product variant changes.\n * On the cart, the line item can be updated manually. The productSlug refers to the current version of the product.\n * It can be used to link to the product. If the product has been deleted, the line item remains but refers to a\n * non-existent product and the productSlug is left empty.\n *\n * Please also note that creating an order is impossible if the product or product\n * variant a line item relates to has been deleted.\n */\nexport type LineItemCustomFieldListArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type LineItemDraft = {\n  productId?: Maybe<Scalars[\"String\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  quantity?: Maybe<Scalars[\"Long\"]>;\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  supplyChannel?: Maybe<ResourceIdentifierInput>;\n  distributionChannel?: Maybe<ResourceIdentifierInput>;\n  custom?: Maybe<CustomFieldsDraft>;\n  shippingDetails?: Maybe<ItemShippingDetailsDraft>;\n  externalTaxRate?: Maybe<ExternalTaxRateDraft>;\n  externalPrice?: Maybe<BaseMoneyInput>;\n  externalTotalPrice?: Maybe<ExternalLineItemTotalPriceDraft>;\n};\n\nexport enum LineItemMode {\n  /** The line item was added automatically, because a discount has added a free gift to the cart.\n   * The quantity can not be increased, and it won’t be merged when the same product variant is added.\n   * If the gift is removed, an entry is added to the \"refusedGifts\" array and the discount won’t be applied again\n   * to the cart. The price can not be changed externally.\n   * All other updates, such as the ones related to custom fields, can be used.\n   */\n  GiftLineItem = \"GiftLineItem\",\n  /** The line item was added during cart creation or with the update action addLineItem. Its quantity can be\n   * changed without restrictions.\n   */\n  Standard = \"Standard\"\n}\n\nexport enum LineItemPriceMode {\n  /** The price is selected form the product variant. This is the default mode. */\n  Platform = \"Platform\",\n  /** The line item price was set externally. Cart discounts can apply to line items\n   * with this price mode. All update actions that change the quantity of a line\n   * item with this price mode require the externalPrice field to be given.\n   */\n  ExternalPrice = \"ExternalPrice\",\n  /** The line item price with the total was set externally. */\n  ExternalTotal = \"ExternalTotal\"\n}\n\nexport type LineItemReturnItem = ReturnItem & {\n  __typename?: \"LineItemReturnItem\";\n  type: Scalars[\"String\"];\n  lineItemId: Scalars[\"String\"];\n  id: Scalars[\"String\"];\n  quantity: Scalars[\"Long\"];\n  comment?: Maybe<Scalars[\"String\"]>;\n  shipmentState: ReturnShipmentState;\n  paymentState: ReturnPaymentState;\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdAt: Scalars[\"DateTime\"];\n};\n\nexport type LineItemsTarget = CartDiscountTarget & {\n  __typename?: \"LineItemsTarget\";\n  predicate: Scalars[\"String\"];\n  type: Scalars[\"String\"];\n};\n\nexport type LineItemsTargetInput = {\n  predicate: Scalars[\"String\"];\n};\n\nexport type LocalizableEnumAttributeDefinitionType = AttributeDefinitionType & {\n  __typename?: \"LocalizableEnumAttributeDefinitionType\";\n  values: LocalizableEnumValueTypeResult;\n  name: Scalars[\"String\"];\n};\n\nexport type LocalizableEnumAttributeDefinitionTypeValuesArgs = {\n  includeKeys?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeKeys?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type LocalizableEnumTypeDraft = {\n  values: Array<LocalizedEnumValueDraft>;\n};\n\nexport type LocalizableEnumValueType = {\n  __typename?: \"LocalizableEnumValueType\";\n  key: Scalars[\"String\"];\n  label?: Maybe<Scalars[\"String\"]>;\n  labelAllLocales: Array<LocalizedString>;\n};\n\nexport type LocalizableEnumValueTypeLabelArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type LocalizableEnumValueTypeResult = {\n  __typename?: \"LocalizableEnumValueTypeResult\";\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n  total: Scalars[\"Int\"];\n  results: Array<LocalizableEnumValueType>;\n};\n\nexport type LocalizableTextAttributeDefinitionType = AttributeDefinitionType & {\n  __typename?: \"LocalizableTextAttributeDefinitionType\";\n  name: Scalars[\"String\"];\n};\n\nexport type LocalizedEnumAttribute = Attribute & {\n  __typename?: \"LocalizedEnumAttribute\";\n  key: Scalars[\"String\"];\n  label?: Maybe<Scalars[\"String\"]>;\n  name: Scalars[\"String\"];\n};\n\nexport type LocalizedEnumAttributeLabelArgs = {\n  locale: Scalars[\"Locale\"];\n};\n\nexport type LocalizedEnumField = CustomField & {\n  __typename?: \"LocalizedEnumField\";\n  key: Scalars[\"String\"];\n  label?: Maybe<Scalars[\"String\"]>;\n  name: Scalars[\"String\"];\n};\n\nexport type LocalizedEnumFieldLabelArgs = {\n  locale: Scalars[\"Locale\"];\n};\n\nexport type LocalizedEnumType = FieldType & {\n  __typename?: \"LocalizedEnumType\";\n  values: Array<LocalizedEnumValue>;\n  name: Scalars[\"String\"];\n};\n\nexport type LocalizedEnumValue = {\n  __typename?: \"LocalizedEnumValue\";\n  key: Scalars[\"String\"];\n  label?: Maybe<Scalars[\"String\"]>;\n  labelAllLocales: Array<LocalizedString>;\n};\n\nexport type LocalizedEnumValueLabelArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type LocalizedEnumValueDraft = {\n  key: Scalars[\"String\"];\n  label: Array<LocalizedStringItemInputType>;\n};\n\nexport type LocalizedEnumValueInput = {\n  key: Scalars[\"String\"];\n  label: Array<LocalizedStringItemInputType>;\n};\n\nexport type LocalizedString = {\n  __typename?: \"LocalizedString\";\n  locale: Scalars[\"Locale\"];\n  value: Scalars[\"String\"];\n};\n\nexport type LocalizedStringAttribute = Attribute & {\n  __typename?: \"LocalizedStringAttribute\";\n  value?: Maybe<Scalars[\"String\"]>;\n  name: Scalars[\"String\"];\n};\n\nexport type LocalizedStringAttributeValueArgs = {\n  locale: Scalars[\"Locale\"];\n};\n\nexport type LocalizedStringField = CustomField & {\n  __typename?: \"LocalizedStringField\";\n  value?: Maybe<Scalars[\"String\"]>;\n  name: Scalars[\"String\"];\n};\n\nexport type LocalizedStringFieldValueArgs = {\n  locale: Scalars[\"Locale\"];\n};\n\nexport type LocalizedStringItemInputType = {\n  locale: Scalars[\"Locale\"];\n  value: Scalars[\"String\"];\n};\n\nexport type LocalizedStringType = FieldType & {\n  __typename?: \"LocalizedStringType\";\n  name: Scalars[\"String\"];\n};\n\nexport type LocalizedText = {\n  text: Scalars[\"String\"];\n  locale: Scalars[\"Locale\"];\n};\n\nexport type Location = {\n  __typename?: \"Location\";\n  country: Scalars[\"Country\"];\n  state?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Sunrise Product Data Set Structure */\nexport type MainProductType = ProductType & {\n  __typename?: \"mainProductType\";\n  productTypeId: Scalars[\"String\"];\n  creationDate?: Maybe<DateTimeAttribute>;\n  articleNumberManufacturer?: Maybe<StringAttribute>;\n  articleNumberMax?: Maybe<StringAttribute>;\n  matrixId?: Maybe<StringAttribute>;\n  baseId?: Maybe<StringAttribute>;\n  designer?: Maybe<EnumAttribute>;\n  madeInItaly?: Maybe<EnumAttribute>;\n  completeTheLook?: Maybe<Array<StringAttribute>>;\n  commonSize?: Maybe<EnumAttribute>;\n  size?: Maybe<StringAttribute>;\n  color?: Maybe<LocalizedEnumAttribute>;\n  colorFreeDefinition?: Maybe<LocalizedStringAttribute>;\n  details?: Maybe<Array<LocalizedStringAttribute>>;\n  style?: Maybe<EnumAttribute>;\n  gender?: Maybe<EnumAttribute>;\n  season?: Maybe<StringAttribute>;\n  isOnStock?: Maybe<BooleanAttribute>;\n  isLook?: Maybe<BooleanAttribute>;\n  lookProducts?: Maybe<Array<StringAttribute>>;\n  seasonNew?: Maybe<StringAttribute>;\n  sapExternalId?: Maybe<StringAttribute>;\n};\n\nexport type Me = MeQueryInterface & {\n  __typename?: \"Me\";\n  customer?: Maybe<Customer>;\n  cart?: Maybe<Cart>;\n  carts: CartQueryResult;\n  activeCart?: Maybe<Cart>;\n  order?: Maybe<Order>;\n  orders: OrderQueryResult;\n  shoppingList?: Maybe<ShoppingList>;\n  shoppingLists: ShoppingListQueryResult;\n};\n\nexport type MeCartArgs = {\n  id: Scalars[\"String\"];\n};\n\nexport type MeCartsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type MeOrderArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  orderNumber?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MeOrdersArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type MeShoppingListArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MeShoppingListsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** The me field gives access to the data that is specific to the customer or anonymous session linked to the access token. */\nexport type MeFieldInterface = {\n  me: MeQueryInterface;\n};\n\nexport type MeQueryInterface = {\n  cart?: Maybe<Cart>;\n  carts: CartQueryResult;\n  activeCart?: Maybe<Cart>;\n  order?: Maybe<Order>;\n  orders: OrderQueryResult;\n  shoppingList?: Maybe<ShoppingList>;\n  shoppingLists: ShoppingListQueryResult;\n};\n\nexport type MeQueryInterfaceCartArgs = {\n  id: Scalars[\"String\"];\n};\n\nexport type MeQueryInterfaceCartsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type MeQueryInterfaceOrderArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  orderNumber?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MeQueryInterfaceOrdersArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type MeQueryInterfaceShoppingListArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MeQueryInterfaceShoppingListsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type MessagesConfiguration = {\n  __typename?: \"MessagesConfiguration\";\n  enabled: Scalars[\"Boolean\"];\n  deleteDaysAfterCreation?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type MessagesConfigurationDraft = {\n  enabled: Scalars[\"Boolean\"];\n  deleteDaysAfterCreation: Scalars[\"Int\"];\n};\n\nexport type Money = BaseMoney & {\n  __typename?: \"Money\";\n  type: Scalars[\"String\"];\n  currencyCode: Scalars[\"Currency\"];\n  centAmount: Scalars[\"Long\"];\n  /** For the `Money` it equals to the default number of fraction digits used with the currency. */\n  fractionDigits: Scalars[\"Int\"];\n};\n\nexport type MoneyAttribute = Attribute & {\n  __typename?: \"MoneyAttribute\";\n  centAmount: Scalars[\"Long\"];\n  currencyCode: Scalars[\"Currency\"];\n  name: Scalars[\"String\"];\n};\n\nexport type MoneyAttributeDefinitionType = AttributeDefinitionType & {\n  __typename?: \"MoneyAttributeDefinitionType\";\n  name: Scalars[\"String\"];\n};\n\nexport type MoneyDraft = {\n  currencyCode: Scalars[\"Currency\"];\n  centAmount: Scalars[\"Long\"];\n};\n\nexport type MoneyField = CustomField & {\n  __typename?: \"MoneyField\";\n  centAmount: Scalars[\"Long\"];\n  currencyCode: Scalars[\"Currency\"];\n  name: Scalars[\"String\"];\n};\n\nexport type MoneyInput = {\n  currencyCode: Scalars[\"Currency\"];\n  centAmount: Scalars[\"Long\"];\n};\n\nexport type MoneyType = FieldType & {\n  __typename?: \"MoneyType\";\n  name: Scalars[\"String\"];\n};\n\nexport type MoveProductImageToPosition = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  imageUrl: Scalars[\"String\"];\n  position: Scalars[\"Int\"];\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type MultiBuyCustomLineItemsTarget = CartDiscountTarget & {\n  __typename?: \"MultiBuyCustomLineItemsTarget\";\n  predicate: Scalars[\"String\"];\n  triggerQuantity: Scalars[\"Long\"];\n  discountedQuantity: Scalars[\"Long\"];\n  maxOccurrence?: Maybe<Scalars[\"Int\"]>;\n  selectionMode: SelectionMode;\n  type: Scalars[\"String\"];\n};\n\nexport type MultiBuyCustomLineItemsTargetInput = {\n  predicate: Scalars[\"String\"];\n  triggerQuantity: Scalars[\"Long\"];\n  discountedQuantity: Scalars[\"Long\"];\n  maxOccurrence?: Maybe<Scalars[\"Int\"]>;\n  selectionMode?: Maybe<SelectionMode>;\n};\n\nexport type MultiBuyLineItemsTarget = CartDiscountTarget & {\n  __typename?: \"MultiBuyLineItemsTarget\";\n  predicate: Scalars[\"String\"];\n  triggerQuantity: Scalars[\"Long\"];\n  discountedQuantity: Scalars[\"Long\"];\n  maxOccurrence?: Maybe<Scalars[\"Int\"]>;\n  selectionMode: SelectionMode;\n  type: Scalars[\"String\"];\n};\n\nexport type MultiBuyLineItemsTargetInput = {\n  predicate: Scalars[\"String\"];\n  triggerQuantity: Scalars[\"Long\"];\n  discountedQuantity: Scalars[\"Long\"];\n  maxOccurrence?: Maybe<Scalars[\"Int\"]>;\n  selectionMode?: Maybe<SelectionMode>;\n};\n\nexport type Mutation = {\n  __typename?: \"Mutation\";\n  createCustomerGroup?: Maybe<CustomerGroup>;\n  updateCustomerGroup?: Maybe<CustomerGroup>;\n  deleteCustomerGroup?: Maybe<CustomerGroup>;\n  createCategory?: Maybe<Category>;\n  updateCategory?: Maybe<Category>;\n  deleteCategory?: Maybe<Category>;\n  createProductType?: Maybe<ProductTypeDefinition>;\n  updateProductType?: Maybe<ProductTypeDefinition>;\n  deleteProductType?: Maybe<ProductTypeDefinition>;\n  createShippingMethod?: Maybe<ShippingMethod>;\n  updateShippingMethod?: Maybe<ShippingMethod>;\n  deleteShippingMethod?: Maybe<ShippingMethod>;\n  createZone?: Maybe<Zone>;\n  updateZone?: Maybe<Zone>;\n  deleteZone?: Maybe<Zone>;\n  createTaxCategory?: Maybe<TaxCategory>;\n  updateTaxCategory?: Maybe<TaxCategory>;\n  deleteTaxCategory?: Maybe<TaxCategory>;\n  createDiscountCode?: Maybe<DiscountCode>;\n  updateDiscountCode?: Maybe<DiscountCode>;\n  deleteDiscountCode?: Maybe<DiscountCode>;\n  createCartDiscount?: Maybe<CartDiscount>;\n  updateCartDiscount?: Maybe<CartDiscount>;\n  deleteCartDiscount?: Maybe<CartDiscount>;\n  createProductDiscount?: Maybe<ProductDiscount>;\n  updateProductDiscount?: Maybe<ProductDiscount>;\n  deleteProductDiscount?: Maybe<ProductDiscount>;\n  createProduct?: Maybe<Product>;\n  updateProduct?: Maybe<Product>;\n  deleteProduct?: Maybe<Product>;\n  /** Creates a customer. If an anonymous cart is given then the cart is assigned to\n   * the created customer and the version number of the Cart will increase. If the\n   * id of an anonymous session is given, all carts and orders will be assigned to\n   * the created customer.\n   */\n  customerSignUp: CustomerSignInResult;\n  /** Retrieves the authenticated customer (a customer that matches the given email/password pair).\n   *\n   * There may be carts and orders created before the sign in that should be\n   * assigned to the customer account. With the `anonymousCartId`, a single\n   * anonymous cart can be assigned. With the `anonymousId`, all orders and carts\n   * that have this `anonymousId` set will be assigned to the customer.\n   * If both `anonymousCartId` and `anonymousId` are given, the anonymous cart must have the `anonymousId`.\n   *\n   * Additionally, there might also exist one or more active customer carts from an\n   * earlier session. On customer sign in there are several ways how to proceed\n   * with this cart and the cart referenced by the `anonymousCartId`.\n   *\n   * * If the customer does not have a cart yet, the anonymous cart becomes the customer's cart.\n   * * If the customer already has one or more carts, the content of the anonymous\n   * cart will be copied to the customer's active cart that has been modified most recently.\n   *\n   *   In this case the `CartState` of the anonymous cart gets changed to `Merged`\n   * while the customer's cart remains the `Active` cart.\n   *\n   *   If a `LineItem` in the anonymous cart matches an existing line item, or a\n   * `CustomLineItem` matches an existing custom line item in the customer's cart,\n   * the maximum quantity of both line items is used as the new quantity.\n   *\n   *   `ItemShippingDetails` are copied from the item with the highest quantity.\n   *\n   *   If `itemShippingAddresses` are different in the two carts, the resulting cart\n   * contains the addresses of both the customer cart and the anonymous cart.\n   *\n   *   Note, that it is not possible to merge carts that differ in their currency (set during creation of the cart).\n   *\n   * If a cart is is returned as part of the `CustomerSignInResult`, it has been\n   * recalculated (it will have up-to-date prices, taxes and discounts, and invalid\n   * line items have been removed).\n   */\n  customerSignIn: CustomerSignInResult;\n  updateCustomer?: Maybe<Customer>;\n  deleteCustomer?: Maybe<Customer>;\n  customerChangePassword?: Maybe<Customer>;\n  /** The following workflow can be used to reset the customer’s password:\n   *\n   * 1. Create a password reset token and send it embedded in a link to the customer.\n   * 2. When the customer clicks on the link, you may optionally retrieve customer by password token.\n   * 3. When the customer entered new password, use reset customer’s password to reset the password.\n   */\n  customerResetPassword?: Maybe<Customer>;\n  /** Verifies customer's email using a token. */\n  customerConfirmEmail?: Maybe<Customer>;\n  /** The token value is used to reset the password of the customer with the given\n   * email. The token is valid only for 10 minutes.\n   */\n  customerCreatePasswordResetToken?: Maybe<CustomerToken>;\n  customerCreateEmailVerificationToken: CustomerToken;\n  /** If used with an access token for Anonymous Sessions, all orders and carts\n   * belonging to the anonymousId will be assigned to the newly created customer.\n   */\n  customerSignMeUp: CustomerSignInResult;\n  /** Retrieves the authenticated customer (a customer that matches the given email/password pair).\n   *\n   * If used with an access token for Anonymous Sessions, all orders and carts\n   * belonging to the `anonymousId` will be assigned to the newly created customer.\n   *\n   * * If the customer does not have a cart yet, the anonymous cart that was\n   * modified most recently becomes the customer's cart.\n   * * If the customer already has a cart, the most recently modified anonymous\n   * cart will be handled according to the `AnonymousCartSignInMode`.\n   *\n   * If a cart is is returned as part of the `CustomerSignInResult`, it has been\n   * recalculated (it will have up-to-date prices, taxes and discounts, and invalid\n   * line items have been removed).\n   */\n  customerSignMeIn: CustomerSignInResult;\n  updateMyCustomer?: Maybe<Customer>;\n  deleteMyCustomer?: Maybe<Customer>;\n  customerChangeMyPassword?: Maybe<Customer>;\n  customerConfirmMyEmail?: Maybe<Customer>;\n  customerResetMyPassword?: Maybe<Customer>;\n  createInventoryEntry?: Maybe<InventoryEntry>;\n  updateInventoryEntry?: Maybe<InventoryEntry>;\n  deleteInventoryEntry?: Maybe<InventoryEntry>;\n  createCart?: Maybe<Cart>;\n  updateCart?: Maybe<Cart>;\n  deleteCart?: Maybe<Cart>;\n  replicateCart?: Maybe<Cart>;\n  createMyCart?: Maybe<Cart>;\n  updateMyCart?: Maybe<Cart>;\n  deleteMyCart?: Maybe<Cart>;\n  createOrderFromCart?: Maybe<Order>;\n  updateOrder?: Maybe<Order>;\n  deleteOrder?: Maybe<Order>;\n  createMyOrderFromCart?: Maybe<Order>;\n  createShoppingList?: Maybe<ShoppingList>;\n  updateShoppingList?: Maybe<ShoppingList>;\n  deleteShoppingList?: Maybe<ShoppingList>;\n  createMyShoppingList?: Maybe<ShoppingList>;\n  updateMyShoppingList?: Maybe<ShoppingList>;\n  deleteMyShoppingList?: Maybe<ShoppingList>;\n  updateProject?: Maybe<ProjectProjection>;\n  createStore?: Maybe<Store>;\n  updateStore?: Maybe<Store>;\n  deleteStore?: Maybe<Store>;\n  createApiClient?: Maybe<ApiClientWithSecret>;\n  deleteApiClient?: Maybe<ApiClientWithoutSecret>;\n};\n\nexport type MutationCreateCustomerGroupArgs = {\n  draft: CustomerGroupDraft;\n};\n\nexport type MutationUpdateCustomerGroupArgs = {\n  version: Scalars[\"Long\"];\n  actions: Array<CustomerGroupUpdateAction>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationDeleteCustomerGroupArgs = {\n  version: Scalars[\"Long\"];\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationCreateCategoryArgs = {\n  draft: CategoryDraft;\n};\n\nexport type MutationUpdateCategoryArgs = {\n  version: Scalars[\"Long\"];\n  actions: Array<CategoryUpdateAction>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationDeleteCategoryArgs = {\n  version: Scalars[\"Long\"];\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationCreateProductTypeArgs = {\n  draft: ProductTypeDraft;\n};\n\nexport type MutationUpdateProductTypeArgs = {\n  version: Scalars[\"Long\"];\n  actions: Array<ProductTypeUpdateAction>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationDeleteProductTypeArgs = {\n  version: Scalars[\"Long\"];\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationCreateShippingMethodArgs = {\n  draft: ShippingMethodDraft;\n};\n\nexport type MutationUpdateShippingMethodArgs = {\n  version: Scalars[\"Long\"];\n  actions: Array<ShippingMethodUpdateAction>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationDeleteShippingMethodArgs = {\n  version: Scalars[\"Long\"];\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationCreateZoneArgs = {\n  draft: CreateZone;\n};\n\nexport type MutationUpdateZoneArgs = {\n  version: Scalars[\"Long\"];\n  actions: Array<ZoneUpdateAction>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationDeleteZoneArgs = {\n  version: Scalars[\"Long\"];\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationCreateTaxCategoryArgs = {\n  draft: TaxCategoryDraft;\n};\n\nexport type MutationUpdateTaxCategoryArgs = {\n  version: Scalars[\"Long\"];\n  actions: Array<TaxCategoryUpdateAction>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationDeleteTaxCategoryArgs = {\n  version: Scalars[\"Long\"];\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationCreateDiscountCodeArgs = {\n  draft: DiscountCodeDraft;\n};\n\nexport type MutationUpdateDiscountCodeArgs = {\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  actions: Array<DiscountCodeUpdateAction>;\n};\n\nexport type MutationDeleteDiscountCodeArgs = {\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n};\n\nexport type MutationCreateCartDiscountArgs = {\n  draft: CartDiscountDraft;\n};\n\nexport type MutationUpdateCartDiscountArgs = {\n  version: Scalars[\"Long\"];\n  actions: Array<CartDiscountUpdateAction>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationDeleteCartDiscountArgs = {\n  version: Scalars[\"Long\"];\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationCreateProductDiscountArgs = {\n  draft: ProductDiscountDraft;\n};\n\nexport type MutationUpdateProductDiscountArgs = {\n  version: Scalars[\"Long\"];\n  actions: Array<ProductDiscountUpdateAction>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationDeleteProductDiscountArgs = {\n  version: Scalars[\"Long\"];\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationCreateProductArgs = {\n  draft: ProductDraft;\n};\n\nexport type MutationUpdateProductArgs = {\n  version: Scalars[\"Long\"];\n  actions: Array<ProductUpdateAction>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationDeleteProductArgs = {\n  version: Scalars[\"Long\"];\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationCustomerSignUpArgs = {\n  draft: CustomerSignUpDraft;\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationCustomerSignInArgs = {\n  draft: CustomerSignInDraft;\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationUpdateCustomerArgs = {\n  version: Scalars[\"Long\"];\n  actions: Array<CustomerUpdateAction>;\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationDeleteCustomerArgs = {\n  version: Scalars[\"Long\"];\n  personalDataErasure?: Maybe<Scalars[\"Boolean\"]>;\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationCustomerChangePasswordArgs = {\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  currentPassword: Scalars[\"String\"];\n  newPassword: Scalars[\"String\"];\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationCustomerResetPasswordArgs = {\n  version?: Maybe<Scalars[\"Long\"]>;\n  tokenValue: Scalars[\"String\"];\n  newPassword: Scalars[\"String\"];\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationCustomerConfirmEmailArgs = {\n  version?: Maybe<Scalars[\"Long\"]>;\n  tokenValue: Scalars[\"String\"];\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationCustomerCreatePasswordResetTokenArgs = {\n  email: Scalars[\"String\"];\n  ttlMinutes?: Maybe<Scalars[\"Int\"]>;\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationCustomerCreateEmailVerificationTokenArgs = {\n  id: Scalars[\"String\"];\n  version?: Maybe<Scalars[\"Long\"]>;\n  ttlMinutes: Scalars[\"Int\"];\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationCustomerSignMeUpArgs = {\n  draft: CustomerSignMeUpDraft;\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationCustomerSignMeInArgs = {\n  draft: CustomerSignMeInDraft;\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationUpdateMyCustomerArgs = {\n  version: Scalars[\"Long\"];\n  actions: Array<MyCustomerUpdateAction>;\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationDeleteMyCustomerArgs = {\n  version: Scalars[\"Long\"];\n  personalDataErasure?: Maybe<Scalars[\"Boolean\"]>;\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationCustomerChangeMyPasswordArgs = {\n  version: Scalars[\"Long\"];\n  currentPassword: Scalars[\"String\"];\n  newPassword: Scalars[\"String\"];\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationCustomerConfirmMyEmailArgs = {\n  tokenValue: Scalars[\"String\"];\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationCustomerResetMyPasswordArgs = {\n  tokenValue: Scalars[\"String\"];\n  newPassword: Scalars[\"String\"];\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationCreateInventoryEntryArgs = {\n  draft: InventoryEntryDraft;\n};\n\nexport type MutationUpdateInventoryEntryArgs = {\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  actions: Array<InventoryEntryUpdateAction>;\n};\n\nexport type MutationDeleteInventoryEntryArgs = {\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n};\n\nexport type MutationCreateCartArgs = {\n  draft: CartDraft;\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationUpdateCartArgs = {\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  actions: Array<CartUpdateAction>;\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationDeleteCartArgs = {\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  personalDataErasure?: Maybe<Scalars[\"Boolean\"]>;\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationReplicateCartArgs = {\n  reference: ReferenceInput;\n};\n\nexport type MutationCreateMyCartArgs = {\n  draft: MyCartDraft;\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationUpdateMyCartArgs = {\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  actions: Array<MyCartUpdateAction>;\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationDeleteMyCartArgs = {\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationCreateOrderFromCartArgs = {\n  draft: OrderCartCommand;\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationUpdateOrderArgs = {\n  version: Scalars[\"Long\"];\n  actions: Array<OrderUpdateAction>;\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n  id?: Maybe<Scalars[\"String\"]>;\n  orderNumber?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationDeleteOrderArgs = {\n  version: Scalars[\"Long\"];\n  personalDataErasure?: Maybe<Scalars[\"Boolean\"]>;\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n  id?: Maybe<Scalars[\"String\"]>;\n  orderNumber?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationCreateMyOrderFromCartArgs = {\n  draft: OrderMyCartCommand;\n  storeKey?: Maybe<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type MutationCreateShoppingListArgs = {\n  draft: ShoppingListDraft;\n};\n\nexport type MutationUpdateShoppingListArgs = {\n  version: Scalars[\"Long\"];\n  actions: Array<ShoppingListUpdateAction>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationDeleteShoppingListArgs = {\n  version: Scalars[\"Long\"];\n  personalDataErasure?: Maybe<Scalars[\"Boolean\"]>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationCreateMyShoppingListArgs = {\n  draft: MyShoppingListDraft;\n};\n\nexport type MutationUpdateMyShoppingListArgs = {\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  actions: Array<MyShoppingListUpdateAction>;\n};\n\nexport type MutationDeleteMyShoppingListArgs = {\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n};\n\nexport type MutationUpdateProjectArgs = {\n  version: Scalars[\"Long\"];\n  actions: Array<ProjectSettingsUpdateAction>;\n};\n\nexport type MutationCreateStoreArgs = {\n  draft: CreateStore;\n};\n\nexport type MutationUpdateStoreArgs = {\n  version: Scalars[\"Long\"];\n  actions: Array<StoreUpdateAction>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationDeleteStoreArgs = {\n  version: Scalars[\"Long\"];\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type MutationCreateApiClientArgs = {\n  draft: CreateApiClient;\n};\n\nexport type MutationDeleteApiClientArgs = {\n  id: Scalars[\"String\"];\n};\n\nexport type MyCartDraft = {\n  currency: Scalars[\"Currency\"];\n  country?: Maybe<Scalars[\"Country\"]>;\n  inventoryMode?: Maybe<InventoryMode>;\n  custom?: Maybe<CustomFieldsDraft>;\n  customerEmail?: Maybe<Scalars[\"String\"]>;\n  shippingAddress?: Maybe<AddressInput>;\n  billingAddress?: Maybe<AddressInput>;\n  shippingMethod?: Maybe<ResourceIdentifierInput>;\n  taxMode?: Maybe<TaxMode>;\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  deleteDaysAfterLastModification?: Maybe<Scalars[\"Int\"]>;\n  itemShippingAddresses?: Maybe<Array<AddressInput>>;\n  discountCodes?: Maybe<Array<Scalars[\"String\"]>>;\n  lineItems?: Maybe<Array<MyLineItemDraft>>;\n};\n\nexport type MyCartUpdateAction = {\n  addDiscountCode?: Maybe<AddCartDiscountCode>;\n  addItemShippingAddress?: Maybe<AddCartItemShippingAddress>;\n  addLineItem?: Maybe<AddMyCartLineItem>;\n  addPayment?: Maybe<AddCartPayment>;\n  addShoppingList?: Maybe<AddCartShoppingList>;\n  applyDeltaToLineItemShippingDetailsTargets?: Maybe<\n    ApplyCartDeltaToLineItemShippingDetailsTargets\n  >;\n  changeLineItemQuantity?: Maybe<ChangeCartLineItemQuantity>;\n  changeTaxMode?: Maybe<ChangeMyCartTaxMode>;\n  recalculate?: Maybe<RecalculateCart>;\n  removeDiscountCode?: Maybe<RemoveCartDiscountCode>;\n  removeItemShippingAddress?: Maybe<RemoveCartItemShippingAddress>;\n  removeLineItem?: Maybe<RemoveCartLineItem>;\n  removePayment?: Maybe<RemoveCartPayment>;\n  setBillingAddress?: Maybe<SetCartBillingAddress>;\n  setCountry?: Maybe<SetCartCountry>;\n  setCustomField?: Maybe<SetCartCustomField>;\n  setCustomType?: Maybe<SetCartCustomType>;\n  setCustomerEmail?: Maybe<SetCartCustomerEmail>;\n  setDeleteDaysAfterLastModification?: Maybe<\n    SetCartDeleteDaysAfterLastModification\n  >;\n  setLineItemCustomField?: Maybe<SetCartLineItemCustomField>;\n  setLineItemCustomType?: Maybe<SetCartLineItemCustomType>;\n  setLineItemShippingDetails?: Maybe<SetCartLineItemShippingDetails>;\n  setLocale?: Maybe<SetCartLocale>;\n  setShippingMethod?: Maybe<SetMyCartShippingMethod>;\n  setShippingAddress?: Maybe<SetCartShippingAddress>;\n  updateItemShippingAddress?: Maybe<UpdateCartItemShippingAddress>;\n};\n\nexport type MyCustomerUpdateAction = {\n  addAddress?: Maybe<AddCustomerAddress>;\n  addBillingAddressId?: Maybe<AddCustomerBillingAddressId>;\n  addShippingAddressId?: Maybe<AddCustomerShippingAddressId>;\n  changeAddress?: Maybe<ChangeCustomerAddress>;\n  changeEmail?: Maybe<ChangeCustomerEmail>;\n  removeAddress?: Maybe<RemoveCustomerAddress>;\n  removeBillingAddressId?: Maybe<RemoveCustomerBillingAddressId>;\n  removeShippingAddressId?: Maybe<RemoveCustomerShippingAddressId>;\n  setCompanyName?: Maybe<SetCustomerCompanyName>;\n  setCustomField?: Maybe<SetCustomerCustomField>;\n  setCustomType?: Maybe<SetCustomerCustomType>;\n  setLocale?: Maybe<SetCustomerLocale>;\n  setDateOfBirth?: Maybe<SetCustomerDateOfBirth>;\n  setDefaultBillingAddress?: Maybe<SetCustomerDefaultBillingAddress>;\n  setDefaultShippingAddress?: Maybe<SetCustomerDefaultShippingAddress>;\n  setFirstName?: Maybe<SetCustomerFirstName>;\n  setLastName?: Maybe<SetCustomerLastName>;\n  setMiddleName?: Maybe<SetCustomerMiddleName>;\n  setSalutation?: Maybe<SetCustomerSalutation>;\n  setTitle?: Maybe<SetCustomerTitle>;\n  setVatId?: Maybe<SetCustomerVatId>;\n};\n\nexport type MyLineItemDraft = {\n  productId?: Maybe<Scalars[\"String\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  quantity?: Maybe<Scalars[\"Long\"]>;\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  supplyChannel?: Maybe<ResourceIdentifierInput>;\n  distributionChannel?: Maybe<ResourceIdentifierInput>;\n  custom?: Maybe<CustomFieldsDraft>;\n  shippingDetails?: Maybe<ItemShippingDetailsDraft>;\n};\n\nexport type MyShoppingListDraft = {\n  name: Array<LocalizedStringItemInputType>;\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n  lineItems?: Maybe<Array<ShoppingListLineItemDraft>>;\n  textLineItems?: Maybe<Array<TextLineItemDraft>>;\n  custom?: Maybe<CustomFieldsDraft>;\n  deleteDaysAfterLastModification?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type MyShoppingListUpdateAction = {\n  addLineItem?: Maybe<AddShoppingListLineItem>;\n  addTextLineItem?: Maybe<AddShoppingListTextLineItem>;\n  changeLineItemQuantity?: Maybe<ChangeShoppingListLineItemQuantity>;\n  changeLineItemsOrder?: Maybe<ChangeShoppingListLineItemsOrder>;\n  changeName?: Maybe<ChangeShoppingListName>;\n  changeTextLineItemName?: Maybe<ChangeShoppingListTextLineItemName>;\n  changeTextLineItemQuantity?: Maybe<ChangeShoppingListTextLineItemQuantity>;\n  changeTextLineItemsOrder?: Maybe<ChangeShoppingListTextLineItemsOrder>;\n  removeLineItem?: Maybe<RemoveShoppingListLineItem>;\n  removeTextLineItem?: Maybe<RemoveShoppingListTextLineItem>;\n  setCustomField?: Maybe<SetShoppingListCustomField>;\n  setCustomType?: Maybe<SetShoppingListCustomType>;\n  setDeleteDaysAfterLastModification?: Maybe<\n    SetShoppingListDeleteDaysAfterLastModification\n  >;\n  setDescription?: Maybe<SetShoppingListDescription>;\n  setLineItemCustomField?: Maybe<SetShoppingListLineItemCustomField>;\n  setLineItemCustomType?: Maybe<SetShoppingListLineItemCustomType>;\n  setTextLineItemCustomField?: Maybe<SetShoppingListTextLineItemCustomField>;\n  setTextLineItemCustomType?: Maybe<SetShoppingListTextLineItemCustomType>;\n  setTextLineItemDescription?: Maybe<SetShoppingListTextLineItemDescription>;\n};\n\nexport type NestedAttributeDefinitionType = AttributeDefinitionType & {\n  __typename?: \"NestedAttributeDefinitionType\";\n  typeReference: Reference;\n  name: Scalars[\"String\"];\n};\n\nexport type NumberAttribute = Attribute & {\n  __typename?: \"NumberAttribute\";\n  value: Scalars[\"BigDecimal\"];\n  name: Scalars[\"String\"];\n};\n\nexport type NumberAttributeDefinitionType = AttributeDefinitionType & {\n  __typename?: \"NumberAttributeDefinitionType\";\n  name: Scalars[\"String\"];\n};\n\nexport type NumberField = CustomField & {\n  __typename?: \"NumberField\";\n  value: Scalars[\"BigDecimal\"];\n  name: Scalars[\"String\"];\n};\n\nexport type NumberType = FieldType & {\n  __typename?: \"NumberType\";\n  name: Scalars[\"String\"];\n};\n\n/** An order can be created from a cart, usually after a checkout process has been completed.\n * [documentation](https://docs.commercetools.com/http-api-projects-orders.html)\n */\nexport type Order = Versioned & {\n  __typename?: \"Order\";\n  customerId?: Maybe<Scalars[\"String\"]>;\n  customer?: Maybe<Customer>;\n  customerEmail?: Maybe<Scalars[\"String\"]>;\n  anonymousId?: Maybe<Scalars[\"String\"]>;\n  lineItems: Array<LineItem>;\n  customLineItems: Array<CustomLineItem>;\n  totalPrice: Money;\n  taxedPrice?: Maybe<TaxedPrice>;\n  shippingAddress?: Maybe<Address>;\n  billingAddress?: Maybe<Address>;\n  inventoryMode: InventoryMode;\n  taxMode: TaxMode;\n  taxRoundingMode: RoundingMode;\n  taxCalculationMode: TaxCalculationMode;\n  customerGroup?: Maybe<CustomerGroup>;\n  customerGroupRef?: Maybe<Reference>;\n  country?: Maybe<Scalars[\"Country\"]>;\n  shippingInfo?: Maybe<ShippingInfo>;\n  discountCodes: Array<DiscountCodeInfo>;\n  refusedGifts: Array<CartDiscount>;\n  refusedGiftsRefs: Array<Reference>;\n  paymentInfo?: Maybe<PaymentInfo>;\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  shippingRateInput?: Maybe<ShippingRateInput>;\n  origin: CartOrigin;\n  storeRef?: Maybe<KeyReference>;\n  store?: Maybe<Store>;\n  itemShippingAddresses: Array<Address>;\n  completedAt?: Maybe<Scalars[\"DateTime\"]>;\n  orderNumber?: Maybe<Scalars[\"String\"]>;\n  orderState: OrderState;\n  stateRef?: Maybe<Reference>;\n  state?: Maybe<State>;\n  shipmentState?: Maybe<ShipmentState>;\n  paymentState?: Maybe<PaymentState>;\n  syncInfo: Array<SyncInfo>;\n  returnInfo: Array<ReturnInfo>;\n  lastMessageSequenceNumber: Scalars[\"Long\"];\n  cartRef?: Maybe<Reference>;\n  cart?: Maybe<Cart>;\n  /** This field contains non-typed data. Consider using `customFields` as a typed alternative. */\n  customFieldsRaw?: Maybe<Array<RawCustomField>>;\n  /** This field would contain type data */\n  customFields?: Maybe<Type>;\n  custom?: Maybe<CustomFieldsType>;\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n  /** Custom fields are returned as a list instead of an object structure. */\n  customFieldList?: Maybe<Array<CustomField>>;\n};\n\n/** An order can be created from a cart, usually after a checkout process has been completed.\n * [documentation](https://docs.commercetools.com/http-api-projects-orders.html)\n */\nexport type OrderCustomFieldsRawArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** An order can be created from a cart, usually after a checkout process has been completed.\n * [documentation](https://docs.commercetools.com/http-api-projects-orders.html)\n */\nexport type OrderCustomFieldListArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type OrderCartCommand = {\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  paymentState?: Maybe<PaymentState>;\n  orderState?: Maybe<OrderState>;\n  state?: Maybe<ReferenceInput>;\n  shipmentState?: Maybe<ShipmentState>;\n  orderNumber?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type OrderMyCartCommand = {\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n};\n\n/** Fields to access orders. Includes direct access to a single order and searching for orders. */\nexport type OrderQueryInterface = {\n  order?: Maybe<Order>;\n  orders: OrderQueryResult;\n};\n\n/** Fields to access orders. Includes direct access to a single order and searching for orders. */\nexport type OrderQueryInterfaceOrderArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  orderNumber?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Fields to access orders. Includes direct access to a single order and searching for orders. */\nexport type OrderQueryInterfaceOrdersArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type OrderQueryResult = {\n  __typename?: \"OrderQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<Order>;\n};\n\nexport enum OrderState {\n  Confirmed = \"Confirmed\",\n  Cancelled = \"Cancelled\",\n  Complete = \"Complete\",\n  Open = \"Open\"\n}\n\nexport type OrderUpdateAction = {\n  addDelivery?: Maybe<AddOrderDelivery>;\n  addItemShippingAddress?: Maybe<AddOrderItemShippingAddress>;\n  addParcelToDelivery?: Maybe<AddOrderParcelToDelivery>;\n  addPayment?: Maybe<AddOrderPayment>;\n  addReturnInfo?: Maybe<AddOrderReturnInfo>;\n  changeOrderState?: Maybe<ChangeOrderState>;\n  changePaymentState?: Maybe<ChangeOrderPaymentState>;\n  changeShipmentState?: Maybe<ChangeOrderShipmentState>;\n  importCustomLineItemState?: Maybe<ImportOrderCustomLineItemState>;\n  importLineItemState?: Maybe<ImportOrderLineItemState>;\n  removeDelivery?: Maybe<RemoveOrderDelivery>;\n  removeItemShippingAddress?: Maybe<RemoveOrderItemShippingAddress>;\n  removeParcelFromDelivery?: Maybe<RemoveOrderParcelFromDelivery>;\n  removePayment?: Maybe<RemoveOrderPayment>;\n  setBillingAddress?: Maybe<SetOrderBillingAddress>;\n  setCustomField?: Maybe<SetOrderCustomField>;\n  setCustomLineItemCustomField?: Maybe<SetOrderCustomLineItemCustomField>;\n  setCustomLineItemCustomType?: Maybe<SetOrderCustomLineItemCustomType>;\n  setCustomLineItemShippingDetails?: Maybe<\n    SetOrderCustomLineItemShippingDetails\n  >;\n  setCustomType?: Maybe<SetOrderCustomType>;\n  setCustomerEmail?: Maybe<SetOrderCustomerEmail>;\n  setCustomerId?: Maybe<SetOrderCustomerId>;\n  setDeliveryAddress?: Maybe<SetOrderDeliveryAddress>;\n  setDeliveryItems?: Maybe<SetOrderDeliveryItems>;\n  setLineItemCustomField?: Maybe<SetOrderLineItemCustomField>;\n  setLineItemCustomType?: Maybe<SetOrderLineItemCustomType>;\n  setLineItemShippingDetails?: Maybe<SetOrderLineItemShippingDetails>;\n  setLocale?: Maybe<SetOrderLocale>;\n  setOrderNumber?: Maybe<SetOrderNumber>;\n  setParcelItems?: Maybe<SetOrderParcelItems>;\n  setParcelMeasurements?: Maybe<SetOrderParcelMeasurements>;\n  setParcelTrackingData?: Maybe<SetOrderParcelTrackingData>;\n  setReturnPaymentState?: Maybe<SetOrderReturnPaymentState>;\n  setReturnShipmentState?: Maybe<SetOrderReturnShipmentState>;\n  setShippingAddress?: Maybe<SetOrderShippingAddress>;\n  transitionCustomLineItemState?: Maybe<TransitionOrderCustomLineItemState>;\n  transitionLineItemState?: Maybe<TransitionOrderLineItemState>;\n  transitionState?: Maybe<TransitionOrderState>;\n  updateItemShippingAddress?: Maybe<UpdateOrderItemShippingAddress>;\n  updateSyncInfo?: Maybe<UpdateOrderSyncInfo>;\n};\n\nexport type Parcel = {\n  __typename?: \"Parcel\";\n  id: Scalars[\"String\"];\n  createdAt: Scalars[\"DateTime\"];\n  measurements?: Maybe<ParcelMeasurements>;\n  trackingData?: Maybe<TrackingData>;\n  items: Array<DeliveryItem>;\n};\n\nexport type ParcelMeasurements = {\n  __typename?: \"ParcelMeasurements\";\n  heightInMillimeter?: Maybe<Scalars[\"Int\"]>;\n  lengthInMillimeter?: Maybe<Scalars[\"Int\"]>;\n  widthInMillimeter?: Maybe<Scalars[\"Int\"]>;\n  weightInGram?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type ParcelMeasurementsDraftType = {\n  heightInMillimeter?: Maybe<Scalars[\"Int\"]>;\n  lengthInMillimeter?: Maybe<Scalars[\"Int\"]>;\n  widthInMillimeter?: Maybe<Scalars[\"Int\"]>;\n  weightInGram?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Payments hold information about the current state of receiving and/or refunding money.\n * [documentation](https://docs.commercetools.com/http-api-projects-payments)\n */\nexport type Payment = Versioned & {\n  __typename?: \"Payment\";\n  key?: Maybe<Scalars[\"String\"]>;\n  customerRef?: Maybe<Reference>;\n  customer?: Maybe<Customer>;\n  anonymousId?: Maybe<Scalars[\"String\"]>;\n  interfaceId?: Maybe<Scalars[\"String\"]>;\n  amountPlanned: Money;\n  amountAuthorized?: Maybe<Money>;\n  authorizedUntil?: Maybe<Scalars[\"DateTime\"]>;\n  amountPaid?: Maybe<Money>;\n  amountRefunded?: Maybe<Money>;\n  paymentMethodInfo: PaymentMethodInfo;\n  paymentStatus: PaymentStatus;\n  transactions: Array<Transaction>;\n  interfaceInteractionsRaw: InterfaceInteractionsRawResult;\n  /** This field contains non-typed data. Consider using `customFields` as a typed alternative. */\n  customFieldsRaw?: Maybe<Array<RawCustomField>>;\n  /** This field would contain type data */\n  customFields?: Maybe<Type>;\n  custom?: Maybe<CustomFieldsType>;\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n  /** Custom fields are returned as a list instead of an object structure. */\n  customFieldList?: Maybe<Array<CustomField>>;\n};\n\n/** Payments hold information about the current state of receiving and/or refunding money.\n * [documentation](https://docs.commercetools.com/http-api-projects-payments)\n */\nexport type PaymentInterfaceInteractionsRawArgs = {\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Payments hold information about the current state of receiving and/or refunding money.\n * [documentation](https://docs.commercetools.com/http-api-projects-payments)\n */\nexport type PaymentCustomFieldsRawArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** Payments hold information about the current state of receiving and/or refunding money.\n * [documentation](https://docs.commercetools.com/http-api-projects-payments)\n */\nexport type PaymentCustomFieldListArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type PaymentInfo = {\n  __typename?: \"PaymentInfo\";\n  payments: Array<Payment>;\n  paymentRefs: Array<Reference>;\n};\n\nexport type PaymentMethodInfo = {\n  __typename?: \"PaymentMethodInfo\";\n  paymentInterface?: Maybe<Scalars[\"String\"]>;\n  method?: Maybe<Scalars[\"String\"]>;\n  name?: Maybe<Scalars[\"String\"]>;\n  nameAllLocales?: Maybe<Array<LocalizedString>>;\n};\n\nexport type PaymentMethodInfoNameArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type PaymentQueryResult = {\n  __typename?: \"PaymentQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<Payment>;\n};\n\nexport enum PaymentState {\n  Paid = \"Paid\",\n  CreditOwed = \"CreditOwed\",\n  Pending = \"Pending\",\n  Failed = \"Failed\",\n  BalanceDue = \"BalanceDue\"\n}\n\nexport type PaymentStatus = {\n  __typename?: \"PaymentStatus\";\n  interfaceCode?: Maybe<Scalars[\"String\"]>;\n  interfaceText?: Maybe<Scalars[\"String\"]>;\n  stateRef?: Maybe<Reference>;\n  state?: Maybe<State>;\n};\n\nexport type PlainEnumValue = {\n  __typename?: \"PlainEnumValue\";\n  key: Scalars[\"String\"];\n  label: Scalars[\"String\"];\n};\n\nexport type PlainEnumValueDraft = {\n  key: Scalars[\"String\"];\n  label: Scalars[\"String\"];\n};\n\nexport type PlainEnumValueResult = {\n  __typename?: \"PlainEnumValueResult\";\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n  total: Scalars[\"Int\"];\n  results: Array<PlainEnumValue>;\n};\n\nexport type Point = Geometry & {\n  __typename?: \"Point\";\n  coordinates: Array<Scalars[\"Float\"]>;\n  type: Scalars[\"String\"];\n};\n\nexport type PriceFunction = {\n  __typename?: \"PriceFunction\";\n  function: Scalars[\"String\"];\n  currencyCode: Scalars[\"Currency\"];\n};\n\nexport type PriceFunctionDraft = {\n  function: Scalars[\"String\"];\n  currencyCode: Scalars[\"Currency\"];\n};\n\nexport type Product = Versioned & {\n  __typename?: \"Product\";\n  id: Scalars[\"String\"];\n  key?: Maybe<Scalars[\"String\"]>;\n  version: Scalars[\"Long\"];\n  productTypeRef: Reference;\n  productType?: Maybe<ProductTypeDefinition>;\n  masterData: ProductCatalogData;\n  catalogData?: Maybe<ProductCatalogData>;\n  skus: Array<Scalars[\"String\"]>;\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  stateRef?: Maybe<Reference>;\n  state?: Maybe<State>;\n  taxCategoryRef?: Maybe<Reference>;\n  taxCategory?: Maybe<TaxCategory>;\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n};\n\nexport type ProductCatalogDataArgs = {\n  id: Scalars[\"String\"];\n};\n\nexport type ProductAttributeInput = {\n  name: Scalars[\"String\"];\n  value: Scalars[\"String\"];\n};\n\nexport type ProductCatalogData = {\n  __typename?: \"ProductCatalogData\";\n  current?: Maybe<ProductData>;\n  staged?: Maybe<ProductData>;\n  published: Scalars[\"Boolean\"];\n  hasStagedChanges: Scalars[\"Boolean\"];\n};\n\nexport type ProductData = {\n  __typename?: \"ProductData\";\n  name?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  nameAllLocales: Array<LocalizedString>;\n  descriptionAllLocales?: Maybe<Array<LocalizedString>>;\n  slug?: Maybe<Scalars[\"String\"]>;\n  categoryOrderHint?: Maybe<Scalars[\"String\"]>;\n  categoryOrderHints: Array<CategoryOrderHint>;\n  categoriesRef: Array<Reference>;\n  categories: Array<Category>;\n  searchKeyword?: Maybe<Array<SearchKeyword>>;\n  searchKeywords: Array<SearchKeywords>;\n  metaTitle?: Maybe<Scalars[\"String\"]>;\n  metaKeywords?: Maybe<Scalars[\"String\"]>;\n  metaDescription?: Maybe<Scalars[\"String\"]>;\n  masterVariant: ProductVariant;\n  variants: Array<ProductVariant>;\n  allVariants: Array<ProductVariant>;\n  variant?: Maybe<ProductVariant>;\n  skus: Array<Scalars[\"String\"]>;\n};\n\nexport type ProductDataNameArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type ProductDataDescriptionArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type ProductDataSlugArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type ProductDataCategoryOrderHintArgs = {\n  categoryId: Scalars[\"String\"];\n};\n\nexport type ProductDataSearchKeywordArgs = {\n  locale: Scalars[\"Locale\"];\n};\n\nexport type ProductDataMetaTitleArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type ProductDataMetaKeywordsArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type ProductDataMetaDescriptionArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type ProductDataVariantsArgs = {\n  skus?: Maybe<Array<Scalars[\"String\"]>>;\n  isOnStock?: Maybe<Scalars[\"Boolean\"]>;\n  stockChannelIds?: Maybe<Array<Scalars[\"String\"]>>;\n  hasImages?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type ProductDataAllVariantsArgs = {\n  skus?: Maybe<Array<Scalars[\"String\"]>>;\n  isOnStock?: Maybe<Scalars[\"Boolean\"]>;\n  stockChannelIds?: Maybe<Array<Scalars[\"String\"]>>;\n  hasImages?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type ProductDataVariantArgs = {\n  sku?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\n/** A product price can be discounted in two ways:\n *\n * * with a relative or an absolute product discount, which will be automatically\n * applied to all prices in a product that match a discount predicate.\n *   A relative discount reduces the matching price by a fraction (for example 10 %\n * off). An absolute discount reduces the matching price by a fixed amount (for\n * example 10€ off). If more than one product discount matches a price, the\n * discount sort order determines which one will be applied.\n * * with an external product discount, which can then be used to explicitly set a\n * discounted value on a particular product price.\n *\n * The discounted price is stored in the discounted field of the Product Price.\n *\n * Note that when a discount is created, updated or removed it can take up to 15\n * minutes to update all the prices with the discounts.\n *\n * The maximum number of ProductDiscounts that can be active at the same time is **200**.\n */\nexport type ProductDiscount = Versioned & {\n  __typename?: \"ProductDiscount\";\n  predicate: Scalars[\"String\"];\n  validFrom?: Maybe<Scalars[\"DateTime\"]>;\n  validUntil?: Maybe<Scalars[\"DateTime\"]>;\n  isActive: Scalars[\"Boolean\"];\n  isValid: Scalars[\"Boolean\"];\n  sortOrder: Scalars[\"String\"];\n  key?: Maybe<Scalars[\"String\"]>;\n  name?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  nameAllLocales: Array<LocalizedString>;\n  descriptionAllLocales?: Maybe<Array<LocalizedString>>;\n  value: ProductDiscountValue;\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n};\n\n/** A product price can be discounted in two ways:\n *\n * * with a relative or an absolute product discount, which will be automatically\n * applied to all prices in a product that match a discount predicate.\n *   A relative discount reduces the matching price by a fraction (for example 10 %\n * off). An absolute discount reduces the matching price by a fixed amount (for\n * example 10€ off). If more than one product discount matches a price, the\n * discount sort order determines which one will be applied.\n * * with an external product discount, which can then be used to explicitly set a\n * discounted value on a particular product price.\n *\n * The discounted price is stored in the discounted field of the Product Price.\n *\n * Note that when a discount is created, updated or removed it can take up to 15\n * minutes to update all the prices with the discounts.\n *\n * The maximum number of ProductDiscounts that can be active at the same time is **200**.\n */\nexport type ProductDiscountNameArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\n/** A product price can be discounted in two ways:\n *\n * * with a relative or an absolute product discount, which will be automatically\n * applied to all prices in a product that match a discount predicate.\n *   A relative discount reduces the matching price by a fraction (for example 10 %\n * off). An absolute discount reduces the matching price by a fixed amount (for\n * example 10€ off). If more than one product discount matches a price, the\n * discount sort order determines which one will be applied.\n * * with an external product discount, which can then be used to explicitly set a\n * discounted value on a particular product price.\n *\n * The discounted price is stored in the discounted field of the Product Price.\n *\n * Note that when a discount is created, updated or removed it can take up to 15\n * minutes to update all the prices with the discounts.\n *\n * The maximum number of ProductDiscounts that can be active at the same time is **200**.\n */\nexport type ProductDiscountDescriptionArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type ProductDiscountDraft = {\n  value: ProductDiscountValueInput;\n  predicate: Scalars[\"String\"];\n  sortOrder: Scalars[\"String\"];\n  name: Array<LocalizedStringItemInputType>;\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n  validFrom?: Maybe<Scalars[\"DateTime\"]>;\n  validUntil?: Maybe<Scalars[\"DateTime\"]>;\n  isActive?: Maybe<Scalars[\"Boolean\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ProductDiscountQueryResult = {\n  __typename?: \"ProductDiscountQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<ProductDiscount>;\n};\n\nexport type ProductDiscountUpdateAction = {\n  changeIsActive?: Maybe<ChangeProductDiscountIsActive>;\n  changeName?: Maybe<ChangeProductDiscountName>;\n  changePredicate?: Maybe<ChangeProductDiscountPredicate>;\n  changeSortOrder?: Maybe<ChangeProductDiscountSortOrder>;\n  changeValue?: Maybe<ChangeProductDiscountValue>;\n  setDescription?: Maybe<SetProductDiscountDescription>;\n  setKey?: Maybe<SetProductDiscountKey>;\n  setValidFrom?: Maybe<SetProductDiscountValidFrom>;\n  setValidFromAndUntil?: Maybe<SetProductDiscountValidFromAndUntil>;\n  setValidUntil?: Maybe<SetProductDiscountValidUntil>;\n};\n\nexport type ProductDiscountValue = {\n  type: Scalars[\"String\"];\n};\n\nexport type ProductDiscountValueInput = {\n  relative?: Maybe<RelativeDiscountValueInput>;\n  absolute?: Maybe<AbsoluteDiscountValueInput>;\n  external?: Maybe<ExternalDiscountValueInput>;\n};\n\nexport type ProductDraft = {\n  name: Array<LocalizedStringItemInputType>;\n  productType: ResourceIdentifierInput;\n  slug: Array<LocalizedStringItemInputType>;\n  key?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n  categories?: Maybe<Array<ResourceIdentifierInput>>;\n  categoryOrderHints?: Maybe<Array<CategoryOrderHintInput>>;\n  metaTitle?: Maybe<Array<LocalizedStringItemInputType>>;\n  metaDescription?: Maybe<Array<LocalizedStringItemInputType>>;\n  metaKeywords?: Maybe<Array<LocalizedStringItemInputType>>;\n  masterVariant?: Maybe<ProductVariantInput>;\n  variants?: Maybe<Array<ProductVariantInput>>;\n  taxCategory?: Maybe<ResourceIdentifierInput>;\n  state?: Maybe<ResourceIdentifierInput>;\n  searchKeywords?: Maybe<Array<SearchKeywordInput>>;\n  publish?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type ProductPrice = {\n  __typename?: \"ProductPrice\";\n  id?: Maybe<Scalars[\"String\"]>;\n  value: BaseMoney;\n  country?: Maybe<Scalars[\"Country\"]>;\n  customerGroup?: Maybe<Reference>;\n  channel?: Maybe<Reference>;\n  validFrom?: Maybe<Scalars[\"DateTime\"]>;\n  validUntil?: Maybe<Scalars[\"DateTime\"]>;\n  discounted?: Maybe<DiscountedProductPriceValue>;\n  tiers?: Maybe<Array<ProductPriceTier>>;\n  /** This field contains non-typed data. Consider using `customFields` as a typed alternative. */\n  customFieldsRaw?: Maybe<Array<RawCustomField>>;\n  /** This field would contain type data */\n  customFields?: Maybe<Type>;\n  custom?: Maybe<CustomFieldsType>;\n  /** Custom fields are returned as a list instead of an object structure. */\n  customFieldList?: Maybe<Array<CustomField>>;\n};\n\nexport type ProductPriceCustomFieldsRawArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type ProductPriceCustomFieldListArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type ProductPriceDataInput = {\n  value: BaseMoneyInput;\n  country?: Maybe<Scalars[\"Country\"]>;\n  customerGroup?: Maybe<ReferenceInput>;\n  channel?: Maybe<ResourceIdentifierInput>;\n  validFrom?: Maybe<Scalars[\"DateTime\"]>;\n  validUntil?: Maybe<Scalars[\"DateTime\"]>;\n  tiers?: Maybe<Array<ProductPriceTierInput>>;\n  custom?: Maybe<CustomFieldsDraft>;\n};\n\nexport type ProductPriceTier = {\n  __typename?: \"ProductPriceTier\";\n  minimumQuantity: Scalars[\"Int\"];\n  value: BaseMoney;\n};\n\nexport type ProductPriceTierInput = {\n  minimumQuantity: Scalars[\"Int\"];\n  value: BaseMoneyInput;\n};\n\nexport type ProductQueryResult = {\n  __typename?: \"ProductQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<Product>;\n};\n\nexport type ProductReferenceIdentifier = {\n  __typename?: \"ProductReferenceIdentifier\";\n  typeId: Scalars[\"String\"];\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ProductType = {\n  productTypeId: Scalars[\"String\"];\n};\n\nexport type ProductTypeDefinition = Versioned & {\n  __typename?: \"ProductTypeDefinition\";\n  key?: Maybe<Scalars[\"String\"]>;\n  name: Scalars[\"String\"];\n  description: Scalars[\"String\"];\n  attributeDefinitions: AttributeDefinitionResult;\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n};\n\nexport type ProductTypeDefinitionAttributeDefinitionsArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type ProductTypeDefinitionQueryResult = {\n  __typename?: \"ProductTypeDefinitionQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<ProductTypeDefinition>;\n};\n\nexport type ProductTypeDraft = {\n  name: Scalars[\"String\"];\n  description: Scalars[\"String\"];\n  key?: Maybe<Scalars[\"String\"]>;\n  attributeDefinitions?: Maybe<Array<AttributeDefinitionDraft>>;\n};\n\nexport type ProductTypeUpdateAction = {\n  setKey?: Maybe<SetKey>;\n  changeName?: Maybe<ChangeName>;\n  changeDescription?: Maybe<ChangeDescription>;\n  removeAttributeDefinition?: Maybe<RemoveAttributeDefinition>;\n  changeLabel?: Maybe<ChangeLabel>;\n  setInputTip?: Maybe<SetInputTip>;\n  changeIsSearchable?: Maybe<ChangeIsSearchable>;\n  changeInputHint?: Maybe<ChangeInputHint>;\n  addAttributeDefinition?: Maybe<AddAttributeDefinition>;\n  changeAttributeOrder?: Maybe<ChangeAttributeOrder>;\n  changeAttributeOrderByName?: Maybe<ChangeAttributeOrderByName>;\n  removeEnumValues?: Maybe<RemoveEnumValues>;\n  addPlainEnumValue?: Maybe<AddPlainEnumValue>;\n  changePlainEnumValueLabel?: Maybe<ChangePlainEnumValueLabel>;\n  changePlainEnumValueOrder?: Maybe<ChangePlainEnumValueOrder>;\n  addLocalizedEnumValue?: Maybe<AddLocalizedEnumValue>;\n  changeLocalizedEnumValueLabel?: Maybe<ChangeLocalizedEnumValueLabel>;\n  changeLocalizedEnumValueOrder?: Maybe<ChangeLocalizedEnumValueOrder>;\n  changeAttributeName?: Maybe<ChangeAttributeName>;\n  changeEnumKey?: Maybe<ChangeEnumKey>;\n};\n\nexport type ProductUpdateAction = {\n  moveImageToPosition?: Maybe<MoveProductImageToPosition>;\n  setSearchKeywords?: Maybe<SetSearchKeywords>;\n  revertStagedChanges?: Maybe<RevertStagedChanges>;\n  revertStagedVariantChanges?: Maybe<RevertStagedVariantChanges>;\n  publish?: Maybe<PublishProduct>;\n  unpublish?: Maybe<UnpublishProduct>;\n  transitionState?: Maybe<TransitionProductState>;\n  addAsset?: Maybe<AddProductAsset>;\n  addExternalImage?: Maybe<AddProductExternalImage>;\n  addPrice?: Maybe<AddProductPrice>;\n  addToCategory?: Maybe<AddProductToCategory>;\n  addVariant?: Maybe<AddProductVariant>;\n  changeAssetName?: Maybe<ChangeProductAssetName>;\n  changeAssetOrder?: Maybe<ChangeProductAssetOrder>;\n  changeMasterVariant?: Maybe<ChangeProductMasterVariant>;\n  changeImageLabel?: Maybe<ChangeProductImageLabel>;\n  changeName?: Maybe<ChangeProductName>;\n  changePrice?: Maybe<ChangeProductPrice>;\n  changeSlug?: Maybe<ChangeProductSlug>;\n  removeAsset?: Maybe<RemoveProductAsset>;\n  removeFromCategory?: Maybe<RemoveProductFromCategory>;\n  removeImage?: Maybe<RemoveProductImage>;\n  removePrice?: Maybe<RemoveProductPrice>;\n  removeVariant?: Maybe<RemoveProductVariant>;\n  setAssetCustomField?: Maybe<SetProductAssetCustomField>;\n  setAssetCustomType?: Maybe<SetProductAssetCustomType>;\n  setAssetDescription?: Maybe<SetProductAssetDescription>;\n  setAssetKey?: Maybe<SetProductAssetKey>;\n  setAssetSources?: Maybe<SetProductAssetSources>;\n  setAssetTags?: Maybe<SetProductAssetTags>;\n  setCategoryOrderHint?: Maybe<SetProductCategoryOrderHint>;\n  setDiscountedPrice?: Maybe<SetProductDiscountedPrice>;\n  setAttribute?: Maybe<SetProductAttribute>;\n  setAttributeInAllVariants?: Maybe<SetProductAttributeInAllVariants>;\n  setDescription?: Maybe<SetProductDescription>;\n  setImageLabel?: Maybe<SetProductImageLabel>;\n  setKey?: Maybe<SetProductKey>;\n  setMetaAttributes?: Maybe<SetProductMetaAttributes>;\n  setMetaDescription?: Maybe<SetProductMetaDescription>;\n  setMetaKeywords?: Maybe<SetProductMetaKeywords>;\n  setMetaTitle?: Maybe<SetProductMetaTitle>;\n  setProductPriceCustomField?: Maybe<SetProductPriceCustomField>;\n  setProductPriceCustomType?: Maybe<SetProductPriceCustomType>;\n  setPrices?: Maybe<SetProductPrices>;\n  setSku?: Maybe<SetProductSku>;\n  setTaxCategory?: Maybe<SetProductTaxCategory>;\n  setProductVariantKey?: Maybe<SetProductVariantKey>;\n};\n\nexport type ProductVariant = {\n  __typename?: \"ProductVariant\";\n  id: Scalars[\"Int\"];\n  key?: Maybe<Scalars[\"String\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  prices?: Maybe<Array<ProductPrice>>;\n  /** Returns a single price based on the price selection rules. */\n  price?: Maybe<ProductPrice>;\n  images: Array<Image>;\n  assets: Array<Asset>;\n  availability?: Maybe<ProductVariantAvailabilityWithChannels>;\n  /** This field contains non-typed data. Consider using `attributes` as a typed alternative. */\n  attributesRaw: Array<RawProductAttribute>;\n  /** Product attributes */\n  attributes: ProductType;\n  /** Product attributes are returned as a list instead of an object structure. */\n  attributeList: Array<Attribute>;\n};\n\nexport type ProductVariantPriceArgs = {\n  currency: Scalars[\"Currency\"];\n  country?: Maybe<Scalars[\"Country\"]>;\n  customerGroupId?: Maybe<Scalars[\"String\"]>;\n  channelId?: Maybe<Scalars[\"String\"]>;\n  date?: Maybe<Scalars[\"DateTime\"]>;\n};\n\nexport type ProductVariantAttributesRawArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type ProductVariantAttributeListArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** Product variant availabilities */\nexport type ProductVariantAvailabilitiesResult = {\n  __typename?: \"ProductVariantAvailabilitiesResult\";\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n  total: Scalars[\"Int\"];\n  results: Array<ProductVariantAvailabilityWithChannel>;\n};\n\n/** Product variant availability */\nexport type ProductVariantAvailability = {\n  __typename?: \"ProductVariantAvailability\";\n  isOnStock: Scalars[\"Boolean\"];\n  restockableInDays?: Maybe<Scalars[\"Int\"]>;\n  availableQuantity?: Maybe<Scalars[\"Long\"]>;\n};\n\nexport type ProductVariantAvailabilityWithChannel = {\n  __typename?: \"ProductVariantAvailabilityWithChannel\";\n  channelRef: Reference;\n  channel?: Maybe<Channel>;\n  availability: ProductVariantAvailability;\n};\n\nexport type ProductVariantAvailabilityWithChannels = {\n  __typename?: \"ProductVariantAvailabilityWithChannels\";\n  noChannel?: Maybe<ProductVariantAvailability>;\n  channels: ProductVariantAvailabilitiesResult;\n};\n\nexport type ProductVariantAvailabilityWithChannelsChannelsArgs = {\n  includeChannelIds?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeChannelIds?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type ProductVariantInput = {\n  sku?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n  prices?: Maybe<Array<ProductPriceDataInput>>;\n  images?: Maybe<Array<ImageInput>>;\n  attributes?: Maybe<Array<ProductAttributeInput>>;\n  assets?: Maybe<Array<AssetDraftInput>>;\n};\n\n/** Project contains information about project. */\nexport type ProjectProjection = {\n  __typename?: \"ProjectProjection\";\n  key: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  languages: Array<Scalars[\"Locale\"]>;\n  createdAt: Scalars[\"DateTime\"];\n  trialUntil?: Maybe<Scalars[\"YearMonth\"]>;\n  version: Scalars[\"Long\"];\n  externalOAuth?: Maybe<ExternalOAuth>;\n  messages: MessagesConfiguration;\n  countries: Array<Scalars[\"Country\"]>;\n  currencies: Array<Scalars[\"Currency\"]>;\n  shippingRateInputType?: Maybe<ShippingRateInputType>;\n};\n\nexport type ProjectSettingsUpdateAction = {\n  changeCountries?: Maybe<ChangeProjectSettingsCountries>;\n  changeCurrencies?: Maybe<ChangeProjectSettingsCurrencies>;\n  changeLanguages?: Maybe<ChangeProjectSettingsLanguages>;\n  changeMessagesConfiguration?: Maybe<\n    ChangeProjectSettingsMessagesConfiguration\n  >;\n  changeMessagesEnabled?: Maybe<ChangeProjectSettingsMessagesEnabled>;\n  changeName?: Maybe<ChangeProjectSettingsName>;\n  setExternalOAuth?: Maybe<SetProjectSettingsExternalOAuth>;\n  setShippingRateInputType?: Maybe<SetProjectSettingsShippingRateInputType>;\n};\n\nexport type PublishProduct = {\n  scope?: Maybe<PublishScope>;\n};\n\nexport enum PublishScope {\n  /** Publishes the complete staged projection */\n  All = \"All\",\n  /** Publishes only prices on the staged projection */\n  Prices = \"Prices\"\n}\n\nexport type Query = CartQueryInterface &\n  CustomerActiveCartInterface &\n  OrderQueryInterface &\n  CustomerQueryInterface &\n  ShoppingListQueryInterface &\n  ShippingMethodsByCartInterface &\n  MeFieldInterface & {\n    __typename?: \"Query\";\n    /** This field can only be used with an access token created with the password flow or with an anonymous session.\n     *\n     * It gives access to the data that is specific to the customer or the anonymous session linked to the access token.\n     */\n    me: Me;\n    /** This field gives access to the resources (such as carts) that are inside the given store. */\n    inStore: InStore;\n    /** This field gives access to the resources (such as carts) that are inside one of the given stores. */\n    inStores: InStore;\n    customerGroup?: Maybe<CustomerGroup>;\n    customerGroups: CustomerGroupQueryResult;\n    category?: Maybe<Category>;\n    categories: CategoryQueryResult;\n    /** Autocomplete the categories based on category fields like name, description, etc. */\n    categoryAutocomplete: CategorySearchResult;\n    /** Search the categories using full-text search, filtering and sorting */\n    categorySearch: CategorySearchResult;\n    channel?: Maybe<Channel>;\n    channels: ChannelQueryResult;\n    productType?: Maybe<ProductTypeDefinition>;\n    productTypes: ProductTypeDefinitionQueryResult;\n    typeDefinition?: Maybe<TypeDefinition>;\n    typeDefinitions: TypeDefinitionQueryResult;\n    shippingMethod?: Maybe<ShippingMethod>;\n    shippingMethods: ShippingMethodQueryResult;\n    shippingMethodsByCart: Array<ShippingMethod>;\n    shippingMethodsByLocation: Array<ShippingMethod>;\n    zone?: Maybe<Zone>;\n    zones: ZoneQueryResult;\n    taxCategory?: Maybe<TaxCategory>;\n    taxCategories: TaxCategoryQueryResult;\n    discountCode?: Maybe<DiscountCode>;\n    discountCodes: DiscountCodeQueryResult;\n    cartDiscount?: Maybe<CartDiscount>;\n    cartDiscounts: CartDiscountQueryResult;\n    productDiscount?: Maybe<ProductDiscount>;\n    productDiscounts: ProductDiscountQueryResult;\n    product?: Maybe<Product>;\n    products: ProductQueryResult;\n    state?: Maybe<State>;\n    states: StateQueryResult;\n    customer?: Maybe<Customer>;\n    customers: CustomerQueryResult;\n    inventoryEntry?: Maybe<InventoryEntry>;\n    inventoryEntries: InventoryEntryQueryResult;\n    cart?: Maybe<Cart>;\n    carts: CartQueryResult;\n    customerActiveCart?: Maybe<Cart>;\n    order?: Maybe<Order>;\n    orders: OrderQueryResult;\n    shoppingList?: Maybe<ShoppingList>;\n    shoppingLists: ShoppingListQueryResult;\n    payment?: Maybe<Payment>;\n    payments: PaymentQueryResult;\n    project: ProjectProjection;\n    store?: Maybe<Store>;\n    stores: StoreQueryResult;\n    apiClient?: Maybe<ApiClientWithoutSecret>;\n    apiClients: ApiClientWithoutSecretQueryResult;\n  };\n\nexport type QueryInStoreArgs = {\n  key: Scalars[\"KeyReferenceInput\"];\n};\n\nexport type QueryInStoresArgs = {\n  keys: Array<Scalars[\"KeyReferenceInput\"]>;\n};\n\nexport type QueryCustomerGroupArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryCustomerGroupsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryCategoryArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryCategoriesArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryCategoryAutocompleteArgs = {\n  locale: Scalars[\"Locale\"];\n  text: Scalars[\"String\"];\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n  filters?: Maybe<Array<Scalars[\"SearchFilter\"]>>;\n  experimental?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type QueryCategorySearchArgs = {\n  fulltext?: Maybe<LocalizedText>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n  queryFilters?: Maybe<Array<Scalars[\"SearchFilter\"]>>;\n  filters?: Maybe<Array<Scalars[\"SearchFilter\"]>>;\n  sorts?: Maybe<Array<Scalars[\"SearchSort\"]>>;\n  experimental?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type QueryChannelArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryChannelsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryProductTypeArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryProductTypesArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryTypeDefinitionArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryTypeDefinitionsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryShippingMethodArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryShippingMethodsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryShippingMethodsByCartArgs = {\n  id: Scalars[\"String\"];\n};\n\nexport type QueryShippingMethodsByLocationArgs = {\n  country: Scalars[\"Country\"];\n  state?: Maybe<Scalars[\"String\"]>;\n  currency?: Maybe<Scalars[\"Currency\"]>;\n};\n\nexport type QueryZoneArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryZonesArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryTaxCategoryArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryTaxCategoriesArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryDiscountCodeArgs = {\n  id: Scalars[\"String\"];\n};\n\nexport type QueryDiscountCodesArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryCartDiscountArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryCartDiscountsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryProductDiscountArgs = {\n  id: Scalars[\"String\"];\n};\n\nexport type QueryProductDiscountsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryProductArgs = {\n  sku?: Maybe<Scalars[\"String\"]>;\n  variantKey?: Maybe<Scalars[\"String\"]>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryProductsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n  skus?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type QueryStateArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryStatesArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryCustomerArgs = {\n  emailToken?: Maybe<Scalars[\"String\"]>;\n  passwordToken?: Maybe<Scalars[\"String\"]>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryCustomersArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryInventoryEntryArgs = {\n  id: Scalars[\"String\"];\n};\n\nexport type QueryInventoryEntriesArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryCartArgs = {\n  id: Scalars[\"String\"];\n};\n\nexport type QueryCartsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryCustomerActiveCartArgs = {\n  customerId: Scalars[\"String\"];\n};\n\nexport type QueryOrderArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  orderNumber?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryOrdersArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryShoppingListArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryShoppingListsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryPaymentArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryPaymentsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryStoreArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type QueryStoresArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type QueryApiClientArgs = {\n  id: Scalars[\"String\"];\n};\n\nexport type QueryApiClientsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type RawCustomField = {\n  __typename?: \"RawCustomField\";\n  name: Scalars[\"String\"];\n  value: Scalars[\"Json\"];\n};\n\nexport type RawProductAttribute = {\n  __typename?: \"RawProductAttribute\";\n  name: Scalars[\"String\"];\n  value: Scalars[\"Json\"];\n  attributeDefinition?: Maybe<AttributeDefinition>;\n};\n\nexport type RecalculateCart = {\n  updateProductData?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type Reference = {\n  __typename?: \"Reference\";\n  typeId: Scalars[\"String\"];\n  id: Scalars[\"String\"];\n};\n\nexport type ReferenceAttribute = Attribute & {\n  __typename?: \"ReferenceAttribute\";\n  typeId: Scalars[\"String\"];\n  id: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n};\n\nexport type ReferenceAttributeDefinitionType = AttributeDefinitionType & {\n  __typename?: \"ReferenceAttributeDefinitionType\";\n  referenceTypeId: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n};\n\nexport type ReferenceField = CustomField & {\n  __typename?: \"ReferenceField\";\n  typeId: Scalars[\"String\"];\n  id: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n};\n\nexport type ReferenceInput = {\n  typeId: Scalars[\"String\"];\n  id: Scalars[\"String\"];\n};\n\nexport type ReferenceType = FieldType & {\n  __typename?: \"ReferenceType\";\n  referenceTypeId: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n};\n\nexport type ReferenceTypeDefinitionDraft = {\n  referenceTypeId: Scalars[\"String\"];\n};\n\nexport type RelativeDiscountValue = CartDiscountValue &\n  ProductDiscountValue & {\n    __typename?: \"RelativeDiscountValue\";\n    permyriad: Scalars[\"Int\"];\n    type: Scalars[\"String\"];\n  };\n\nexport type RelativeDiscountValueInput = {\n  permyriad: Scalars[\"Int\"];\n};\n\nexport type RemoveAttributeDefinition = {\n  name: Scalars[\"String\"];\n};\n\nexport type RemoveCartCustomLineItem = {\n  customLineItemId: Scalars[\"String\"];\n};\n\nexport type RemoveCartDiscountCode = {\n  discountCode: ReferenceInput;\n};\n\nexport type RemoveCartItemShippingAddress = {\n  addressKey: Scalars[\"String\"];\n};\n\nexport type RemoveCartLineItem = {\n  lineItemId: Scalars[\"String\"];\n  quantity?: Maybe<Scalars[\"Long\"]>;\n  externalPrice?: Maybe<BaseMoneyInput>;\n  externalTotalPrice?: Maybe<ExternalLineItemTotalPriceDraft>;\n  shippingDetailsToRemove?: Maybe<ItemShippingDetailsDraft>;\n};\n\nexport type RemoveCartPayment = {\n  payment: ResourceIdentifierInput;\n};\n\nexport type RemoveCategoryAsset = {\n  assetKey?: Maybe<Scalars[\"String\"]>;\n  assetId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type RemoveCustomerAddress = {\n  addressId: Scalars[\"String\"];\n};\n\nexport type RemoveCustomerBillingAddressId = {\n  addressId: Scalars[\"String\"];\n};\n\nexport type RemoveCustomerShippingAddressId = {\n  addressId: Scalars[\"String\"];\n};\n\nexport type RemoveCustomerStore = {\n  store: ResourceIdentifierInput;\n};\n\nexport type RemoveEnumValues = {\n  attributeName: Scalars[\"String\"];\n  keys: Array<Scalars[\"String\"]>;\n};\n\nexport type RemoveInventoryEntryQuantity = {\n  quantity: Scalars[\"Long\"];\n};\n\nexport type RemoveOrderDelivery = {\n  deliveryId: Scalars[\"String\"];\n};\n\nexport type RemoveOrderItemShippingAddress = {\n  addressKey: Scalars[\"String\"];\n};\n\nexport type RemoveOrderParcelFromDelivery = {\n  parcelId: Scalars[\"String\"];\n};\n\nexport type RemoveOrderPayment = {\n  payment: ResourceIdentifierInput;\n};\n\nexport type RemoveProductAsset = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  catalog?: Maybe<ReferenceInput>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n  assetKey?: Maybe<Scalars[\"String\"]>;\n  assetId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type RemoveProductFromCategory = {\n  category: ResourceIdentifierInput;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type RemoveProductImage = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  imageUrl: Scalars[\"String\"];\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type RemoveProductPrice = {\n  priceId?: Maybe<Scalars[\"String\"]>;\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  price?: Maybe<ProductPriceDataInput>;\n  catalog?: Maybe<ReferenceInput>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type RemoveProductVariant = {\n  id?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type RemoveShippingMethodShippingRate = {\n  zone: ResourceIdentifierInput;\n  shippingRate: ShippingRateDraft;\n};\n\nexport type RemoveShippingMethodZone = {\n  zone: ResourceIdentifierInput;\n};\n\nexport type RemoveShoppingListLineItem = {\n  lineItemId: Scalars[\"String\"];\n  quantity?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type RemoveShoppingListTextLineItem = {\n  textLineItemId: Scalars[\"String\"];\n  quantity?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type RemoveZoneLocation = {\n  location: ZoneLocation;\n};\n\nexport type ReservationOrderType = Type & {\n  __typename?: \"reservationOrderType\";\n  typeRef: Reference;\n  type: TypeDefinition;\n  isReservation?: Maybe<BooleanField>;\n};\n\nexport type ResourceIdentifierInput = {\n  typeId?: Maybe<Scalars[\"String\"]>;\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Stores information about returns connected to this order. */\nexport type ReturnInfo = {\n  __typename?: \"ReturnInfo\";\n  items: Array<ReturnItem>;\n  returnTrackingId?: Maybe<Scalars[\"String\"]>;\n  returnDate?: Maybe<Scalars[\"DateTime\"]>;\n};\n\nexport type ReturnItem = {\n  type: Scalars[\"String\"];\n  id: Scalars[\"String\"];\n  quantity: Scalars[\"Long\"];\n  comment?: Maybe<Scalars[\"String\"]>;\n  shipmentState: ReturnShipmentState;\n  paymentState: ReturnPaymentState;\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdAt: Scalars[\"DateTime\"];\n};\n\nexport type ReturnItemDraftType = {\n  quantity: Scalars[\"Long\"];\n  lineItemId?: Maybe<Scalars[\"String\"]>;\n  customLineItemId?: Maybe<Scalars[\"String\"]>;\n  comment?: Maybe<Scalars[\"String\"]>;\n  shipmentState: ReturnShipmentState;\n};\n\nexport enum ReturnPaymentState {\n  NotRefunded = \"NotRefunded\",\n  Refunded = \"Refunded\",\n  Initial = \"Initial\",\n  NonRefundable = \"NonRefundable\"\n}\n\nexport enum ReturnShipmentState {\n  Unusable = \"Unusable\",\n  BackInStock = \"BackInStock\",\n  Returned = \"Returned\",\n  Advised = \"Advised\"\n}\n\nexport type RevertStagedChanges = {\n  dummy?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type RevertStagedVariantChanges = {\n  variantId: Scalars[\"Int\"];\n};\n\nexport enum RoundingMode {\n  /** [Round half down](https://en.wikipedia.org/wiki/Rounding#Round_half_down).\n   * Rounding mode used by, e.g., [Avalara Sales TaxII](https://help.avalara.com/kb/001/How_does_Rounding_with_SalesTaxII_work%3F)\n   */\n  HalfDown = \"HalfDown\",\n  /** [Round half up](https://en.wikipedia.org/wiki/Rounding#Round_half_up) */\n  HalfUp = \"HalfUp\",\n  /** [Round half to even](https://en.wikipedia.org/wiki/Rounding#Round_half_to_even).\n   * Default rounding mode as used in IEEE 754 computing functions and operators.\n   */\n  HalfEven = \"HalfEven\"\n}\n\nexport type ScoreShippingRateInput = ShippingRateInput & {\n  __typename?: \"ScoreShippingRateInput\";\n  score: Scalars[\"Int\"];\n  type: Scalars[\"String\"];\n};\n\nexport type ScoreShippingRateInputDraft = {\n  score: Scalars[\"Int\"];\n};\n\nexport type SearchKeyword = {\n  __typename?: \"SearchKeyword\";\n  text: Scalars[\"String\"];\n};\n\nexport type SearchKeywordInput = {\n  locale: Scalars[\"Locale\"];\n  keywords: Array<CustomSuggestTokenizerInput>;\n};\n\nexport type SearchKeywords = {\n  __typename?: \"SearchKeywords\";\n  locale: Scalars[\"Locale\"];\n  searchKeywords: Array<SearchKeyword>;\n};\n\n/** In order to decide which of the matching items will actually be discounted */\nexport enum SelectionMode {\n  MostExpensive = \"MostExpensive\",\n  Cheapest = \"Cheapest\"\n}\n\nexport type SetAttributeDefinitionType = AttributeDefinitionType & {\n  __typename?: \"SetAttributeDefinitionType\";\n  elementType: AttributeDefinitionType;\n  name: Scalars[\"String\"];\n};\n\nexport type SetCartAnonymousId = {\n  anonymousId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCartBillingAddress = {\n  address?: Maybe<AddressInput>;\n};\n\nexport type SetCartCountry = {\n  country?: Maybe<Scalars[\"Country\"]>;\n};\n\nexport type SetCartCustomerEmail = {\n  email?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCartCustomerGroup = {\n  customerGroup?: Maybe<ResourceIdentifierInput>;\n};\n\nexport type SetCartCustomerId = {\n  customerId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCartCustomField = {\n  name: Scalars[\"String\"];\n  value?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCartCustomLineItemCustomField = {\n  customLineItemId: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  value?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCartCustomLineItemCustomType = {\n  customLineItemId: Scalars[\"String\"];\n  fields?: Maybe<Array<CustomFieldInput>>;\n  type?: Maybe<ResourceIdentifierInput>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  typeId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCartCustomLineItemShippingDetails = {\n  customLineItemId: Scalars[\"String\"];\n  shippingDetails?: Maybe<ItemShippingDetailsDraft>;\n};\n\nexport type SetCartCustomLineItemTaxAmount = {\n  customLineItemId: Scalars[\"String\"];\n  externalTaxAmount?: Maybe<ExternalTaxAmountDraft>;\n};\n\nexport type SetCartCustomLineItemTaxRate = {\n  customLineItemId: Scalars[\"String\"];\n  externalTaxRate?: Maybe<ExternalTaxRateDraft>;\n};\n\nexport type SetCartCustomShippingMethod = {\n  shippingMethodName: Scalars[\"String\"];\n  shippingRate: ShippingRateDraft;\n  taxCategory?: Maybe<ResourceIdentifierInput>;\n  externalTaxRate?: Maybe<ExternalTaxRateDraft>;\n};\n\nexport type SetCartCustomType = {\n  fields?: Maybe<Array<CustomFieldInput>>;\n  type?: Maybe<ResourceIdentifierInput>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  typeId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCartDeleteDaysAfterLastModification = {\n  deleteDaysAfterLastModification?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type SetCartDiscountCustomField = {\n  name: Scalars[\"String\"];\n  value?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCartDiscountCustomType = {\n  fields?: Maybe<Array<CustomFieldInput>>;\n  type?: Maybe<ResourceIdentifierInput>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  typeId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCartDiscountDescription = {\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n};\n\nexport type SetCartDiscountKey = {\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCartDiscountValidFrom = {\n  validFrom?: Maybe<Scalars[\"DateTime\"]>;\n};\n\nexport type SetCartDiscountValidFromAndUntil = {\n  validFrom?: Maybe<Scalars[\"DateTime\"]>;\n  validUntil?: Maybe<Scalars[\"DateTime\"]>;\n};\n\nexport type SetCartDiscountValidUntil = {\n  validUntil?: Maybe<Scalars[\"DateTime\"]>;\n};\n\nexport type SetCartLineItemCustomField = {\n  lineItemId: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  value?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCartLineItemCustomType = {\n  lineItemId: Scalars[\"String\"];\n  fields?: Maybe<Array<CustomFieldInput>>;\n  type?: Maybe<ResourceIdentifierInput>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  typeId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCartLineItemPrice = {\n  lineItemId: Scalars[\"String\"];\n  externalPrice?: Maybe<BaseMoneyInput>;\n};\n\nexport type SetCartLineItemShippingDetails = {\n  lineItemId: Scalars[\"String\"];\n  shippingDetails?: Maybe<ItemShippingDetailsDraft>;\n};\n\nexport type SetCartLineItemTaxAmount = {\n  lineItemId: Scalars[\"String\"];\n  externalTaxAmount?: Maybe<ExternalTaxAmountDraft>;\n};\n\nexport type SetCartLineItemTaxRate = {\n  lineItemId: Scalars[\"String\"];\n  externalTaxRate?: Maybe<ExternalTaxRateDraft>;\n};\n\nexport type SetCartLineItemTotalPrice = {\n  lineItemId: Scalars[\"String\"];\n  externalTotalPrice?: Maybe<ExternalLineItemTotalPriceDraft>;\n};\n\nexport type SetCartLocale = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n};\n\nexport type SetCartShippingAddress = {\n  address?: Maybe<AddressInput>;\n};\n\nexport type SetCartShippingMethod = {\n  shippingMethod?: Maybe<ResourceIdentifierInput>;\n  externalTaxRate?: Maybe<ExternalTaxRateDraft>;\n};\n\nexport type SetCartShippingMethodTaxAmount = {\n  externalTaxAmount?: Maybe<ExternalTaxAmountDraft>;\n};\n\nexport type SetCartShippingMethodTaxRate = {\n  externalTaxRate?: Maybe<ExternalTaxRateDraft>;\n};\n\nexport type SetCartShippingRateInput = {\n  shippingRateInput?: Maybe<ShippingRateInputDraft>;\n};\n\nexport type SetCartTotalTax = {\n  externalTotalGross?: Maybe<MoneyInput>;\n  externalTaxPortions?: Maybe<Array<TaxPortionDraft>>;\n};\n\nexport type SetCategoryAssetCustomField = {\n  value?: Maybe<Scalars[\"String\"]>;\n  name: Scalars[\"String\"];\n  assetKey?: Maybe<Scalars[\"String\"]>;\n  assetId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCategoryAssetCustomType = {\n  typeId?: Maybe<Scalars[\"String\"]>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  type?: Maybe<ResourceIdentifierInput>;\n  fields?: Maybe<Array<CustomFieldInput>>;\n  assetKey?: Maybe<Scalars[\"String\"]>;\n  assetId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCategoryAssetDescription = {\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n  assetKey?: Maybe<Scalars[\"String\"]>;\n  assetId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCategoryAssetKey = {\n  assetKey?: Maybe<Scalars[\"String\"]>;\n  assetId: Scalars[\"String\"];\n};\n\nexport type SetCategoryAssetSources = {\n  sources?: Maybe<Array<AssetSourceInput>>;\n  assetKey?: Maybe<Scalars[\"String\"]>;\n  assetId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCategoryAssetTags = {\n  tags?: Maybe<Array<Scalars[\"String\"]>>;\n  assetKey?: Maybe<Scalars[\"String\"]>;\n  assetId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCategoryCustomField = {\n  name: Scalars[\"String\"];\n  value?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCategoryCustomType = {\n  fields?: Maybe<Array<CustomFieldInput>>;\n  type?: Maybe<ResourceIdentifierInput>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  typeId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCategoryDescription = {\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n};\n\nexport type SetCategoryExternalId = {\n  externalId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCategoryKey = {\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCategoryMetaDescription = {\n  metaDescription?: Maybe<Array<LocalizedStringItemInputType>>;\n};\n\nexport type SetCategoryMetaKeywords = {\n  metaKeywords?: Maybe<Array<LocalizedStringItemInputType>>;\n};\n\nexport type SetCategoryMetaTitle = {\n  metaTitle?: Maybe<Array<LocalizedStringItemInputType>>;\n};\n\nexport type SetCustomerCompanyName = {\n  companyName?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCustomerCustomField = {\n  name: Scalars[\"String\"];\n  value?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCustomerCustomType = {\n  fields?: Maybe<Array<CustomFieldInput>>;\n  type?: Maybe<ResourceIdentifierInput>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  typeId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCustomerDateOfBirth = {\n  dateOfBirth?: Maybe<Scalars[\"Date\"]>;\n};\n\nexport type SetCustomerDefaultBillingAddress = {\n  addressId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCustomerDefaultShippingAddress = {\n  addressId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCustomerExternalId = {\n  externalId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCustomerFirstName = {\n  firstName?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCustomerGroup = {\n  customerGroup?: Maybe<ResourceIdentifierInput>;\n};\n\nexport type SetCustomerGroupCustomField = {\n  name: Scalars[\"String\"];\n  value?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCustomerGroupCustomType = {\n  typeId?: Maybe<Scalars[\"String\"]>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  type?: Maybe<ResourceIdentifierInput>;\n  fields?: Maybe<Array<CustomFieldInput>>;\n};\n\nexport type SetCustomerGroupKey = {\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCustomerKey = {\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCustomerLastName = {\n  lastName?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCustomerLocale = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n};\n\nexport type SetCustomerMiddleName = {\n  middleName?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCustomerNumber = {\n  customerNumber?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCustomerSalutation = {\n  salutation?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCustomerStores = {\n  stores: Array<ResourceIdentifierInput>;\n};\n\nexport type SetCustomerTitle = {\n  title?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetCustomerVatId = {\n  vatId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetDiscountCodeCartPredicate = {\n  cartPredicate?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetDiscountCodeCustomField = {\n  name: Scalars[\"String\"];\n  value?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetDiscountCodeCustomType = {\n  fields?: Maybe<Array<CustomFieldInput>>;\n  type?: Maybe<ResourceIdentifierInput>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  typeId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetDiscountCodeDescription = {\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n};\n\nexport type SetDiscountCodeMaxApplications = {\n  maxApplications?: Maybe<Scalars[\"Long\"]>;\n};\n\nexport type SetDiscountCodeMaxApplicationsPerCustomer = {\n  maxApplicationsPerCustomer?: Maybe<Scalars[\"Long\"]>;\n};\n\nexport type SetDiscountCodeName = {\n  name?: Maybe<Array<LocalizedStringItemInputType>>;\n};\n\nexport type SetDiscountCodeValidFrom = {\n  validFrom?: Maybe<Scalars[\"DateTime\"]>;\n};\n\nexport type SetDiscountCodeValidFromAndUntil = {\n  validFrom?: Maybe<Scalars[\"DateTime\"]>;\n  validUntil?: Maybe<Scalars[\"DateTime\"]>;\n};\n\nexport type SetDiscountCodeValidUntil = {\n  validUntil?: Maybe<Scalars[\"DateTime\"]>;\n};\n\nexport type SetInputTip = {\n  attributeName: Scalars[\"String\"];\n  inputTip?: Maybe<Array<LocalizedStringItemInputType>>;\n};\n\nexport type SetInventoryEntryCustomField = {\n  name: Scalars[\"String\"];\n  value?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetInventoryEntryCustomType = {\n  typeId?: Maybe<Scalars[\"String\"]>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  type?: Maybe<ResourceIdentifierInput>;\n  fields?: Maybe<Array<CustomFieldInput>>;\n};\n\nexport type SetInventoryEntryExpectedDelivery = {\n  expectedDelivery?: Maybe<Scalars[\"DateTime\"]>;\n};\n\nexport type SetInventoryEntryRestockableInDays = {\n  restockableInDays?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type SetInventoryEntrySupplyChannel = {\n  supplyChannel?: Maybe<ResourceIdentifierInput>;\n};\n\nexport type SetKey = {\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetMyCartShippingMethod = {\n  shippingMethod?: Maybe<ResourceIdentifierInput>;\n};\n\nexport type SetOrderBillingAddress = {\n  address?: Maybe<AddressInput>;\n};\n\nexport type SetOrderCustomerEmail = {\n  email?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetOrderCustomerId = {\n  customerId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetOrderCustomField = {\n  name: Scalars[\"String\"];\n  value?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetOrderCustomLineItemCustomField = {\n  customLineItemId: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  value?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetOrderCustomLineItemCustomType = {\n  customLineItemId: Scalars[\"String\"];\n  fields?: Maybe<Array<CustomFieldInput>>;\n  type?: Maybe<ResourceIdentifierInput>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  typeId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetOrderCustomLineItemShippingDetails = {\n  customLineItemId: Scalars[\"String\"];\n  shippingDetails?: Maybe<ItemShippingDetailsDraftType>;\n};\n\nexport type SetOrderCustomType = {\n  fields?: Maybe<Array<CustomFieldInput>>;\n  type?: Maybe<ResourceIdentifierInput>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  typeId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetOrderDeliveryAddress = {\n  deliveryId: Scalars[\"String\"];\n  address?: Maybe<AddressInput>;\n};\n\nexport type SetOrderDeliveryItems = {\n  deliveryId: Scalars[\"String\"];\n  items: Array<DeliveryItemDraftType>;\n};\n\nexport type SetOrderLineItemCustomField = {\n  lineItemId: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  value?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetOrderLineItemCustomType = {\n  lineItemId: Scalars[\"String\"];\n  fields?: Maybe<Array<CustomFieldInput>>;\n  type?: Maybe<ResourceIdentifierInput>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  typeId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetOrderLineItemShippingDetails = {\n  lineItemId: Scalars[\"String\"];\n  shippingDetails?: Maybe<ItemShippingDetailsDraftType>;\n};\n\nexport type SetOrderLocale = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n};\n\nexport type SetOrderNumber = {\n  orderNumber?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetOrderParcelItems = {\n  parcelId: Scalars[\"String\"];\n  items: Array<DeliveryItemDraftType>;\n};\n\nexport type SetOrderParcelMeasurements = {\n  parcelId: Scalars[\"String\"];\n  measurements?: Maybe<ParcelMeasurementsDraftType>;\n};\n\nexport type SetOrderParcelTrackingData = {\n  parcelId: Scalars[\"String\"];\n  trackingData?: Maybe<TrackingDataDraftType>;\n};\n\nexport type SetOrderReturnPaymentState = {\n  returnItemId: Scalars[\"String\"];\n  paymentState: ReturnPaymentState;\n};\n\nexport type SetOrderReturnShipmentState = {\n  returnItemId: Scalars[\"String\"];\n  shipmentState: ReturnShipmentState;\n};\n\nexport type SetOrderShippingAddress = {\n  address?: Maybe<AddressInput>;\n};\n\nexport type SetProductAssetCustomField = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  catalog?: Maybe<ReferenceInput>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n  value?: Maybe<Scalars[\"String\"]>;\n  name: Scalars[\"String\"];\n  assetKey?: Maybe<Scalars[\"String\"]>;\n  assetId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetProductAssetCustomType = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  catalog?: Maybe<ReferenceInput>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n  typeId?: Maybe<Scalars[\"String\"]>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  type?: Maybe<ResourceIdentifierInput>;\n  fields?: Maybe<Array<CustomFieldInput>>;\n  assetKey?: Maybe<Scalars[\"String\"]>;\n  assetId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetProductAssetDescription = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  catalog?: Maybe<ReferenceInput>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n  assetKey?: Maybe<Scalars[\"String\"]>;\n  assetId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetProductAssetKey = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  catalog?: Maybe<ReferenceInput>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n  assetKey?: Maybe<Scalars[\"String\"]>;\n  assetId: Scalars[\"String\"];\n};\n\nexport type SetProductAssetSources = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  catalog?: Maybe<ReferenceInput>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n  sources?: Maybe<Array<AssetSourceInput>>;\n  assetKey?: Maybe<Scalars[\"String\"]>;\n  assetId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetProductAssetTags = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  catalog?: Maybe<ReferenceInput>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n  tags?: Maybe<Array<Scalars[\"String\"]>>;\n  assetKey?: Maybe<Scalars[\"String\"]>;\n  assetId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetProductAttribute = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  name: Scalars[\"String\"];\n  value?: Maybe<Scalars[\"String\"]>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type SetProductAttributeInAllVariants = {\n  name: Scalars[\"String\"];\n  value?: Maybe<Scalars[\"String\"]>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type SetProductCategoryOrderHint = {\n  categoryId: Scalars[\"String\"];\n  orderHint?: Maybe<Scalars[\"String\"]>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type SetProductDescription = {\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type SetProductDiscountDescription = {\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n};\n\nexport type SetProductDiscountedPrice = {\n  priceId: Scalars[\"String\"];\n  discounted?: Maybe<DiscountedProductPriceValueInput>;\n  catalog?: Maybe<ReferenceInput>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type SetProductDiscountKey = {\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetProductDiscountValidFrom = {\n  validFrom?: Maybe<Scalars[\"DateTime\"]>;\n};\n\nexport type SetProductDiscountValidFromAndUntil = {\n  validFrom?: Maybe<Scalars[\"DateTime\"]>;\n  validUntil?: Maybe<Scalars[\"DateTime\"]>;\n};\n\nexport type SetProductDiscountValidUntil = {\n  validUntil?: Maybe<Scalars[\"DateTime\"]>;\n};\n\nexport type SetProductImageLabel = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  imageUrl: Scalars[\"String\"];\n  label?: Maybe<Scalars[\"String\"]>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type SetProductKey = {\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetProductMetaAttributes = {\n  metaDescription?: Maybe<Array<LocalizedStringItemInputType>>;\n  metaKeywords?: Maybe<Array<LocalizedStringItemInputType>>;\n  metaTitle?: Maybe<Array<LocalizedStringItemInputType>>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type SetProductMetaDescription = {\n  metaDescription?: Maybe<Array<LocalizedStringItemInputType>>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type SetProductMetaKeywords = {\n  metaKeywords?: Maybe<Array<LocalizedStringItemInputType>>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type SetProductMetaTitle = {\n  metaTitle?: Maybe<Array<LocalizedStringItemInputType>>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type SetProductPriceCustomField = {\n  priceId: Scalars[\"String\"];\n  catalog?: Maybe<ReferenceInput>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n  name: Scalars[\"String\"];\n  value?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetProductPriceCustomType = {\n  priceId: Scalars[\"String\"];\n  catalog?: Maybe<ReferenceInput>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n  fields?: Maybe<Array<CustomFieldInput>>;\n  type?: Maybe<ResourceIdentifierInput>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  typeId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetProductPrices = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  prices: Array<ProductPriceDataInput>;\n  catalog?: Maybe<ReferenceInput>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type SetProductSku = {\n  variantId: Scalars[\"Int\"];\n  sku?: Maybe<Scalars[\"String\"]>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type SetProductTaxCategory = {\n  taxCategory?: Maybe<ResourceIdentifierInput>;\n};\n\nexport type SetProductVariantKey = {\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type SetProjectSettingsExternalOAuth = {\n  externalOAuth?: Maybe<ExternalOAuthDraft>;\n};\n\nexport type SetProjectSettingsShippingRateInputType = {\n  shippingRateInputType?: Maybe<ShippingRateInputTypeInput>;\n};\n\nexport type SetSearchKeywords = {\n  searchKeywords: Array<SearchKeywordInput>;\n  staged?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type SetShippingMethodDescription = {\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetShippingMethodKey = {\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetShippingMethodPredicate = {\n  predicate?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetShoppingListAnonymousId = {\n  anonymousId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetShoppingListCustomer = {\n  customer?: Maybe<ResourceIdentifierInput>;\n};\n\nexport type SetShoppingListCustomField = {\n  name: Scalars[\"String\"];\n  value?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetShoppingListCustomType = {\n  fields?: Maybe<Array<CustomFieldInput>>;\n  type?: Maybe<ResourceIdentifierInput>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  typeId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetShoppingListDeleteDaysAfterLastModification = {\n  deleteDaysAfterLastModification?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type SetShoppingListDescription = {\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n};\n\nexport type SetShoppingListKey = {\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetShoppingListLineItemCustomField = {\n  lineItemId: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  value?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetShoppingListLineItemCustomType = {\n  lineItemId: Scalars[\"String\"];\n  fields?: Maybe<Array<CustomFieldInput>>;\n  type?: Maybe<ResourceIdentifierInput>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  typeId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetShoppingListSlug = {\n  slug?: Maybe<Array<LocalizedStringItemInputType>>;\n};\n\nexport type SetShoppingListTextLineItemCustomField = {\n  textLineItemId: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  value?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetShoppingListTextLineItemCustomType = {\n  textLineItemId: Scalars[\"String\"];\n  fields?: Maybe<Array<CustomFieldInput>>;\n  type?: Maybe<ResourceIdentifierInput>;\n  typeKey?: Maybe<Scalars[\"String\"]>;\n  typeId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetShoppingListTextLineItemDescription = {\n  textLineItemId: Scalars[\"String\"];\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n};\n\nexport type SetStoreLanguages = {\n  languages?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type SetStoreName = {\n  name?: Maybe<Array<LocalizedStringItemInputType>>;\n};\n\nexport type SetTaxCategoryKey = {\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetType = FieldType & {\n  __typename?: \"SetType\";\n  elementType: FieldType;\n  name: Scalars[\"String\"];\n};\n\nexport type SetZoneDescription = {\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type SetZoneKey = {\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport enum ShipmentState {\n  Delayed = \"Delayed\",\n  Backorder = \"Backorder\",\n  Partial = \"Partial\",\n  Pending = \"Pending\",\n  Ready = \"Ready\",\n  Shipped = \"Shipped\"\n}\n\nexport type ShippingInfo = {\n  __typename?: \"ShippingInfo\";\n  shippingMethodName: Scalars[\"String\"];\n  price: Money;\n  shippingRate: ShippingRate;\n  taxRate?: Maybe<TaxRate>;\n  taxCategory?: Maybe<Reference>;\n  deliveries: Array<Delivery>;\n  discountedPrice?: Maybe<DiscountedLineItemPrice>;\n  taxedPrice?: Maybe<TaxedItemPrice>;\n  shippingMethodState: ShippingMethodState;\n  shippingMethod?: Maybe<ShippingMethod>;\n  shippingMethodRef?: Maybe<Reference>;\n};\n\nexport type ShippingMethod = Versioned & {\n  __typename?: \"ShippingMethod\";\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  zoneRates: Array<ZoneRate>;\n  isDefault: Scalars[\"Boolean\"];\n  predicate?: Maybe<Scalars[\"String\"]>;\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  key?: Maybe<Scalars[\"String\"]>;\n  lastModifiedBy?: Maybe<Initiator>;\n  createdBy?: Maybe<Initiator>;\n  taxCategoryRef?: Maybe<Reference>;\n  taxCategory?: Maybe<TaxCategory>;\n};\n\nexport type ShippingMethodDraft = {\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  taxCategory: ResourceIdentifierInput;\n  zoneRates?: Maybe<Array<ZoneRateDraft>>;\n  isDefault: Scalars[\"Boolean\"];\n  predicate?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ShippingMethodQueryResult = {\n  __typename?: \"ShippingMethodQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<ShippingMethod>;\n};\n\n/** A field to retrieve available shipping methods for a cart. */\nexport type ShippingMethodsByCartInterface = {\n  shippingMethodsByCart: Array<ShippingMethod>;\n};\n\n/** A field to retrieve available shipping methods for a cart. */\nexport type ShippingMethodsByCartInterfaceShippingMethodsByCartArgs = {\n  id: Scalars[\"String\"];\n};\n\nexport enum ShippingMethodState {\n  /** Either there is no predicate defined for the ShippingMethod or the given predicate matches the cart */\n  MatchesCart = \"MatchesCart\",\n  /** The ShippingMethod predicate does not match the cart. Ordering this cart will\n   * fail with error ShippingMethodDoesNotMatchCart\n   */\n  DoesNotMatchCart = \"DoesNotMatchCart\"\n}\n\nexport type ShippingMethodUpdateAction = {\n  addShippingRate?: Maybe<AddShippingMethodShippingRate>;\n  addZone?: Maybe<AddShippingMethodZone>;\n  changeIsDefault?: Maybe<ChangeShippingMethodIsDefault>;\n  changeName?: Maybe<ChangeShippingMethodName>;\n  changeTaxCategory?: Maybe<ChangeShippingMethodTaxCategory>;\n  removeShippingRate?: Maybe<RemoveShippingMethodShippingRate>;\n  removeZone?: Maybe<RemoveShippingMethodZone>;\n  setDescription?: Maybe<SetShippingMethodDescription>;\n  setKey?: Maybe<SetShippingMethodKey>;\n  setPredicate?: Maybe<SetShippingMethodPredicate>;\n};\n\n/** Shipping Rate */\nexport type ShippingRate = {\n  __typename?: \"ShippingRate\";\n  price: Money;\n  freeAbove?: Maybe<Money>;\n  isMatching?: Maybe<Scalars[\"Boolean\"]>;\n  tiers: Array<ShippingRatePriceTier>;\n};\n\nexport type ShippingRateCartClassificationPriceTier = ShippingRatePriceTier & {\n  __typename?: \"ShippingRateCartClassificationPriceTier\";\n  value: Scalars[\"String\"];\n  price: Money;\n  isMatching?: Maybe<Scalars[\"Boolean\"]>;\n  type: Scalars[\"String\"];\n};\n\nexport type ShippingRateCartScorePriceTier = ShippingRatePriceTier & {\n  __typename?: \"ShippingRateCartScorePriceTier\";\n  score: Scalars[\"Int\"];\n  price?: Maybe<Money>;\n  priceFunction?: Maybe<PriceFunction>;\n  isMatching?: Maybe<Scalars[\"Boolean\"]>;\n  type: Scalars[\"String\"];\n};\n\nexport type ShippingRateCartValuePriceTier = ShippingRatePriceTier & {\n  __typename?: \"ShippingRateCartValuePriceTier\";\n  minimumCentAmount: Scalars[\"Int\"];\n  price: Money;\n  isMatching?: Maybe<Scalars[\"Boolean\"]>;\n  type: Scalars[\"String\"];\n};\n\nexport type ShippingRateDraft = {\n  price: MoneyDraft;\n  freeAbove?: Maybe<MoneyDraft>;\n  tiers?: Maybe<Array<ShippingRatePriceTierDraft>>;\n};\n\nexport type ShippingRateInput = {\n  type: Scalars[\"String\"];\n};\n\nexport type ShippingRateInputDraft = {\n  Classification?: Maybe<ClassificationShippingRateInputDraft>;\n  Score?: Maybe<ScoreShippingRateInputDraft>;\n};\n\nexport type ShippingRateInputLocalizedEnumValue = {\n  __typename?: \"ShippingRateInputLocalizedEnumValue\";\n  key: Scalars[\"String\"];\n  label?: Maybe<Scalars[\"String\"]>;\n  labelAllLocales: Array<LocalizedString>;\n};\n\nexport type ShippingRateInputLocalizedEnumValueLabelArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type ShippingRateInputType = {\n  type: Scalars[\"String\"];\n};\n\nexport type ShippingRateInputTypeInput = {\n  CartValue?: Maybe<CartValueInput>;\n  CartClassification?: Maybe<CartClassificationInput>;\n  CartScore?: Maybe<CartScoreInput>;\n};\n\nexport type ShippingRatePriceTier = {\n  type: Scalars[\"String\"];\n};\n\nexport type ShippingRatePriceTierCartClassificationDraft = {\n  value: Scalars[\"String\"];\n  price: MoneyDraft;\n};\n\nexport type ShippingRatePriceTierCartScoreDraft = {\n  score: Scalars[\"Int\"];\n  price?: Maybe<MoneyDraft>;\n  priceFunction?: Maybe<PriceFunctionDraft>;\n};\n\nexport type ShippingRatePriceTierCartValueDraft = {\n  minimumCentAmount: Scalars[\"Int\"];\n  price: MoneyDraft;\n};\n\nexport type ShippingRatePriceTierDraft = {\n  CartValue?: Maybe<ShippingRatePriceTierCartValueDraft>;\n  CartClassification?: Maybe<ShippingRatePriceTierCartClassificationDraft>;\n  CartScore?: Maybe<ShippingRatePriceTierCartScoreDraft>;\n};\n\nexport type ShippingTarget = CartDiscountTarget & {\n  __typename?: \"ShippingTarget\";\n  type: Scalars[\"String\"];\n};\n\nexport type ShippingTargetDraft = {\n  addressKey: Scalars[\"String\"];\n  quantity: Scalars[\"Long\"];\n};\n\nexport type ShippingTargetDraftType = {\n  addressKey: Scalars[\"String\"];\n  quantity: Scalars[\"Long\"];\n};\n\nexport type ShippingTargetInput = {\n  dummy?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ShoppingList = Versioned & {\n  __typename?: \"ShoppingList\";\n  key?: Maybe<Scalars[\"String\"]>;\n  name?: Maybe<Scalars[\"String\"]>;\n  nameAllLocales: Array<LocalizedString>;\n  description?: Maybe<Scalars[\"String\"]>;\n  descriptionAllLocales?: Maybe<Array<LocalizedString>>;\n  slug?: Maybe<Scalars[\"String\"]>;\n  slugAllLocales?: Maybe<Array<LocalizedString>>;\n  customerRef?: Maybe<Reference>;\n  customer?: Maybe<Customer>;\n  anonymousId?: Maybe<Scalars[\"String\"]>;\n  lineItems: Array<ShoppingListLineItem>;\n  textLineItems: Array<TextLineItem>;\n  custom?: Maybe<CustomFieldsType>;\n  deleteDaysAfterLastModification?: Maybe<Scalars[\"Int\"]>;\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n};\n\nexport type ShoppingListNameArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type ShoppingListDescriptionArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type ShoppingListSlugArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type ShoppingListDraft = {\n  name: Array<LocalizedStringItemInputType>;\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n  lineItems?: Maybe<Array<ShoppingListLineItemDraft>>;\n  textLineItems?: Maybe<Array<TextLineItemDraft>>;\n  custom?: Maybe<CustomFieldsDraft>;\n  deleteDaysAfterLastModification?: Maybe<Scalars[\"Int\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n  customer?: Maybe<ResourceIdentifierInput>;\n  slug?: Maybe<Array<LocalizedStringItemInputType>>;\n  anonymousId?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ShoppingListLineItem = {\n  __typename?: \"ShoppingListLineItem\";\n  id: Scalars[\"String\"];\n  productId: Scalars[\"String\"];\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  productTypeRef: Reference;\n  productType: ProductTypeDefinition;\n  quantity: Scalars[\"Int\"];\n  addedAt: Scalars[\"DateTime\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  nameAllLocales: Array<LocalizedString>;\n  deactivatedAt?: Maybe<Scalars[\"DateTime\"]>;\n  custom?: Maybe<CustomFieldsType>;\n  productSlug?: Maybe<Scalars[\"String\"]>;\n  variant?: Maybe<ProductVariant>;\n};\n\nexport type ShoppingListLineItemNameArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type ShoppingListLineItemProductSlugArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type ShoppingListLineItemDraft = {\n  productId?: Maybe<Scalars[\"String\"]>;\n  sku?: Maybe<Scalars[\"String\"]>;\n  variantId?: Maybe<Scalars[\"Int\"]>;\n  quantity?: Maybe<Scalars[\"Int\"]>;\n  custom?: Maybe<CustomFieldsDraft>;\n  addedAt?: Maybe<Scalars[\"DateTime\"]>;\n};\n\n/** Fields to access shopping lists. Includes direct access to a single list and searching for shopping lists. */\nexport type ShoppingListQueryInterface = {\n  shoppingList?: Maybe<ShoppingList>;\n  shoppingLists: ShoppingListQueryResult;\n};\n\n/** Fields to access shopping lists. Includes direct access to a single list and searching for shopping lists. */\nexport type ShoppingListQueryInterfaceShoppingListArgs = {\n  id?: Maybe<Scalars[\"String\"]>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Fields to access shopping lists. Includes direct access to a single list and searching for shopping lists. */\nexport type ShoppingListQueryInterfaceShoppingListsArgs = {\n  where?: Maybe<Scalars[\"String\"]>;\n  sort?: Maybe<Array<Scalars[\"String\"]>>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  offset?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type ShoppingListQueryResult = {\n  __typename?: \"ShoppingListQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<ShoppingList>;\n};\n\nexport type ShoppingListUpdateAction = {\n  addLineItem?: Maybe<AddShoppingListLineItem>;\n  addTextLineItem?: Maybe<AddShoppingListTextLineItem>;\n  changeLineItemQuantity?: Maybe<ChangeShoppingListLineItemQuantity>;\n  changeLineItemsOrder?: Maybe<ChangeShoppingListLineItemsOrder>;\n  changeName?: Maybe<ChangeShoppingListName>;\n  changeTextLineItemName?: Maybe<ChangeShoppingListTextLineItemName>;\n  changeTextLineItemQuantity?: Maybe<ChangeShoppingListTextLineItemQuantity>;\n  changeTextLineItemsOrder?: Maybe<ChangeShoppingListTextLineItemsOrder>;\n  removeLineItem?: Maybe<RemoveShoppingListLineItem>;\n  removeTextLineItem?: Maybe<RemoveShoppingListTextLineItem>;\n  setAnonymousId?: Maybe<SetShoppingListAnonymousId>;\n  setCustomField?: Maybe<SetShoppingListCustomField>;\n  setCustomType?: Maybe<SetShoppingListCustomType>;\n  setCustomer?: Maybe<SetShoppingListCustomer>;\n  setDeleteDaysAfterLastModification?: Maybe<\n    SetShoppingListDeleteDaysAfterLastModification\n  >;\n  setDescription?: Maybe<SetShoppingListDescription>;\n  setKey?: Maybe<SetShoppingListKey>;\n  setLineItemCustomField?: Maybe<SetShoppingListLineItemCustomField>;\n  setLineItemCustomType?: Maybe<SetShoppingListLineItemCustomType>;\n  setSlug?: Maybe<SetShoppingListSlug>;\n  setTextLineItemCustomField?: Maybe<SetShoppingListTextLineItemCustomField>;\n  setTextLineItemCustomType?: Maybe<SetShoppingListTextLineItemCustomType>;\n  setTextLineItemDescription?: Maybe<SetShoppingListTextLineItemDescription>;\n};\n\nexport type SimpleAttributeTypeDraft = {\n  dummy?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Describes how this discount interacts with other discounts */\nexport enum StackingMode {\n  /** Don’t apply any more matching discounts after this one. */\n  StopAfterThisDiscount = \"StopAfterThisDiscount\",\n  /** Default. Continue applying other matching discounts after applying this one. */\n  Stacking = \"Stacking\"\n}\n\n/** [State](http://dev.commercetools.com/http-api-projects-states.html) */\nexport type State = Versioned & {\n  __typename?: \"State\";\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  key?: Maybe<Scalars[\"String\"]>;\n  type: StateType;\n  roles: Array<StateRole>;\n  name?: Maybe<Scalars[\"String\"]>;\n  nameAllLocales?: Maybe<Array<LocalizedString>>;\n  description?: Maybe<Scalars[\"String\"]>;\n  descriptionAllLocales?: Maybe<Array<LocalizedString>>;\n  builtIn: Scalars[\"Boolean\"];\n  transitionsRef?: Maybe<Array<Reference>>;\n  transitions?: Maybe<Array<State>>;\n  initial: Scalars[\"Boolean\"];\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n};\n\n/** [State](http://dev.commercetools.com/http-api-projects-states.html) */\nexport type StateNameArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\n/** [State](http://dev.commercetools.com/http-api-projects-states.html) */\nexport type StateDescriptionArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type StateQueryResult = {\n  __typename?: \"StateQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<State>;\n};\n\nexport enum StateRole {\n  Return = \"Return\",\n  ReviewIncludedInStatistics = \"ReviewIncludedInStatistics\"\n}\n\nexport enum StateType {\n  OrderState = \"OrderState\",\n  ProductState = \"ProductState\",\n  ReviewState = \"ReviewState\",\n  PaymentState = \"PaymentState\",\n  LineItemState = \"LineItemState\"\n}\n\n/** [BETA] Stores allow defining different contexts for a project. */\nexport type Store = Versioned & {\n  __typename?: \"Store\";\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  key: Scalars[\"String\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  nameAllLocales?: Maybe<Array<LocalizedString>>;\n  languages?: Maybe<Array<Scalars[\"Locale\"]>>;\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n};\n\n/** [BETA] Stores allow defining different contexts for a project. */\nexport type StoreNameArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type StoreQueryResult = {\n  __typename?: \"StoreQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<Store>;\n};\n\nexport type StoreUpdateAction = {\n  setLanguages?: Maybe<SetStoreLanguages>;\n  setName?: Maybe<SetStoreName>;\n};\n\nexport type StringAttribute = Attribute & {\n  __typename?: \"StringAttribute\";\n  value: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n};\n\nexport type StringField = CustomField & {\n  __typename?: \"StringField\";\n  value: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n};\n\nexport type StringType = FieldType & {\n  __typename?: \"StringType\";\n  name: Scalars[\"String\"];\n};\n\nexport type SubRate = {\n  __typename?: \"SubRate\";\n  name: Scalars[\"String\"];\n  amount: Scalars[\"Float\"];\n};\n\nexport type SubRateDraft = {\n  name: Scalars[\"String\"];\n  amount: Scalars[\"Float\"];\n};\n\n/** Stores information about order synchronization activities (like export or import). */\n// This file is generated do not change it.\n\nexport type SyncInfo = {\n  __typename?: \"SyncInfo\";\n  channelRef: Reference;\n  channel?: Maybe<Channel>;\n  externalId?: Maybe<Scalars[\"String\"]>;\n  syncedAt: Scalars[\"DateTime\"];\n};\n\nexport enum TaxCalculationMode {\n  /** This calculation mode calculates the taxes on the unit price before multiplying with the quantity.\n   * E.g. `($1.08 * 1.19 = $1.2852 -> $1.29 rounded) * 3 = $3.87`\n   */\n  UnitPriceLevel = \"UnitPriceLevel\",\n  /** Default. This calculation mode calculates the taxes after the unit price is multiplied with the quantity.\n   * E.g. `($1.08 * 3 = $3.24) * 1.19 = $3.8556 -> $3.86 rounded`\n   */\n  LineItemLevel = \"LineItemLevel\"\n}\n\n/** Tax Categories define how products are to be taxed in different countries. */\nexport type TaxCategory = Versioned & {\n  __typename?: \"TaxCategory\";\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  rates: Array<TaxRate>;\n  key?: Maybe<Scalars[\"String\"]>;\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n};\n\nexport type TaxCategoryAddTaxRate = {\n  taxRate: TaxRateDraft;\n};\n\nexport type TaxCategoryChangeName = {\n  name: Scalars[\"String\"];\n};\n\nexport type TaxCategoryDraft = {\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  rates?: Maybe<Array<TaxRateDraft>>;\n  key?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type TaxCategoryQueryResult = {\n  __typename?: \"TaxCategoryQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<TaxCategory>;\n};\n\nexport type TaxCategoryRemoveTaxRate = {\n  taxRateId: Scalars[\"String\"];\n};\n\nexport type TaxCategoryReplaceTaxRate = {\n  taxRateId: Scalars[\"String\"];\n  taxRate: TaxRateDraft;\n};\n\nexport type TaxCategorySetDescription = {\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type TaxCategoryUpdateAction = {\n  changeName?: Maybe<TaxCategoryChangeName>;\n  setDescription?: Maybe<TaxCategorySetDescription>;\n  addTaxRate?: Maybe<TaxCategoryAddTaxRate>;\n  replaceTaxRate?: Maybe<TaxCategoryReplaceTaxRate>;\n  removeTaxRate?: Maybe<TaxCategoryRemoveTaxRate>;\n  setKey?: Maybe<SetTaxCategoryKey>;\n};\n\nexport type TaxedItemPrice = {\n  __typename?: \"TaxedItemPrice\";\n  totalNet: Money;\n  totalGross: Money;\n};\n\nexport type TaxedPrice = {\n  __typename?: \"TaxedPrice\";\n  totalNet: Money;\n  totalGross: Money;\n  taxPortions: Array<TaxPortion>;\n};\n\nexport enum TaxMode {\n  /** No taxes are added to the cart. */\n  Disabled = \"Disabled\",\n  /** The tax amounts and the tax rates as well as the tax portions are set externally per ExternalTaxAmountDraft.\n   * A cart with this tax mode can only be ordered if the cart itself and all line items, all custom line items and\n   * the shipping method have an external tax amount and rate set\n   */\n  ExternalAmount = \"ExternalAmount\",\n  /** The tax rates are set externally per ExternalTaxRateDraft. A cart with this tax mode can only be ordered if all\n   * line items, all custom line items and the shipping method have an external tax rate set. The totalNet and\n   * totalGross as well as the taxPortions fields are calculated by the platform according to the taxRoundingMode.\n   */\n  External = \"External\",\n  /** The tax rates are selected by the platform from the TaxCategories based on the cart shipping address.\n   * The totalNet and totalGross as well as the taxPortions fields are calculated by the platform according to the\n   * taxRoundingMode.\n   */\n  Platform = \"Platform\"\n}\n\n/** Represents the portions that sum up to the totalGross field of a TaxedPrice. The portions are calculated\n * from the TaxRates. If a tax rate has SubRates, they are used and can be identified by name. Tax portions\n * from line items that have the same rate and name will be accumulated to the same tax portion.\n */\nexport type TaxPortion = {\n  __typename?: \"TaxPortion\";\n  rate: Scalars[\"Float\"];\n  amount: Money;\n  name?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type TaxPortionDraft = {\n  name?: Maybe<Scalars[\"String\"]>;\n  rate: Scalars[\"Float\"];\n  amount: MoneyInput;\n};\n\nexport type TaxRate = {\n  __typename?: \"TaxRate\";\n  name: Scalars[\"String\"];\n  amount: Scalars[\"Float\"];\n  includedInPrice: Scalars[\"Boolean\"];\n  country: Scalars[\"Country\"];\n  state?: Maybe<Scalars[\"String\"]>;\n  id?: Maybe<Scalars[\"String\"]>;\n  subRates: Array<SubRate>;\n};\n\nexport type TaxRateDraft = {\n  name: Scalars[\"String\"];\n  amount?: Maybe<Scalars[\"Float\"]>;\n  includedInPrice: Scalars[\"Boolean\"];\n  country: Scalars[\"Country\"];\n  state?: Maybe<Scalars[\"String\"]>;\n  subRates?: Maybe<Array<SubRateDraft>>;\n};\n\nexport type TextAttributeDefinitionType = AttributeDefinitionType & {\n  __typename?: \"TextAttributeDefinitionType\";\n  name: Scalars[\"String\"];\n};\n\n/** UI hint telling what kind of edit control should be displayed for a text attribute. */\nexport enum TextInputHint {\n  MultiLine = \"MultiLine\",\n  SingleLine = \"SingleLine\"\n}\n\nexport type TextLineItem = {\n  __typename?: \"TextLineItem\";\n  id: Scalars[\"String\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  nameAllLocales: Array<LocalizedString>;\n  description?: Maybe<Scalars[\"String\"]>;\n  descriptionAllLocales?: Maybe<Array<LocalizedString>>;\n  quantity: Scalars[\"Int\"];\n  custom?: Maybe<CustomFieldsType>;\n  addedAt: Scalars[\"DateTime\"];\n};\n\nexport type TextLineItemNameArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type TextLineItemDescriptionArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\nexport type TextLineItemDraft = {\n  name: Array<LocalizedStringItemInputType>;\n  description?: Maybe<Array<LocalizedStringItemInputType>>;\n  quantity?: Maybe<Scalars[\"Int\"]>;\n  custom?: Maybe<CustomFieldsDraft>;\n  addedAt?: Maybe<Scalars[\"DateTime\"]>;\n};\n\nexport type TimeAttribute = Attribute & {\n  __typename?: \"TimeAttribute\";\n  value: Scalars[\"Time\"];\n  name: Scalars[\"String\"];\n};\n\nexport type TimeAttributeDefinitionType = AttributeDefinitionType & {\n  __typename?: \"TimeAttributeDefinitionType\";\n  name: Scalars[\"String\"];\n};\n\nexport type TimeField = CustomField & {\n  __typename?: \"TimeField\";\n  value: Scalars[\"Time\"];\n  name: Scalars[\"String\"];\n};\n\nexport type TimeType = FieldType & {\n  __typename?: \"TimeType\";\n  name: Scalars[\"String\"];\n};\n\nexport type TrackingData = {\n  __typename?: \"TrackingData\";\n  trackingId?: Maybe<Scalars[\"String\"]>;\n  carrier?: Maybe<Scalars[\"String\"]>;\n  provider?: Maybe<Scalars[\"String\"]>;\n  providerTransaction?: Maybe<Scalars[\"String\"]>;\n  isReturn: Scalars[\"Boolean\"];\n};\n\nexport type TrackingDataDraftType = {\n  trackingId?: Maybe<Scalars[\"String\"]>;\n  carrier?: Maybe<Scalars[\"String\"]>;\n  provider?: Maybe<Scalars[\"String\"]>;\n  providerTransaction?: Maybe<Scalars[\"String\"]>;\n  isReturn?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type Transaction = {\n  __typename?: \"Transaction\";\n  id: Scalars[\"String\"];\n  timestamp?: Maybe<Scalars[\"DateTime\"]>;\n  type?: Maybe<TransactionType>;\n  amount: Money;\n  interactionId?: Maybe<Scalars[\"String\"]>;\n  state: TransactionState;\n};\n\nexport enum TransactionState {\n  Failure = \"Failure\",\n  Success = \"Success\",\n  Pending = \"Pending\",\n  Initial = \"Initial\"\n}\n\nexport enum TransactionType {\n  Chargeback = \"Chargeback\",\n  Refund = \"Refund\",\n  Charge = \"Charge\",\n  CancelAuthorization = \"CancelAuthorization\",\n  Authorization = \"Authorization\"\n}\n\nexport type TransitionOrderCustomLineItemState = {\n  customLineItemId: Scalars[\"String\"];\n  quantity: Scalars[\"Long\"];\n  fromState: ResourceIdentifierInput;\n  toState: ResourceIdentifierInput;\n  actualTransitionDate?: Maybe<Scalars[\"DateTime\"]>;\n};\n\nexport type TransitionOrderLineItemState = {\n  lineItemId: Scalars[\"String\"];\n  quantity: Scalars[\"Long\"];\n  fromState: ResourceIdentifierInput;\n  toState: ResourceIdentifierInput;\n  actualTransitionDate?: Maybe<Scalars[\"DateTime\"]>;\n};\n\nexport type TransitionOrderState = {\n  state: ResourceIdentifierInput;\n  force?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type TransitionProductState = {\n  state: ReferenceInput;\n  force?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type Type = {\n  typeRef: Reference;\n  type?: Maybe<TypeDefinition>;\n};\n\n/** Types define the structure of custom fields which can be attached to different entities throughout the platform. */\nexport type TypeDefinition = Versioned & {\n  __typename?: \"TypeDefinition\";\n  key: Scalars[\"String\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  nameAllLocales: Array<LocalizedString>;\n  descriptionAllLocales?: Maybe<Array<LocalizedString>>;\n  resourceTypeIds: Array<Scalars[\"String\"]>;\n  fieldDefinitions: Array<FieldDefinition>;\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n};\n\n/** Types define the structure of custom fields which can be attached to different entities throughout the platform. */\nexport type TypeDefinitionNameArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\n/** Types define the structure of custom fields which can be attached to different entities throughout the platform. */\nexport type TypeDefinitionDescriptionArgs = {\n  locale?: Maybe<Scalars[\"Locale\"]>;\n  acceptLanguage?: Maybe<Array<Scalars[\"Locale\"]>>;\n};\n\n/** Types define the structure of custom fields which can be attached to different entities throughout the platform. */\nexport type TypeDefinitionFieldDefinitionsArgs = {\n  includeNames?: Maybe<Array<Scalars[\"String\"]>>;\n  excludeNames?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\nexport type TypeDefinitionQueryResult = {\n  __typename?: \"TypeDefinitionQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<TypeDefinition>;\n};\n\nexport type UnpublishProduct = {\n  dummy?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type UpdateCartItemShippingAddress = {\n  address: AddressInput;\n};\n\nexport type UpdateOrderItemShippingAddress = {\n  address: AddressInput;\n};\n\nexport type UpdateOrderSyncInfo = {\n  channel: ResourceIdentifierInput;\n  syncedAt?: Maybe<Scalars[\"DateTime\"]>;\n  externalId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Versioned object have an ID and version and modification. Every update of this object changes it's version. */\nexport type Versioned = {\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n};\n\nexport type WhitespaceSuggestTokenizerInput = {\n  dummy?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Zones allow defining ShippingRates for specific Locations. */\nexport type Zone = Versioned & {\n  __typename?: \"Zone\";\n  name: Scalars[\"String\"];\n  key?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  locations: Array<Location>;\n  id: Scalars[\"String\"];\n  version: Scalars[\"Long\"];\n  createdAt: Scalars[\"DateTime\"];\n  lastModifiedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<Initiator>;\n  lastModifiedBy?: Maybe<Initiator>;\n};\n\nexport type ZoneLocation = {\n  country: Scalars[\"Country\"];\n  state?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type ZoneQueryResult = {\n  __typename?: \"ZoneQueryResult\";\n  offset: Scalars[\"Int\"];\n  count: Scalars[\"Int\"];\n  total: Scalars[\"Long\"];\n  results: Array<Zone>;\n};\n\nexport type ZoneRate = {\n  __typename?: \"ZoneRate\";\n  shippingRates: Array<ShippingRate>;\n  zoneRef?: Maybe<Reference>;\n  zone?: Maybe<Zone>;\n};\n\nexport type ZoneRateDraft = {\n  zone: ResourceIdentifierInput;\n  shippingRates?: Maybe<Array<ShippingRateDraft>>;\n};\n\nexport type ZoneUpdateAction = {\n  addLocation?: Maybe<AddZoneLocation>;\n  changeName?: Maybe<ChangeZoneName>;\n  removeLocation?: Maybe<RemoveZoneLocation>;\n  setDescription?: Maybe<SetZoneDescription>;\n  setKey?: Maybe<SetZoneKey>;\n};\n","import { Logger } from '@vue-storefront/core';\nimport { ProductVariant, Address, LineItem, ReferenceInput, ResourceIdentifierInput, AddressInput } from './../../types/GraphQL';\n\nconst hasContactInfo = details => Object.keys(details.contactInfo || {}).some(c => ['phone', 'email', 'mobile', 'fax'].includes(c));\n\nexport const createAddLineItemAction = (variant: ProductVariant, quantity: number) => ({\n  addLineItem: {\n    variantId: variant.id,\n    quantity: quantity,\n    sku: variant.sku\n  }\n});\n\nexport const createRemoveLineItemAction = (product: LineItem) => ({\n  removeLineItem: {\n    lineItemId: product.id,\n    quantity: product.quantity\n  }\n});\n\nexport const createChangeLineItemQuantityAction = (product: LineItem) => ({\n  changeLineItemQuantity: {\n    lineItemId: product.id,\n    quantity: product.quantity\n  }\n});\n\nexport const setShippingAddressAction = (shippingDetails: Address): { setShippingAddress: { address: AddressInput } } => {\n  if (hasContactInfo(shippingDetails)) {\n    Logger.warn('Using `contactInfo` on Address is being deprecated in the CT API, use `email` `phone` `mobile` and `fax` fields directly.');\n  }\n  return {\n    setShippingAddress: {\n      address: {\n        title: shippingDetails.title,\n        salutation: shippingDetails.salutation,\n        firstName: shippingDetails.firstName,\n        lastName: shippingDetails.lastName,\n        streetName: shippingDetails.streetName,\n        streetNumber: shippingDetails.streetNumber,\n        additionalStreetInfo: shippingDetails.additionalStreetInfo,\n        postalCode: shippingDetails.postalCode,\n        city: shippingDetails.city,\n        region: shippingDetails.region,\n        state: shippingDetails.state,\n        country: shippingDetails.country,\n        company: shippingDetails.company,\n        department: shippingDetails.department,\n        building: shippingDetails.building,\n        apartment: shippingDetails.apartment,\n        pOBox: shippingDetails.pOBox,\n        phone: shippingDetails.phone || shippingDetails.contactInfo?.phone,\n        mobile: shippingDetails.mobile || shippingDetails.contactInfo?.mobile,\n        email: shippingDetails.email || shippingDetails.contactInfo?.email,\n        fax: shippingDetails.fax || shippingDetails.contactInfo?.fax,\n        additionalAddressInfo: shippingDetails.additionalAddressInfo\n      }\n    }\n  };\n};\n\nexport const setShippingMethodAction = (shippingMethodId?: string) => ({\n  setShippingMethod: {\n    shippingMethod: shippingMethodId ? { id: shippingMethodId } : null\n  }\n});\n\nexport const addPayment = (payment: ResourceIdentifierInput) => ({\n  addPayment: { payment }\n});\n\nexport const setBillingAddressAction = (billingDetails: Address): { setBillingAddress: { address: AddressInput } } => {\n  if (hasContactInfo(billingDetails)) {\n    Logger.warn('Using `contactInfo` on Address is being deprecated in the CT API, use `email` `phone` `mobile` and `fax` fields directly.');\n  }\n  return {\n    setBillingAddress: {\n      address: {\n        title: billingDetails.title,\n        salutation: billingDetails.salutation,\n        firstName: billingDetails.firstName,\n        lastName: billingDetails.lastName,\n        streetName: billingDetails.streetName,\n        streetNumber: billingDetails.streetNumber,\n        additionalStreetInfo: billingDetails.additionalStreetInfo,\n        postalCode: billingDetails.postalCode,\n        city: billingDetails.city,\n        region: billingDetails.region,\n        state: billingDetails.state,\n        country: billingDetails.country,\n        company: billingDetails.company,\n        department: billingDetails.department,\n        building: billingDetails.building,\n        apartment: billingDetails.apartment,\n        pOBox: billingDetails.pOBox,\n        phone: billingDetails.phone || billingDetails.contactInfo?.phone,\n        mobile: billingDetails.mobile || billingDetails.contactInfo?.mobile,\n        email: billingDetails.email || billingDetails.contactInfo?.email,\n        fax: billingDetails.fax || billingDetails.contactInfo?.fax,\n        additionalAddressInfo: billingDetails.additionalAddressInfo\n      }\n    }\n  };\n};\n\nexport const addPaymentAction = (paymentMethodId: string) => ({\n  addPayment: {\n    payment: {\n      id: paymentMethodId\n    }\n  }\n});\n\nexport const addDiscountCodeAction = (code: string) => ({\n  addDiscountCode: { code }\n});\n\nexport const removeDiscountCodeAction = (discountCode: ReferenceInput) => ({\n  removeDiscountCode: { discountCode }\n});\n\nexport const setCustomerEmail = (email: string) => ({\n  setCustomerEmail: { email }\n});\n"],"names":["AttributeType","AnonymousCartSignInMode","AttributeConstraint","CartOrigin","CartState","ChannelRole","DiscountCodeState","InventoryMode","LineItemMode","LineItemPriceMode","OrderState","PaymentState","PublishScope","ReturnPaymentState","ReturnShipmentState","RoundingMode","SelectionMode","ShipmentState","ShippingMethodState","StackingMode","StateRole","StateType","TaxCalculationMode","TaxMode","TextInputHint","TransactionState","TransactionType","Logger"],"mappings":";;;;;;IAAa,oBAAoB,GAAG,4ZAuBlC;IAEW,eAAe,GAAG,qPAkB7B;AAEF;IACa,gBAAgB,GAAG,SAC5B,eAAe,4TAmBjB;IAEW,gBAAgB,GAAG,SAC5B,oBAAoB,8pCA+DtB;IAEW,sBAAsB,GAAG,8ZAwBpC;IAEW,YAAY,GAAG,SACxB,eAAe,YACf,gBAAgB,YAChB,gBAAgB,YAChB,sBAAsB,8mCAsExB;IAEW,aAAa,GAAG,SACzB,eAAe,YACf,gBAAgB;;AC7MpB,WAAY,aAAa;IACvB,2CAA0B,CAAA;IAC1B,uCAAsB,CAAA;IACtB,+CAA8B,CAAA;IAC9B,uCAAsB,CAAA;IACtB,2CAA0B,CAAA;IAC1B,uCAAsB,CAAA;IACtB,0DAAyC,CAAA;IACzC,8DAA6C,CAAA;IAC7C,yCAAwB,CAAA;IACxB,6CAA4B,CAAA;AAC9B,CAAC,EAXWA,qBAAa,KAAbA,qBAAa,QAWxB;;AC5CD;AA8TA,AAAA,WAAY,uBAAuB;;IAEjC,oFAAyD,CAAA;;;;;;;;;;;;;IAazD,0FAA+D,CAAA;AACjE,CAAC,EAhBWC,+BAAuB,KAAvBA,+BAAuB,QAgBlC;AA0HD,AAAA,WAAY,mBAAmB;;IAE7B,oCAAa,CAAA;;IAEb,wCAAiB,CAAA;;IAEjB,8DAAuC,CAAA;;IAEvC,gDAAyB,CAAA;AAC3B,CAAC,EATWC,2BAAmB,KAAnBA,2BAAmB,QAS9B;AAkXD,AAAA,WAAY,UAAU;;IAEpB,mCAAqB,CAAA;;IAErB,mCAAqB,CAAA;AACvB,CAAC,EALWC,kBAAU,KAAVA,kBAAU,QAKrB;AAsCD,AAAA,WAAY,SAAS;;IAEnB,gCAAmB,CAAA;;IAEnB,8BAAiB,CAAA;;IAEjB,8BAAiB,CAAA;AACnB,CAAC,EAPWC,iBAAS,KAATA,iBAAS,QAOpB;AA0pBD,AAAA,WAAY,WAAW;;IAErB,kDAAmC,CAAA;;;;IAInC,0DAA2C,CAAA;;IAE3C,0CAA2B,CAAA;;IAE3B,0CAA2B,CAAA;;;;;IAK3B,kCAAmB,CAAA;AACrB,CAAC,EAhBWC,mBAAW,KAAXA,mBAAW,QAgBtB;AA0pBD,AAAA,WAAY,iBAAiB;;;;;IAK3B,kGAA6E,CAAA;;;;IAI7E,0CAAqB,CAAA;;IAErB,oEAA+C,CAAA;;;;;IAK/C,gDAA2B,CAAA;;;;;IAK3B,0DAAqC,CAAA;;IAErC,4CAAuB,CAAA;AACzB,CAAC,EAxBWC,yBAAiB,KAAjBA,yBAAiB,QAwB5B;AAuaD,AAAA,WAAY,aAAa;;;;IAIvB,8BAAa,CAAA;;;;IAIb,kDAAiC,CAAA;;;;;;IAMjC,wCAAuB,CAAA;AACzB,CAAC,EAfWC,qBAAa,KAAbA,qBAAa,QAexB;AA2KD,AAAA,WAAY,YAAY;;;;;;;IAOtB,6CAA6B,CAAA;;;;IAI7B,qCAAqB,CAAA;AACvB,CAAC,EAZWC,oBAAY,KAAZA,oBAAY,QAYvB;AAED,AAAA,WAAY,iBAAiB;;IAE3B,0CAAqB,CAAA;;;;;IAKrB,oDAA+B,CAAA;;IAE/B,oDAA+B,CAAA;AACjC,CAAC,EAVWC,yBAAiB,KAAjBA,yBAAiB,QAU5B;AAurCD,AAAA,WAAY,UAAU;IACpB,qCAAuB,CAAA;IACvB,qCAAuB,CAAA;IACvB,mCAAqB,CAAA;IACrB,2BAAa,CAAA;AACf,CAAC,EALWC,kBAAU,KAAVA,kBAAU,QAKrB;AA4JD,AAAA,WAAY,YAAY;IACtB,6BAAa,CAAA;IACb,yCAAyB,CAAA;IACzB,mCAAmB,CAAA;IACnB,iCAAiB,CAAA;IACjB,yCAAyB,CAAA;AAC3B,CAAC,EANWC,oBAAY,KAAZA,oBAAY,QAMvB;AAgmBD,AAAA,WAAY,YAAY;;IAEtB,2BAAW,CAAA;;IAEX,iCAAiB,CAAA;AACnB,CAAC,EALWC,oBAAY,KAAZA,oBAAY,QAKvB;AA8lBD,AAAA,WAAY,kBAAkB;IAC5B,iDAA2B,CAAA;IAC3B,2CAAqB,CAAA;IACrB,yCAAmB,CAAA;IACnB,qDAA+B,CAAA;AACjC,CAAC,EALWC,0BAAkB,KAAlBA,0BAAkB,QAK7B;AAED,AAAA,WAAY,mBAAmB;IAC7B,4CAAqB,CAAA;IACrB,kDAA2B,CAAA;IAC3B,4CAAqB,CAAA;IACrB,0CAAmB,CAAA;AACrB,CAAC,EALWC,2BAAmB,KAAnBA,2BAAmB,QAK9B;AAUD,AAAA,WAAY,YAAY;;;;IAItB,qCAAqB,CAAA;;IAErB,iCAAiB,CAAA;;;;IAIjB,qCAAqB,CAAA;AACvB,CAAC,EAXWC,oBAAY,KAAZA,oBAAY,QAWvB;AA4BD,AACA,WAAY,aAAa;IACvB,gDAA+B,CAAA;IAC/B,sCAAqB,CAAA;AACvB,CAAC,EAHWC,qBAAa,KAAbA,qBAAa,QAGxB;AAy1BD,AAAA,WAAY,aAAa;IACvB,oCAAmB,CAAA;IACnB,wCAAuB,CAAA;IACvB,oCAAmB,CAAA;IACnB,oCAAmB,CAAA;IACnB,gCAAe,CAAA;IACf,oCAAmB,CAAA;AACrB,CAAC,EAPWC,qBAAa,KAAbA,qBAAa,QAOxB;AA+DD,AAAA,WAAY,mBAAmB;;IAE7B,kDAA2B,CAAA;;;;IAI3B,4DAAqC,CAAA;AACvC,CAAC,EAPWC,2BAAmB,KAAnBA,2BAAmB,QAO9B;AAuRD,AACA,WAAY,YAAY;;IAEtB,+DAA+C,CAAA;;IAE/C,qCAAqB,CAAA;AACvB,CAAC,EALWC,oBAAY,KAAZA,oBAAY,QAKvB;AA4CD,AAAA,WAAY,SAAS;IACnB,8BAAiB,CAAA;IACjB,sEAAyD,CAAA;AAC3D,CAAC,EAHWC,iBAAS,KAATA,iBAAS,QAGpB;AAED,AAAA,WAAY,SAAS;IACnB,sCAAyB,CAAA;IACzB,0CAA6B,CAAA;IAC7B,wCAA2B,CAAA;IAC3B,0CAA6B,CAAA;IAC7B,4CAA+B,CAAA;AACjC,CAAC,EANWC,iBAAS,KAATA,iBAAS,QAMpB;AA2ED,AAAA,WAAY,kBAAkB;;;;IAI5B,uDAAiC,CAAA;;;;IAIjC,qDAA+B,CAAA;AACjC,CAAC,EATWC,0BAAkB,KAAlBA,0BAAkB,QAS7B;AA2ED,AAAA,WAAY,OAAO;;IAEjB,gCAAqB,CAAA;;;;;IAKrB,4CAAiC,CAAA;;;;;IAKjC,gCAAqB,CAAA;;;;;IAKrB,gCAAqB,CAAA;AACvB,CAAC,EAlBWC,eAAO,KAAPA,eAAO,QAkBlB;AA4CD,AACA,WAAY,aAAa;IACvB,wCAAuB,CAAA;IACvB,0CAAyB,CAAA;AAC3B,CAAC,EAHWC,qBAAa,KAAbA,qBAAa,QAGxB;AAiFD,AAAA,WAAY,gBAAgB;IAC1B,uCAAmB,CAAA;IACnB,uCAAmB,CAAA;IACnB,uCAAmB,CAAA;IACnB,uCAAmB,CAAA;AACrB,CAAC,EALWC,wBAAgB,KAAhBA,wBAAgB,QAK3B;AAED,AAAA,WAAY,eAAe;IACzB,4CAAyB,CAAA;IACzB,oCAAiB,CAAA;IACjB,oCAAiB,CAAA;IACjB,8DAA2C,CAAA;IAC3C,kDAA+B,CAAA;AACjC,CAAC,EANWC,uBAAe,KAAfA,uBAAe,QAM1B;;ACl+ND,IAAM,cAAc,GAAG,UAAA,OAAO,IAAI,OAAA,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAA,CAAC,GAAA,CAAC;AAEpI,AAAO,IAAM,uBAAuB,GAAG,UAAC,OAAuB,EAAE,QAAgB,IAAK,QAAC;IACrF,WAAW,EAAE;QACX,SAAS,EAAE,OAAO,CAAC,EAAE;QACrB,QAAQ,EAAE,QAAQ;QAClB,GAAG,EAAE,OAAO,CAAC,GAAG;KACjB;CACF,IAAC,CAAC;AAEH,AAAO,IAAM,0BAA0B,GAAG,UAAC,OAAiB,IAAK,QAAC;IAChE,cAAc,EAAE;QACd,UAAU,EAAE,OAAO,CAAC,EAAE;QACtB,QAAQ,EAAE,OAAO,CAAC,QAAQ;KAC3B;CACF,IAAC,CAAC;AAEH,AAAO,IAAM,kCAAkC,GAAG,UAAC,OAAiB,IAAK,QAAC;IACxE,sBAAsB,EAAE;QACtB,UAAU,EAAE,OAAO,CAAC,EAAE;QACtB,QAAQ,EAAE,OAAO,CAAC,QAAQ;KAC3B;CACF,IAAC,CAAC;AAEH,AAAO,IAAM,wBAAwB,GAAG,UAAC,eAAwB;;IAC/D,IAAI,cAAc,CAAC,eAAe,CAAC,EAAE;QACnCC,WAAM,CAAC,IAAI,CAAC,2HAA2H,CAAC,CAAC;KAC1I;IACD,OAAO;QACL,kBAAkB,EAAE;YAClB,OAAO,EAAE;gBACP,KAAK,EAAE,eAAe,CAAC,KAAK;gBAC5B,UAAU,EAAE,eAAe,CAAC,UAAU;gBACtC,SAAS,EAAE,eAAe,CAAC,SAAS;gBACpC,QAAQ,EAAE,eAAe,CAAC,QAAQ;gBAClC,UAAU,EAAE,eAAe,CAAC,UAAU;gBACtC,YAAY,EAAE,eAAe,CAAC,YAAY;gBAC1C,oBAAoB,EAAE,eAAe,CAAC,oBAAoB;gBAC1D,UAAU,EAAE,eAAe,CAAC,UAAU;gBACtC,IAAI,EAAE,eAAe,CAAC,IAAI;gBAC1B,MAAM,EAAE,eAAe,CAAC,MAAM;gBAC9B,KAAK,EAAE,eAAe,CAAC,KAAK;gBAC5B,OAAO,EAAE,eAAe,CAAC,OAAO;gBAChC,OAAO,EAAE,eAAe,CAAC,OAAO;gBAChC,UAAU,EAAE,eAAe,CAAC,UAAU;gBACtC,QAAQ,EAAE,eAAe,CAAC,QAAQ;gBAClC,SAAS,EAAE,eAAe,CAAC,SAAS;gBACpC,KAAK,EAAE,eAAe,CAAC,KAAK;gBAC5B,KAAK,EAAE,eAAe,CAAC,KAAK,KAAI,MAAA,eAAe,CAAC,WAAW,0CAAE,KAAK,CAAA;gBAClE,MAAM,EAAE,eAAe,CAAC,MAAM,KAAI,MAAA,eAAe,CAAC,WAAW,0CAAE,MAAM,CAAA;gBACrE,KAAK,EAAE,eAAe,CAAC,KAAK,KAAI,MAAA,eAAe,CAAC,WAAW,0CAAE,KAAK,CAAA;gBAClE,GAAG,EAAE,eAAe,CAAC,GAAG,KAAI,MAAA,eAAe,CAAC,WAAW,0CAAE,GAAG,CAAA;gBAC5D,qBAAqB,EAAE,eAAe,CAAC,qBAAqB;aAC7D;SACF;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,AAAO,IAAM,uBAAuB,GAAG,UAAC,gBAAyB,IAAK,QAAC;IACrE,iBAAiB,EAAE;QACjB,cAAc,EAAE,gBAAgB,GAAG,EAAE,EAAE,EAAE,gBAAgB,EAAE,GAAG,IAAI;KACnE;CACF,IAAC,CAAC;AAEH,AAAO,IAAM,UAAU,GAAG,UAAC,OAAgC,IAAK,QAAC;IAC/D,UAAU,EAAE,EAAE,OAAO,SAAA,EAAE;CACxB,IAAC,CAAC;AAEH,AAAO,IAAM,uBAAuB,GAAG,UAAC,cAAuB;;IAC7D,IAAI,cAAc,CAAC,cAAc,CAAC,EAAE;QAClCA,WAAM,CAAC,IAAI,CAAC,2HAA2H,CAAC,CAAC;KAC1I;IACD,OAAO;QACL,iBAAiB,EAAE;YACjB,OAAO,EAAE;gBACP,KAAK,EAAE,cAAc,CAAC,KAAK;gBAC3B,UAAU,EAAE,cAAc,CAAC,UAAU;gBACrC,SAAS,EAAE,cAAc,CAAC,SAAS;gBACnC,QAAQ,EAAE,cAAc,CAAC,QAAQ;gBACjC,UAAU,EAAE,cAAc,CAAC,UAAU;gBACrC,YAAY,EAAE,cAAc,CAAC,YAAY;gBACzC,oBAAoB,EAAE,cAAc,CAAC,oBAAoB;gBACzD,UAAU,EAAE,cAAc,CAAC,UAAU;gBACrC,IAAI,EAAE,cAAc,CAAC,IAAI;gBACzB,MAAM,EAAE,cAAc,CAAC,MAAM;gBAC7B,KAAK,EAAE,cAAc,CAAC,KAAK;gBAC3B,OAAO,EAAE,cAAc,CAAC,OAAO;gBAC/B,OAAO,EAAE,cAAc,CAAC,OAAO;gBAC/B,UAAU,EAAE,cAAc,CAAC,UAAU;gBACrC,QAAQ,EAAE,cAAc,CAAC,QAAQ;gBACjC,SAAS,EAAE,cAAc,CAAC,SAAS;gBACnC,KAAK,EAAE,cAAc,CAAC,KAAK;gBAC3B,KAAK,EAAE,cAAc,CAAC,KAAK,KAAI,MAAA,cAAc,CAAC,WAAW,0CAAE,KAAK,CAAA;gBAChE,MAAM,EAAE,cAAc,CAAC,MAAM,KAAI,MAAA,cAAc,CAAC,WAAW,0CAAE,MAAM,CAAA;gBACnE,KAAK,EAAE,cAAc,CAAC,KAAK,KAAI,MAAA,cAAc,CAAC,WAAW,0CAAE,KAAK,CAAA;gBAChE,GAAG,EAAE,cAAc,CAAC,GAAG,KAAI,MAAA,cAAc,CAAC,WAAW,0CAAE,GAAG,CAAA;gBAC1D,qBAAqB,EAAE,cAAc,CAAC,qBAAqB;aAC5D;SACF;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,AAAO,IAAM,gBAAgB,GAAG,UAAC,eAAuB,IAAK,QAAC;IAC5D,UAAU,EAAE;QACV,OAAO,EAAE;YACP,EAAE,EAAE,eAAe;SACpB;KACF;CACF,IAAC,CAAC;AAEH,AAAO,IAAM,qBAAqB,GAAG,UAAC,IAAY,IAAK,QAAC;IACtD,eAAe,EAAE,EAAE,IAAI,MAAA,EAAE;CAC1B,IAAC,CAAC;AAEH,AAAO,IAAM,wBAAwB,GAAG,UAAC,YAA4B,IAAK,QAAC;IACzE,kBAAkB,EAAE,EAAE,YAAY,cAAA,EAAE;CACrC,IAAC,CAAC;AAEH,AAAO,IAAM,gBAAgB,GAAG,UAAC,KAAa,IAAK,QAAC;IAClD,gBAAgB,EAAE,EAAE,KAAK,OAAA,EAAE;CAC5B,IAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;"}